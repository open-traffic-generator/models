components:
  schemas:
    Event:
      description: |-
        The optional container for event configuration.
      type: object
      properties:
        cp_events:
          description: |-
            True to enable all cp events. 
            Enabling this option may affect the resultant packet payload due to 
            additional instrumentation data.
          $ref: '#/components/schemas/Event.CPEvents'
          type: boolean
          default: false
          x-field-uid: 1
        dp_events:
          description: |-
            True to enable all dp events.
          $ref: '#/components/schemas/Event.DPEvents'
          x-field-uid: 2
    Event.CPEvents:
      description: |-
        The optional container for control plane event configuration.
      type: object
      properties:
        enable:
          description: |-
            True to enable all cp events.
          type: boolean
          default: false
          x-field-uid: 1
    Event.DPEvents:
      description: |-
        The optional container for data plane event configuration.
      type: object
      properties:
        enable:
          description: |-
            True to enable all dp events.
          type: boolean
          default: false
          x-field-uid: 1
        rx_rate_threshold:
          $ref: '#/components/schemas/Event.RxRateThreshold'
          x-field-uid: 2 
    Event.RxRateThreshold:
      description: |-
        The optional container for rx rate threshold event configuration.
      type: object
      properties:
        threshold:
          description: |-
            True to enable notifications when the rx rate of a flow passes above 
            or below the threshold value. 
          type: number
          format: float
          maximum: 100
          minimum: 0
          default: 95
          x-field-uid: 1
    Event.Request:
      type: object
      properties:
        type:
          description: |-
            Constrain the events being returned by specifying event types.
            If the list is empty then all event types will be returned. 
          type: array
          items:
            type: string
            example: route_withdraw
            x-enum:
              link_down:
                x-field-uid: 1
              link_up:
                x-field-uid: 2
              route_withdraw:
                x-field-uid: 3
              route_advertise:
                x-field-uid: 4
              flow_rx_rate_above_threshold:
                x-field-uid: 5
              flow_rx_rate_below_threshold:
                x-field-uid: 6
          x-field-uid: 1
        source:
          description: |-
            Constrain the events being returned by specifying event sources. 
            If the list is empty then all event sources will be returned. 
          type: array
          items:
            type: string
          x-constraint:
          - '/components/schemas/Port/properties/name'
          - '/components/schemas/Bgp.V4RouteRange/name'
          - '/components/schemas/Bgp.V6RouteRange/name'

          x-field-uid: 2
    Event.Subscription:
      description: |-
        A container that describes what events a system should provide and 
        optionally where to publish them.  
      type: object
      properties:
        events:
          $ref: '#/components/schemas/Event.Request'
          x-field-uid: 1
        callback_url:
          description: |-
            Indicates where a client wants to be notified of the events set in
            the events property.
            If this property is empty or null then no event notifications will
            be forwarded.
          type: string
          format: uri
          example: https://127.0.0.1/event/notification
          x-field-uid: 2
