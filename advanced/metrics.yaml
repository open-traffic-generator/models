components:
  schemas:
    AdvancedMetrics.Request:
      type: object
      properties:
        choice:
          type: string
          enum: [event, latency, bgp_convergence]
        event:
          $ref: '#/components/schemas/AdvancedMetrics.Event.Request'
        latency:
          $ref: '#/components/schemas/AdvancedMetrics.Latency.Request'
        bgp_convergence:
          $ref: '#/components/schemas/AdvancedMetrics.BgpConvergence.Request'

    AdvancedMetrics.Event.Request:
      type: object
      properties:
        source:
          description: >-
            The source of the event. 
            If the list is empty then all events will be returned. 
          type: array
          items:
            type: string
            x-constraint:
            - '#/components/schemas/Port/properties/name'
            - '#/components/schemas/Device.Bgpv4Route/name'
            - '#/components/schemas/Device.Bgpv6Route/name'
            example: ['BGP Route Range 1', 'Rx Port 1']
        event:
          description: |-
            The type of event.
            If the list is empty then all event types will be returned.
          type: array
          items:
            type: string
            enum:
            - link_down
            - link_up
            - bgpv4_route_withdraw
            - bgpv4_route_advertise
            - bgpv6_route_withdraw
            - bgpv6_route_advertise
            - flow_rx_rate_above_threshold
            - flow_rx_rate_below_threshold

    AdvancedMetrics.Latency.Request:
      type: object
      properties:
        flow_names:
          type: array
          items:
            type: string
            x-constraint:
            - '/components/schemas/Flow/properties/name'

    AdvancedMetrics.BgpConvergence.Request:
      type: object
      properties:
        flow_names:
          type: array
          items:
            type: string
            x-constraint:
            - '/components/schemas/Flow/properties/name'
            example: ['Tx Port -> Rx Port']
        route_names:
          type: array
          items:
            type: string
            x-constraint:
            - '/components/schemas/Device.BgpRoute/properties/name'
            example: ['BGP Route Range 1']

    AdvancedMetrics.Response:
      type: object
      properties:
        latency:
          type: array
          $ref: '#/components/schemas/AdvancedMetrics.Latency'
        bgp_convergence:
          type: array
          $ref: '#/components/schemas/AdvancedMetrics.BgpConvergence'

    AdvancedMetrics.Latency:
      description: >-
        The container for latency metrics. The min/max/avg values are dependent 
        on the type of latency measurement mode that is configured.
      type: object
      properties:
        flow_name:
          description: >-
            The name of the source.
            Flow + metric group?
          type: string
          example: 'Tx Port -> Rx Port'
        minimum_ns:
          description: >-
            Minimum latency in nanoseconds
          type: number
          format: double
        maximum_ns:
          description: >-
            Maximum latency in nanoseconds
          type: number
          format: double
        average_ns:
          description: >-
            Average latency in nanoseconds
          type: number
          format: double

    AdvancedMetrics.Convergence:
      description: >-
        The container for data plane and control plane convergence metrics
      type: object
      properties:
        data_plane_convergence_ns:
          description: >-
            The convergence time measured from the data plane perspective only. 
            It measures the time from BTT, when the rate on Test Port 2 crosses 
            below the Rx Threshold until an acceptable amount of traffic was 
            received at time ATT, when the rate crosses above the Rx Threshold.
          type: number
          format: double
        data_plane_ramp_down_ns:
          description: >-
            The time required for the SUT to stop forwarding traffic, measured 
            from a data plane perspective only. It measures the time from BTT, 
            when the rate on Test Port 2 crosses below the Rx Threshold until 
            the rate drops to zero.
          type: number
          format: double
        data_plane_ramp_up_ns:
          description: >-
            The time required for the SUT to forwarding traffic, measured from 
            a data plane perspective only. It measures the time from the start 
            of traffic until the rate on Test Port 3 crosses above the Rx 
            Threshold.
          type: number
          format: double
        control_plane_data_plane_convergence_ns:
          description: >-
            The total convergence time, between the event that caused the
            switchover (at tEvent) until an acceptable amount of traffic was 
            received at time ATT, when the rate crosses above the Rx Threshold.
          type: number
          format: double

    AdvancedMetrics.BgpConvergence:
      x-include:
      - '#/components/schemas/AdvancedMetrics.Convergence'
      type: object
      properties:
        flow_name:
          description: >-
            The name of the flow that is affected by the trigger event.
          type: string
          x-constraint:
          - '/components/schemas/Flow/properties/name'
          example: 'Tx Port -> Rx Port'
        route_name:
          description: >-
            The name of the BGP IPv4/IPv6 route that produced the trigger event.
          type: string
          x-constraint:
          - '/components/schemas/Device.BgpRoute/properties/name'
          example: 'BGP Route Range 1'
        event:
          description: >-
            The type of event that triggered the BGP convergence.
          type: string
          enum:
          - route_advertise
          - route_withdraw
          example: 'route_withdraw'
        event_begin_ns:
          description: >-
            The timestamp of when the event began.
          type: number
          format: double
        event_end_ns:
          description: >-
            The timestamp of when the event ended.
          type: number
          format: double

