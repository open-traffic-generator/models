openapi: 3.0.3
info:
  title: Open Traffic Generator API
  description: |-
    The open traffic generator API
  version: 0.3.1
  contact:
    name: Open Traffic Generator Project Team
    email: andy.balogh@keysight.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-model-guide: https://github.com/open-traffic-generator/models/blob/master/MODEL-GUIDE.md
servers:
- url: /
paths:
  /config:
    post:
      tags:
      - Configuration
      operationId: set_config
      description: |-
        Sets configuration resources on the traffic generator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '409':
          $ref: '#/components/responses/Conflict'
        '590':
          $ref: '#/components/responses/Fail'
    patch:
      tags:
      - Configuration
      operationId: update_config
      description: |-
        Updates configuration resources on the traffic generator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '409':
          $ref: '#/components/responses/Conflict'
        '590':
          $ref: '#/components/responses/Fail'
    get:
      tags:
      - Configuration
      operationId: get_config
      responses:
        '200':
          description: |-
            Config response from the traffic generator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
  /control/transmit:
    post:
      tags:
      - Control
      operationId: set_transmit_state
      description: |-
        Updates the state of configuration resources on the traffic generator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transmit.State'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '409':
          $ref: '#/components/responses/Conflict'
        '590':
          $ref: '#/components/responses/Fail'
  /control/link:
    post:
      tags:
      - Control
      operationId: set_link_state
      description: |-
        Updates the state of configuration resources on the traffic generator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Link.State'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '409':
          $ref: '#/components/responses/Conflict'
        '590':
          $ref: '#/components/responses/Fail'
  /control/capture:
    post:
      tags:
      - Control
      operationId: set_capture_state
      description: |-
        Updates the state of configuration resources on the traffic generator.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capture.State'
      responses:
        '200':
          $ref: '#/components/responses/Success'
        '409':
          $ref: '#/components/responses/Conflict'
        '590':
          $ref: '#/components/responses/Fail'
  /results/metrics:
    description: |-
      Traffic metrics API
    post:
      tags:
      - Results
      operationId: get_metrics
      requestBody:
        description: |-
          Request to traffic generator for metrics of choice
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metrics.Request'
      responses:
        '200':
          description: |-
            Response from traffic generator for chosen metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics.Response'
  /results/state:
    post:
      tags:
      - Results
      operationId: get_state_metrics
      responses:
        '200':
          description: |-
            List of states
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State.Metrics'
  /results/capabilities:
    description: |-
      Capability results API
    post:
      tags:
      - Results
      operationId: get_capabilities
      responses:
        '200':
          description: |-
            Capability results response from the traffic generator
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Capabilities'
  /results/capture:
    description: |-
      Capture results API
    post:
      tags:
      - Results
      operationId: get_capture
      requestBody:
        description: |-
          Capture results request to the traffic generator.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Capture.Request'
      responses:
        '200':
          description: "Capture results response from the traffic generator. "
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
components:
  responses:
    Success:
      description: |-
        The request has succeeded. Detailed warnings if any will be returned as a list.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Details'
    SuccessNoContent:
      description: |-
        The traffic generator has successfully completed the request and there is no content to return.
    Pending:
      description: |-
        The traffic generator is currently processing the request which has  not yet completed. If a traffic generator implementation follows an asynchronous model it  should use this response to indicate that an operation has been  accepted but has not completed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pending.Detail'
    Conflict:
      description: |-
        The request is denied as the traffic generator is currently processing  another request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Details'
    Fail:
      description: |-
        The request has failed. Detailed errors will be returned as a list.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Details'
  schemas:
    Config:
      description: |-
        A container for all models that are part of the configuration.
      type: object
      properties:
        ports:
          description: |-
            The ports that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Port'
        lags:
          description: |-
            The lags that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Lag'
        layer1:
          description: |-
            The layer1 settings that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Layer1'
        captures:
          description: |-
            The capture settings that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Capture'
        devices:
          description: |-
            The emulated device settings that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Device'
        flows:
          description: |-
            The flows that will be configured on the traffic generator.
          type: array
          items:
            $ref: '#/components/schemas/Flow'
        options:
          $ref: '#/components/schemas/Config.Options'
    Config.Options:
      description: |-
        Global configuration options.
      type: object
      properties:
        port_options:
          $ref: '#/components/schemas/Port.Options'
    Port:
      description: |-
        An abstract test port.
      type: object
      properties:
        location:
          description: |-
            The location of a test port.  It is the endpoint where packets will emit from.
            Test port locations can be the following:
              - physical appliance with multiple ports
              - physical chassis with multiple cards and ports
              - local interface
              - virtual machine, docker container, kubernetes cluster

            The test port location format is implementation specific. Use the /results/capabilities API to determine what formats an  implementation supports for the location property.
            Get the configured location state by using the /results/port API.
          type: string
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Port.Options:
      description: "Common port options that apply to all configured Port objects. "
      type: object
      properties:
        location_preemption:
          description: |-
            Preempt all the test port locations as defined by the  Port.Port.properties.location. If the test ports defined by their location values are in use and  this value is true, the test ports will be preempted.
          type: boolean
          default: false
    Lag:
      description: |-
        The container for multiple LAG ports
      type: object
      properties:
        ports:
          type: array
          items:
            $ref: '#/components/schemas/Lag.Port'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Lag.Port:
      description: |-
        The container for a port's ethernet interface and LAG protocol settings
      type: object
      required:
      - port_name
      - protocol
      - ethernet
      properties:
        port_name:
          description: "The name of a port object that will be part of the LAG. "
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
        protocol:
          $ref: '#/components/schemas/Lag.Protocol'
        ethernet:
          $ref: '#/components/schemas/Device.EthernetBase'
    Lag.Protocol:
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of LAG protocol.
          type: string
          enum:
          - lacp
          - static
          default: lacp
        lacp:
          $ref: '#/components/schemas/Lag.Lacp'
        static:
          $ref: '#/components/schemas/Lag.Static'
    Lag.Static:
      description: |-
        The container for static link aggregation protocol settings.
      type: object
      properties:
        lag_id:
          description: |-
            The static lag id
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
    Lag.Lacp:
      description: |-
        The container for link aggregation control protocol settings.
      type: object
      properties:
        actor_key:
          description: |-
            The actor key
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        actor_port_number:
          description: |-
            The actor port number
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        actor_port_priority:
          description: |-
            The actor port priority
          type: integer
          minimum: 0
          maximum: 65535
          default: 1
        actor_system_id:
          description: |-
            The actor system id
          type: string
          format: mac
          default: 00:00:00:00:00:00
        actor_system_priority:
          description: |-
            The actor system priority
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        lacpdu_periodic_time_interval:
          x-constants:
            fast: 1
            slow: 30
            auto: 0
          description: |-
            This field defines how frequently LACPDUs are sent to the link partner
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        lacpdu_timeout:
          x-constants:
            short: 3
            long: 90
            auto: 0
          description: |-
            This timer is used to detect whether received protocol information has expired
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        actor_activity:
          description: |-
            Sets the value of LACP actor activity as either passive or active
            Passive indicates the port's preference for not transmitting  LACPDUs unless its partner's control is Active
            Active indicates the port's preference to participate in the  protocol regardless of the partner's control value
          type: string
          enum:
          - passive
          - active
          default: active
    Device.EthernetBase:
      description: |-
        Base ethernet interface
      type: object
      properties:
        mac:
          description: |-
            Media access control address
          type: string
          format: mac
          default: 00:00:00:00:00:00
        mtu:
          description: |-
            Maximum transmission unit
          type: integer
          minimum: 0
          maximum: 65535
          default: 1500
        vlans:
          description: |-
            List of VLANs
          type: array
          items:
            $ref: '#/components/schemas/Device.Vlan'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Ethernet:
      description: |-
        An ethernet interface with an IPv4 and IPv6 interface stack
        Base ethernet interface
      type: object
      properties:
        ipv4:
          $ref: '#/components/schemas/Device.Ipv4'
        ipv6:
          $ref: '#/components/schemas/Device.Ipv6'
        mac:
          description: |-
            Media access control address
          type: string
          format: mac
          default: 00:00:00:00:00:00
        mtu:
          description: |-
            Maximum transmission unit
          type: integer
          minimum: 0
          maximum: 65535
          default: 1500
        vlans:
          description: |-
            List of VLANs
          type: array
          items:
            $ref: '#/components/schemas/Device.Vlan'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Vlan:
      description: |-
        Emulated VLAN protocol
      type: object
      properties:
        tpid:
          description: |-
            Tag protocol identifier
          type: string
          enum:
          - x8100
          - x88A8
          - x9100
          - x9200
          - x9300
          default: x8100
        priority:
          description: |-
            Priority code point
          type: integer
          minimum: 0
          maximum: 3
          default: 0
        id:
          description: |-
            VLAN identifier
          type: integer
          minimum: 0
          maximum: 4095
          default: 1
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Ipv4Base:
      description: |-
        A base IPv4 interface
      type: object
      properties:
        address:
          description: |-
            The IPv4 address
          type: string
          format: ipv4
          default: 0.0.0.0
        prefix:
          description: |-
            The prefix of the IPv4 address
          type: integer
          minimum: 1
          maximum: 32
          default: 24
        bgpv4:
          $ref: '#/components/schemas/Device.Bgpv4'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Ipv4:
      description: |-
        An IPv4 interface with gateway
        A base IPv4 interface
      type: object
      properties:
        gateway:
          description: |-
            The IPv4 address of the gateway
          type: string
          format: ipv4
          default: 0.0.0.0
        address:
          description: |-
            The IPv4 address
          type: string
          format: ipv4
          default: 0.0.0.0
        prefix:
          description: |-
            The prefix of the IPv4 address
          type: integer
          minimum: 1
          maximum: 32
          default: 24
        bgpv4:
          $ref: '#/components/schemas/Device.Bgpv4'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Bgpv4:
      x-status: under-review
      description: |-
        Container for emulated BGPv4 peers and routes.
        Container for basic emulated BGP peer settings.
      type: object
      properties:
        local_address:
          description: |-
            Local IPv4 address of the emulated router
          type: string
          format: ipv4
          default: 0.0.0.0
        dut_address:
          description: |-
            IPv4 address of the BGP peer for the session
          type: string
          format: ipv4
          default: 0.0.0.0
        router_id:
          description: |-
            The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address.
          type: string
          format: ipv4
          default: 0.0.0.0
        as_type:
          description: |-
            The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer.
          type: string
          enum:
          - ibgp
          - ebgp
          default: ibgp
        as_number:
          description: |-
            Autonomous System Number (AS number or ASN)
          type: integer
          default: 1
        as_number_width:
          description: |-
            The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error
          type: string
          enum:
          - two
          - four
          default: four
        as_number_set_mode:
          description: |-
            The AS number set mode
          type: string
          enum:
          - do_not_include_as
          - include_as_seq
          - include_as_set
          - include_as_seq_confed
          - include_as_set_confed
          - prepend_as_to_first_segment
          default: do_not_include_as
        advanced:
          $ref: '#/components/schemas/Device.BgpAdvanced'
        capability:
          $ref: '#/components/schemas/Device.BgpCapability'
        sr_te_policies:
          description: |-
            Segment routing/traffic engineering policies
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpSrTePolicy'
        bgpv4_routes:
          description: |-
            Emulated BGPv4 routes
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv4Route'
        bgpv6_routes:
          description: |-
            Emulated BGPv6 routes
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv6Route'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
      required:
      - name
    Device.BgpAdvanced:
      x-status: under-review
      description: |-
        Container for BGP advanced settings.
      type: object
      properties:
        hold_time_interval:
          description: |-
            Number of seconds the sender proposes for the value of the Hold Timer
          type: integer
          default: 90
        keep_alive_interval:
          description: |-
            Number of seconds between transmissions of Keep Alive messages by router
          type: integer
          default: 30
        update_interval:
          description: |-
            The time interval at which UPDATE messages are sent to the DUT, expressed as the number of milliseconds between UPDATE messages.
          type: integer
          default: 0
        time_to_live:
          description: |-
            The limited number of iterations that a unit of data can experience before the data is discarded. This is placed in the TTL field in the IP header of the  transmitted packets.
          type: integer
          default: 64
        md5_key:
          description: |-
            The value to be used as a secret MD5 key for authentication. If null or an empty string then authentication will not be enabled.
          type: string
          default: ''
          nullable: true
    Device.BgpCapability:
      x-status: under-review
      description: |-
        Container for BGP capability settings.
      type: object
      properties:
        vpls:
          description: |-
            TBD
          type: boolean
          default: true
        route_refresh:
          description: |-
            TBD
          type: boolean
          default: true
        route_constraint:
          description: |-
            TBD
          type: boolean
          default: false
        link_state_non_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        link_state_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        evpn:
          description: |-
            TBD
          type: boolean
          default: false
        extended_next_hop_encoding:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_unicast:
          description: |-
            TBD
          type: boolean
          default: true
        ipv4_multicast:
          description: |-
            TBD
          type: boolean
          default: true
        ipv4_multicast_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_mpls_vpn:
          description: |-
            TBD
          type: boolean
          default: true
        ipv4_mdt:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_multicast_mpls_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_unicast_flow_spec:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_sr_te_policy:
          description: |-
            TBD
          type: boolean
          default: false
        ipv4_unicast_add_path:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_unicast:
          description: |-
            TBD
          type: boolean
          default: true
        ipv6_multicast:
          description: |-
            TBD
          type: boolean
          default: true
        ipv6_multicast_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_mpls_vpn:
          description: |-
            TBD
          type: boolean
          default: true
        ipv6_mdt:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_multicast_mpls_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_unicast_flow_spec:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_sr_te_policy:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_unicast_add_path:
          description: |-
            TBD
          type: boolean
          default: false
    Device.BgpSrTePolicy:
      description: "Container for BGP basic segment routing traffic engineering policy\
        \ \nsettings.\n"
      type: object
      properties:
        policy_type:
          description: |-
            Address family indicator (AFI).
          type: string
          enum:
          - ipv4
          - ipv6
          default: ipv4
        distinguisher:
          description: |-
            Identifies the policy in the context of (color and endpoint) tuple.  It is used by the SR Policy originator to make unique multiple  occurrences of the same SR Policy.
          type: integer
          default: 1
        color:
          description: "Identifies the policy. It is used to match the color of the\
            \  destination prefixes to steer traffic into the SR Policy. "
          type: integer
          default: 100
        ipv4_endpoint:
          description: |-
            Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI).
          type: string
          format: ipv4
          default: 0.0.0.0
        ipv6_endpoint:
          description: |-
            Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI).
          type: string
          format: ipv6
          default: ::0
        next_hop:
          $ref: '#/components/schemas/Device.BgpSrTePolicyNextHop'
        add_path:
          $ref: '#/components/schemas/Device.BgpAddPath'
        as_path:
          $ref: '#/components/schemas/Device.BgpAsPath'
        tunnel_tlvs:
          description: |-
            Optional tunnel TLV settings
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpTunnelTlv'
        communities:
          description: |-
            Optional community settings
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpCommunity'
    Device.BgpSrTePolicyNextHop:
      x-status: under-review
      description: |-
        Optional container for BGP SR TE Policy next hop settings.
      type: object
      properties:
        next_hop_mode:
          description: |-
            TBD
          type: string
          enum:
          - local_ip
          - manual
          default: local_ip
        next_hop_address_type:
          description: |-
            TBD
          type: string
          enum:
          - ipv4
          - ipv6
          default: ipv4
        ipv4_address:
          description: |-
            The IPv4 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv4.
          type: string
          format: ipv4
          default: 0.0.0.0
        ipv6_address:
          description: |-
            The IPv6 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv6.
          type: string
          format: ipv6
          default: ::0
    Device.BgpAddPath:
      description: |-
        The BGP Additional Paths feature is a BGP extension that allows the  advertisement of multiple paths for the same prefix without the new  paths implicitly replacing any previous paths.
      type: object
      properties:
        path_id:
          description: |-
            The id of the additional path.
          type: integer
          default: 1
    Device.BgpAsPath:
      description: |-
        Autonomous Systems (AS) numbers that a route passes through to reach  the destination
      type: object
      properties:
        override_peer_as_set_mode:
          description: |-
            TBD
          type: boolean
          default: true
        as_set_mode:
          description: |-
            TBD
          type: string
          enum:
          - do_not_include_local_as
          - include_as_seq
          - include_as_set
          - include_as_confed_seq
          - include_as_confed_set
          - prepend_to_first_segment
          default: do_not_include_local_as
        as_path_segments:
          description: |-
            The AS path segments (non random) per route range
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpAsPathSegment'
    Device.BgpAsPathSegment:
      description: |-
        Container for a single BGP AS path segment
      type: object
      properties:
        segment_type:
          description: |-
            AS sequence is the most common type of AS_PATH, it contains the  list of ASNs starting with the most recent ASN being added read  from left to right.
            The other three AS_PATH types are used for Confederations - AS_SET is the type of AS_PATH attribute that summarizes routes using using the aggregate-address command, allowing AS_PATHs to be  summarized in the update as well. - AS_CONFED_SEQ gives the list of ASNs in the path starting with the  most recent ASN to be added reading left to right - AS_CONFED_SET will allow summarization of multiple AS PATHs to be  sent in BGP Updates.
          type: string
          enum:
          - as_seq
          - as_set
          - as_confed_seq
          - as_confed_set
          default: as_seq
        as_numbers:
          description: |-
            The AS numbers in this AS path segment.
          type: array
          items:
            type: integer
            default: 1
    Device.BgpTunnelTlv:
      description: |-
        Container for BGP tunnel TLV settings.
      type: object
      properties:
        segment_lists:
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpSegmentList'
        remote_endpoint_sub_tlv:
          $ref: '#/components/schemas/Device.BgpRemoteEndpointSubTlv'
        preference_sub_tlv:
          $ref: '#/components/schemas/Device.BgpPreferenceSubTlv'
        binding_sub_tlv:
          $ref: '#/components/schemas/Device.BgpBindingSubTlv'
        explicit_null_label_policy_sub_tlv:
          $ref: '#/components/schemas/Device.BgpExplicitNullLabelPolicySubTlv'
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
    Device.BgpSegmentList:
      x-status: under-review
      description: |-
        Optional container for BGP SR TE Policy segment list settings.
      type: object
      properties:
        segment_weight:
          description: |-
            The weight associated with a given path.
          type: integer
          default: 0
        segments:
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpSegment'
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
    Device.BgpSegment:
      x-status: under-review
      description: |-
        Optional container for BGP SR TE Policy segment settings.
      type: object
      properties:
        segment_type:
          description: |-
            TBD
          type: string
          enum:
          - mpls_sid
          - ipv6_sid
          default: mpls_sid
        mpls_label:
          description: |-
            MPLS label
          type: integer
          default: 0
        mpls_tc:
          description: |-
            TBD
          type: integer
          default: 0
        mpls_ttl:
          description: |-
            TBD
          type: integer
          default: 0
        v_flag:
          description: |-
            TBD
          type: boolean
          default: false
        ipv6_sid:
          description: |-
            TBD
          type: string
          format: ipv6
          default: ::0
        remaining_flag_bits:
          description: |-
            TBD
          type: integer
          default: 0
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
    Device.BgpRemoteEndpointSubTlv:
      description: |-
        Container for BGP remote endpoint sub TLV settings.
      type: object
      properties:
        as_number:
          description: |-
            Autonomous system (AS) number
          type: integer
          default: 0
        address_family:
          description: |-
            Determines the address type
          type: string
          enum:
          - ipv4
          - ipv6
          default: ipv4
        ipv4_address:
          description: |-
            The IPv4 address
          type: string
          format: ipv4
          default: 0.0.0.0
        ipv6_address:
          description: |-
            The IPv6 address
          type: string
          format: ipv6
          default: ::0
    Device.BgpPreferenceSubTlv:
      description: |-
        Container for BGP preference sub TLV settings.
      type: object
      properties:
        preference:
          description: |-
            TBD
          type: integer
          default: 0
    Device.BgpBindingSubTlv:
      description: |-
        Container for BGP binding sub TLV settings.
      type: object
      properties:
        binding_sid_type:
          description: |-
            TBD
          type: string
          enum:
          - no_binding
          - four_octet_sid
          - ipv6_sid
          default: no_binding
        four_octet_sid:
          description: |-
            TBD
          type: integer
          default: 0
        bsid_as_mpls_label:
          description: |-
            Only valid if binding_sid_type is four_octet_sid
          type: boolean
          default: false
        ipv6_sid:
          description: |-
            Only valid if binding_sid_type is ipv6_sid
          type: string
          format: ipv6
          default: ::0
        s_flag:
          description: |-
            TBD
          type: boolean
          default: false
        i_flag:
          description: |-
            TBD
          type: boolean
          default: false
        remaining_flag_bits:
          description: |-
            TBD
          type: integer
          minimum: 0
          maximum: 63
          default: 0
    Device.BgpExplicitNullLabelPolicySubTlv:
      description: |-
        Container for BGP explicit null label policy sub TLV settings.
      type: object
      properties:
        explicit_null_label_policy:
          description: "The value of the explicit null label policy "
          type: string
          enum:
          - reserved_enlp
          - push_ipv4_enlp
          - push_ipv6_enlp
          - push_ipv4_ipv6_enlp
          - do_not_push_enlp
          default: do_not_push_enlp
    Device.BgpCommunity:
      description: |-
        BGP communities provide additional capability for tagging routes and  for modifying BGP routing policy on upstream and downstream routers BGP community is a 32-bit number which broken into 16-bit AS number and  a 16-bit custom value
      type: object
      properties:
        community_type:
          description: |-
            The type of community AS number.
          type: string
          enum:
          - manual_as_number
          - no_export
          - no_advertised
          - no_export_subconfed
          - llgr_stale
          - no_llgr
        as_number:
          description: |-
            First two octets of 32 bit community AS number
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
        as_custom:
          description: "Last two octets of the community AS number "
          type: integer
          minimum: 0
          maximum: 65535
          default: 0
    Device.Bgpv4Route:
      description: |-
        Emulated BGPv4 route
        Container for BGP route ranges.
      type: object
      properties:
        addresses:
          description: |-
            A list of symmetrical or asymmetrical route addresses
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv4RouteAddress'
        next_hop_address:
          description: |-
            IP Address of next router to forward a packet to its final destination
          type: string
          format: ipv4
          default: 0.0.0.0
        advanced:
          $ref: '#/components/schemas/Device.BgpRouteAdvanced'
        communities:
          description: |-
            Optional community settings.
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpCommunity'
        as_path:
          $ref: '#/components/schemas/Device.BgpAsPath'
        add_path:
          $ref: '#/components/schemas/Device.BgpAddPath'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Bgpv4RouteAddress:
      description: |-
        A container for BGPv4 route addresses
      type: object
      properties:
        address:
          description: |-
            The starting address of the network
          type: string
          format: ipv4
          default: 0.0.0.0
        prefix:
          description: "The IPv4 network prefix to be applied to the address. "
          type: integer
          default: 24
          minimum: 0
          maximum: 32
        count:
          description: |-
            The total number of addresses in the range
          type: string
          format: integer
          default: 1
        step:
          description: |-
            The amount to increase each address by
          type: string
          format: integer
          default: 1
    Device.BgpRouteAdvanced:
      description: |-
        Container for advanced BGP route range settings
      type: object
      properties:
        multi_exit_discriminator:
          description: |-
            The multi exit discriminator (MED) value.  A null value means the MED feature is not enabled.
          type: integer
          default: 0
          nullable: true
        origin:
          description: |-
            The origin value.  A null value means the origin feature is not enabled.
          type: string
          enum:
          - igp
          - egp
          default: igp
          nullable: true
    Device.Bgpv6Route:
      description: |-
        Emulated BGPv6 route
        Container for BGP route ranges.
      type: object
      properties:
        addresses:
          description: |-
            A list of symmetrical or asymmetrical route addresses
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv6RouteAddress'
        next_hop_address:
          description: |-
            IP Address of next router to forward a packet to its final destination
          type: string
          format: ipv6
          default: ::0
        advanced:
          $ref: '#/components/schemas/Device.BgpRouteAdvanced'
        communities:
          description: |-
            Optional community settings.
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpCommunity'
        as_path:
          $ref: '#/components/schemas/Device.BgpAsPath'
        add_path:
          $ref: '#/components/schemas/Device.BgpAddPath'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Bgpv6RouteAddress:
      description: |-
        A container for BGPv6 route addressses
      type: object
      properties:
        address:
          description: |-
            The starting address of the network
          type: string
          format: ipv6
          default: ::0
        prefix:
          description: |-
            The IPv6 network prefix to be applied to the address
          type: integer
          default: 64
          minimum: 0
          maximum: 128
        count:
          description: |-
            The total number of addresses in the range
          type: string
          format: integer
          default: 1
        step:
          description: |-
            The amount to increase each address by
          type: string
          format: integer
          default: 1
    Device.Ipv6Base:
      x-status: under-review
      description: |-
        A base IPv6 interface
      type: object
      properties:
        address:
          description: |-
            The IPv6 address.
          type: string
          format: ipv6
          default: ::0
        prefix:
          description: |-
            The network prefix.
          type: integer
          minimum: 1
          maximum: 128
          default: 64
        bgpv6:
          $ref: '#/components/schemas/Device.Bgpv6'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      required:
      - name
    Device.Ipv6:
      description: |-
        An IPv6 interface with gateway
        A base IPv6 interface
      type: object
      properties:
        gateway:
          description: |-
            The IPv6 gateway address
          type: string
          format: ipv6
          default: ::0
        address:
          description: |-
            The IPv6 address.
          type: string
          format: ipv6
          default: ::0
        prefix:
          description: |-
            The network prefix.
          type: integer
          minimum: 1
          maximum: 128
          default: 64
        bgpv6:
          $ref: '#/components/schemas/Device.Bgpv6'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
      x-status: under-review
      required:
      - name
    Device.Bgpv6:
      x-status: under-review
      description: |-
        Container for BGPv6 peer settings and routes.
        Container for basic emulated BGP peer settings.
      type: object
      properties:
        local_address:
          description: |-
            Local IPv6 address of the emulated router
          type: string
          format: ipv6
          default: ::0
        dut_address:
          description: |-
            IPv6 address of the BGP peer for the session
          type: string
          format: ipv6
          default: ::0
        segment_routing:
          $ref: '#/components/schemas/Device.Bgpv6SegmentRouting'
        router_id:
          description: |-
            The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address.
          type: string
          format: ipv4
          default: 0.0.0.0
        as_type:
          description: |-
            The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer.
          type: string
          enum:
          - ibgp
          - ebgp
          default: ibgp
        as_number:
          description: |-
            Autonomous System Number (AS number or ASN)
          type: integer
          default: 1
        as_number_width:
          description: |-
            The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error
          type: string
          enum:
          - two
          - four
          default: four
        as_number_set_mode:
          description: |-
            The AS number set mode
          type: string
          enum:
          - do_not_include_as
          - include_as_seq
          - include_as_set
          - include_as_seq_confed
          - include_as_set_confed
          - prepend_as_to_first_segment
          default: do_not_include_as
        advanced:
          $ref: '#/components/schemas/Device.BgpAdvanced'
        capability:
          $ref: '#/components/schemas/Device.BgpCapability'
        sr_te_policies:
          description: |-
            Segment routing/traffic engineering policies
          type: array
          items:
            $ref: '#/components/schemas/Device.BgpSrTePolicy'
        bgpv4_routes:
          description: |-
            Emulated BGPv4 routes
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv4Route'
        bgpv6_routes:
          description: |-
            Emulated BGPv6 routes
          type: array
          items:
            $ref: '#/components/schemas/Device.Bgpv6Route'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
      required:
      - name
    Device.Bgpv6SegmentRouting:
      x-status: under-review
      description: |-
        Container for BGPv6 segment routing settings.
      type: object
      properties:
        ingress_supports_vpn:
          description: |-
            TBD
          type: boolean
          default: false
        reduced_encapsulation:
          description: |-
            TBD
          type: boolean
          default: false
        copy_time_to_live:
          description: |-
            TBD
          type: boolean
          default: false
        time_to_live:
          description: |-
            TBD
          type: integer
          default: 0
        max_sids_per_srh:
          description: |-
            TBD
          type: integer
          default: 0
        auto_generate_segment_left_value:
          description: |-
            TBD
          type: boolean
          default: false
        segment_left_value:
          description: |-
            TBD
          type: integer
          default: 0
        advertise_sr_te_policy:
          description: |-
            TBD
          type: boolean
          default: false
    Layer1:
      description: |-
        A container for layer1 settings.
      type: object
      required:
      - port_names
      - name
      properties:
        port_names:
          description: "A list of unique names of port objects that will share the\
            \ choice settings. "
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Port/properties/name
        speed:
          description: |-
            Set the speed if supported.
          type: string
          enum:
          - speed_10_fd_mbps
          - speed_10_hd_mbps
          - speed_100_fd_mbps
          - speed_100_hd_mbps
          - speed_1_gbps
          - speed_10_gbps
          - speed_25_gbps
          - speed_40_gbps
          - speed_100_gbps
          - speed_200_gbps
          - speed_400_gbps
          default: speed_10_gbps
        media:
          description: |-
            Set the type of media interface if supported.
          type: string
          enum:
          - copper
          - fiber
          - sgmii
        promiscuous:
          description: |-
            Enable promiscuous mode if supported.
          type: boolean
          default: false
        mtu:
          description: |-
            Set the maximum transmission unit size if supported.
          type: integer
          default: 1500
        ieee_media_defaults:
          description: |-
            Set to true to override the auto_negotiate, link_training and rs_fec settings for gigabit ethernet interfaces.
          type: boolean
          default: true
        auto_negotiate:
          description: |-
            Enable/disable auto negotiation.
          type: boolean
          default: true
        auto_negotiation:
          $ref: '#/components/schemas/Layer1.AutoNegotiation'
        flow_control:
          $ref: '#/components/schemas/Layer1.FlowControl'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
    Layer1.AutoNegotiation:
      description: |-
        Container for auto negotiation settings
      type: object
      properties:
        advertise_1000_mbps:
          description: |-
            If auto_negotiate is true and the interface supports this option then this speed will be advertised.
          type: boolean
          default: true
        advertise_100_fd_mbps:
          description: |-
            If auto_negotiate is true and the interface supports this option then this speed will be advertised.
          type: boolean
          default: true
        advertise_100_hd_mbps:
          description: |-
            If auto_negotiate is true and the interface supports this option then this speed will be advertised.
          type: boolean
          default: true
        advertise_10_fd_mbps:
          description: |-
            If auto_negotiate is true and the interface supports this option then this speed will be advertised.
          type: boolean
          default: true
        advertise_10_hd_mbps:
          description: |-
            If auto_negotiate is true and the interface supports this option then this speed will be advertised.
          type: boolean
          default: true
        link_training:
          description: |-
            Enable/disable gigabit ethernet link training.
          type: boolean
          default: false
        rs_fec:
          description: |-
            Enable/disable gigabit ethernet reed solomon forward error correction (RS FEC).
          type: boolean
          default: false
    Layer1.FlowControl:
      description: |-
        A container for layer1 receive flow control settings. To enable flow control settings on ports this object must be a valid object not a null value.
      type: object
      properties:
        directed_address:
          description: "The 48bit mac address that the layer1 port names will listen\
            \ on for a directed pause.  "
          type: string
          default: 0180C2000001
        choice:
          description: |-
            The type of priority flow control.
          type: string
          enum:
          - ieee_802_1qbb
          - ieee_802_3x
        ieee_802_1qbb:
          $ref: '#/components/schemas/Layer1.Ieee8021qbb'
        ieee_802_3x:
          $ref: '#/components/schemas/Layer1.Ieee8023x'
    Layer1.Ieee8023x:
      description: |-
        A container for ieee 802.3x rx pause settings
      type: object
    Layer1.Ieee8021qbb:
      description: "These settings enhance the existing 802.3x pause priority capabilities\
        \  to enable flow control based on 802.1p priorities (classes of service). "
      type: object
      properties:
        pfc_delay:
          description: "The upper limit on the transmit time of a queue after receiving\
            \ a  message to pause a specified priority. A value of 0 or null indicates\
            \ that pfc delay will not be enabled. "
          type: integer
        pfc_class_0:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_1:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_2:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_3:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_4:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_5:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_6:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
        pfc_class_7:
          description: |-
            The valid values are null, 0 - 7. A null value indicates there is no setting for this pfc class.
          type: integer
    Capture:
      x-status: under-review
      description: |-
        Container for capture settings.
      type: object
      required:
      - name
      properties:
        port_names:
          description: |-
            The unique names of ports that the capture settings will apply to. Port_names cannot be duplicated between capture objects.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Port/properties/name
        filters:
          description: |-
            A list of filters to apply to the capturing ports. If no filters are specified then all packets will be captured. A capture can have multiple filters. The number of filters supported is determined by the implementation which can be retrieved using the capabilities API.
            When multiple filters are specified the capture implementation  must && (and) all the filters.
          type: array
          items:
            $ref: '#/components/schemas/Capture.Filter'
        overwrite:
          description: |-
            Overwrite the capture buffer.
          type: boolean
          default: false
        packet_size:
          description: |-
            The maximum size of each captured packet. If no value is specified or it is null then the entire packet will be captured.
          type: integer
        format:
          description: |-
            The format of the capture file.
          type: string
          enum:
          - pcap
          - pcapng
          default: pcap
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
    Capture.Filter:
      description: |-
        Container for capture filters
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - custom
          - ethernet
          - vlan
          - ipv4
        custom:
          description: |-
            Offset from last filter in the list. If no filters are present it is offset from position 0. Multiple custom filters can be present, the length of each custom filter is the length of the value being filtered.
          $ref: '#/components/schemas/Capture.Custom'
        ethernet:
          $ref: '#/components/schemas/Capture.Ethernet'
        vlan:
          $ref: '#/components/schemas/Capture.Vlan'
        ipv4:
          $ref: '#/components/schemas/Capture.Ipv4'
    Capture.Custom:
      properties:
        offset:
          description: |-
            The byte offset to filter on
          type: integer
        value:
          type: string
          format: hex
        mask:
          type: string
          format: hex
        negate:
          type: boolean
          default: false
      type: object
    Capture.Field:
      type: object
      properties:
        value:
          type: string
          format: hex
        mask:
          type: string
          format: hex
        negate:
          type: boolean
          default: false
    Capture.Ethernet:
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
        ether_type:
          $ref: '#/components/schemas/Capture.Field'
        pfc_queue:
          $ref: '#/components/schemas/Capture.Field'
    Capture.Vlan:
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/Capture.Field'
        cfi:
          $ref: '#/components/schemas/Capture.Field'
        id:
          $ref: '#/components/schemas/Capture.Field'
        protocol:
          $ref: '#/components/schemas/Capture.Field'
    Capture.Ipv4:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Capture.Field'
        headeer_length:
          $ref: '#/components/schemas/Capture.Field'
        priority:
          $ref: '#/components/schemas/Capture.Field'
        total_length:
          $ref: '#/components/schemas/Capture.Field'
        identification:
          $ref: '#/components/schemas/Capture.Field'
        reserved:
          $ref: '#/components/schemas/Capture.Field'
        dont_fragment:
          $ref: '#/components/schemas/Capture.Field'
        more_fragments:
          $ref: '#/components/schemas/Capture.Field'
        fragment_offset:
          $ref: '#/components/schemas/Capture.Field'
        time_to_live:
          $ref: '#/components/schemas/Capture.Field'
        protocol:
          $ref: '#/components/schemas/Capture.Field'
        header_checksum:
          $ref: '#/components/schemas/Capture.Field'
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
    Device.Active:
      type: object
      properties:
        active:
          description: |-
            If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer.
          type: boolean
          default: true
    Device:
      description: |-
        A container for emulated interfaces and protocol devices.
      type: object
      required:
      - container_name
      - ethernet
      - name
      properties:
        container_name:
          description: |-
            The unique name of a Port or Lag object that will contain the  emulated interfaces and/or protocol devices.
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
          - /components/schemas/Lag/properties/name
        ethernet:
          description: |-
            The ethernet stack.
          $ref: '#/components/schemas/Device.Ethernet'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
    Flow:
      description: |-
        A high level data plane traffic flow. Acts as a container for endpoints, packet headers, packet size,  transmit rate and transmit duration.
      type: object
      required:
      - tx_rx
      - name
      properties:
        tx_rx:
          description: |-
            The transmit and receive endpoints.
          $ref: '#/components/schemas/Flow.TxRx'
        packet:
          description: |-
            The header is a list of traffic protocol headers. The order of traffic protocol headers assigned to the list is the order they will appear on the wire.
          type: array
          items:
            $ref: '#/components/schemas/Flow.Header'
        size:
          description: |-
            The size of the packets.
          $ref: '#/components/schemas/Flow.Size'
        rate:
          description: |-
            The transmit rate of the packets.
          $ref: '#/components/schemas/Flow.Rate'
        duration:
          description: |-
            The transmit duration of the packets.
          $ref: '#/components/schemas/Flow.Duration'
        name:
          description: |-
            Globally unique name of an object. It also serves as the primary key for arrays of objects.
          type: string
          pattern: ^[\sa-zA-Z0-9-_()><\[\]]+$
    Flow.TxRx:
      description: |-
        A container for different types of transmit and receive  endpoint containers.
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of transmit and receive container used by the flow.
          type: string
          enum:
          - port
          - device
        port:
          $ref: '#/components/schemas/Flow.Port'
        device:
          $ref: '#/components/schemas/Flow.Device'
    Flow.Port:
      description: "A container for a transmit port and 0..n intended receive ports.\
        \ When assigning this container to a flow the flows's  packet headers will\
        \ not be populated with any address resolution  information such as source\
        \ and/or destination addresses.  For example Flow.Ethernet dst mac address\
        \ values will be defaulted to 0.  For full control over the Flow.properties.packet\
        \ header contents use this  container. "
      type: object
      required:
      - tx_name
      properties:
        tx_name:
          description: |-
            The unique name of a port that is the transmit port.
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
          - /components/schemas/Lag/properties/name
        rx_name:
          description: |-
            The unique name of a port that is the intended receive port.
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
          - /components/schemas/Lag/properties/name
    Flow.Device:
      description: |-
        A container for 1..n transmit devices and 1..n receive devices. Implemementations may use learned information from the devices to  pre-populate Flow.properties.packet[Flow.Header fields].
        For example an implementation may automatically start devices, get arp  table information and pre-populate the Flow.Ethernet dst mac address values.
        To discover what the implementation supports use the  /results/capabilities API.
      type: object
      required:
      - tx_names
      - rx_names
      properties:
        tx_names:
          description: |-
            The unique names of devices that will be transmitting.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device/properties/name
            - /components/schemas/Device.Ethernet/properties/name
            - /components/schemas/Device.Ipv4/properties/name
            - /components/schemas/Device.Ipv6/properties/name
            - /components/schemas/Device.Bgpv4RouteRange/properties/name
            - /components/schemas/Device.Bgpv6RouteRange/properties/name
        rx_names:
          description: |-
            The unique names of emulated devices that will be receiving.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device/properties/name
            - /components/schemas/Device.Ethernet/properties/name
            - /components/schemas/Device.Ipv4/properties/name
            - /components/schemas/Device.Ipv6/properties/name
            - /components/schemas/Device.Bgpv4RouteRange/properties/name
            - /components/schemas/Device.Bgpv6RouteRange/properties/name
    Flow.Header:
      description: |-
        Container for all traffic packet headers
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - custom
          - ethernet
          - vlan
          - vxlan
          - ipv4
          - ipv6
          - pfcpause
          - ethernetpause
          - tcp
          - udp
          - gre
          - gtpv1
          - gtpv2
          - arp
          - icmp
          - icmpv6
          - ppp
          - igmpv1
        custom:
          $ref: '#/components/schemas/Flow.Custom'
        ethernet:
          $ref: '#/components/schemas/Flow.Ethernet'
        vlan:
          $ref: '#/components/schemas/Flow.Vlan'
        vxlan:
          $ref: '#/components/schemas/Flow.Vxlan'
        ipv4:
          $ref: '#/components/schemas/Flow.Ipv4'
        ipv6:
          $ref: '#/components/schemas/Flow.Ipv6'
        pfcpause:
          $ref: '#/components/schemas/Flow.PfcPause'
        ethernetpause:
          $ref: '#/components/schemas/Flow.EthernetPause'
        tcp:
          $ref: '#/components/schemas/Flow.Tcp'
        udp:
          $ref: '#/components/schemas/Flow.Udp'
        gre:
          $ref: '#/components/schemas/Flow.Gre'
        gtpv1:
          $ref: '#/components/schemas/Flow.Gtpv1'
        gtpv2:
          $ref: '#/components/schemas/Flow.Gtpv2'
        arp:
          $ref: '#/components/schemas/Flow.Arp'
        icmp:
          $ref: '#/components/schemas/Flow.Icmp'
        icmpv6:
          $ref: '#/components/schemas/Flow.Icmpv6'
        ppp:
          $ref: '#/components/schemas/Flow.Ppp'
        igmpv1:
          $ref: '#/components/schemas/Flow.Igmpv1'
    Flow.Custom:
      type: object
      description: |-
        Custom packet header
      required:
      - bytes
      properties:
        bytes:
          description: |-
            A custom packet header defined as a string of hex bytes. The string MUST contain sequence of valid hex bytes. Spaces or colons can be part of the bytes but will be discarded. This packet header can be used in multiple places in the packet.
          type: string
          pattern: '^[A-Fa-f0-9: ]+$'
    Flow.Ethernet:
      description: |-
        Ethernet packet header
      type: object
      properties:
        dst:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst'
        src:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src'
        ether_type:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType'
        pfc_queue:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue'
    Flow.Vlan:
      description: |-
        VLAN packet header
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority'
        cfi:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi'
        id:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id'
        tpid:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid'
    Flow.Vxlan:
      description: |-
        VXLAN packet header
      type: object
      properties:
        flags:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags'
        reserved0:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0'
        vni:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni'
        reserved1:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1'
    Flow.Ipv4:
      description: |-
        IPv4 packet header
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version'
        header_length:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength'
        priority:
          $ref: '#/components/schemas/Flow.Ipv4.Priority'
        total_length:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength'
        identification:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification'
        reserved:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved'
        dont_fragment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment'
        more_fragments:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments'
        fragment_offset:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset'
        time_to_live:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive'
        protocol:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol'
        header_checksum:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderChecksum'
        src:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src'
        dst:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst'
    Flow.Ipv4.Priority:
      description: |-
        A container for ipv4 raw, tos, dscp ip priorities.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - raw
          - tos
          - dscp
        raw:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw'
        tos:
          $ref: '#/components/schemas/Flow.Ipv4.Tos'
        dscp:
          $ref: '#/components/schemas/Flow.Ipv4.Dscp'
    Flow.Ipv4.Dscp:
      description: |-
        Differentiated services code point (DSCP) packet field.
      type: object
      properties:
        phb:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb'
        ecn:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn'
    Flow.Ipv4.Tos:
      description: |-
        Type of service (TOS) packet field.
      type: object
      properties:
        precedence:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence'
        delay:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay'
        throughput:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput'
        reliability:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability'
        monetary:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary'
        unused:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused'
    Flow.Ipv6:
      description: |-
        IPv6 packet header
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version'
        traffic_class:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass'
        flow_label:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel'
        payload_length:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength'
        next_header:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader'
        hop_limit:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit'
        src:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src'
        dst:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst'
    Flow.PfcPause:
      description: |-
        IEEE 802.1Qbb PFC Pause packet header.
      type: object
      properties:
        dst:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst'
        src:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src'
        ether_type:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType'
        control_op_code:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode'
        class_enable_vector:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector'
        pause_class_0:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0'
        pause_class_1:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1'
        pause_class_2:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2'
        pause_class_3:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3'
        pause_class_4:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4'
        pause_class_5:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5'
        pause_class_6:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6'
        pause_class_7:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7'
    Flow.EthernetPause:
      description: |-
        IEEE 802.3x global ethernet pause packet header
      type: object
      properties:
        dst:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst'
        src:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src'
        ether_type:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType'
        control_op_code:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode'
        time:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time'
    Flow.Tcp:
      description: |-
        TCP packet header
      type: object
      properties:
        src_port:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort'
        dst_port:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort'
        seq_num:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum'
        ack_num:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum'
        data_offset:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset'
        ecn_ns:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs'
        ecn_cwr:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr'
        ecn_echo:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho'
        ctl_urg:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg'
        ctl_ack:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck'
        ctl_psh:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh'
        ctl_rst:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst'
        ctl_syn:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn'
        ctl_fin:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin'
        window:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window'
    Flow.Udp:
      description: |-
        UDP packet header
      type: object
      properties:
        src_port:
          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort'
        dst_port:
          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort'
        length:
          $ref: '#/components/schemas/Pattern.Flow.Udp.Length'
        checksum:
          $ref: '#/components/schemas/Pattern.Flow.Udp.Checksum'
    Flow.Gre:
      description: |-
        Standard GRE packet header (RFC2784)
      type: object
      properties:
        checksum_present:
          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent'
        reserved0:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0'
        version:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Version'
        protocol:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol'
        checksum:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Checksum'
        reserved1:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1'
    Flow.Gtpv1:
      description: |-
        GTPv1 packet header
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version'
        protocol_type:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType'
        reserved:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved'
        e_flag:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag'
        s_flag:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag'
        pn_flag:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag'
        message_type:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType'
        message_length:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength'
        teid:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid'
        squence_number:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber'
        n_pdu_number:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber'
        next_extension_header_type:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType'
        extension_headers:
          description: |-
            A list of optional extension headers.
          type: array
          items:
            $ref: '#/components/schemas/Flow.GtpExtension'
    Flow.GtpExtension:
      type: object
      properties:
        extension_length:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength'
        contents:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents'
        next_extension_header:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader'
    Flow.Gtpv2:
      description: |-
        GTPv2 packet header
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version'
        piggybacking_flag:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag'
        teid_flag:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag'
        spare1:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1'
        message_type:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType'
        message_length:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength'
        teid:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid'
        sequence_number:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber'
        spare2:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2'
    Flow.Arp:
      description: |-
        ARP packet header
      type: object
      properties:
        hardware_type:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType'
        protocol_type:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType'
        hardware_length:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength'
        protocol_length:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength'
        operation:
          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation'
        sender_hardware_addr:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr'
        sender_protocol_addr:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr'
        target_hardware_addr:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr'
        target_protocol_addr:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr'
    Flow.Icmp:
      description: |-
        ICMP packet header
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Type'
        code:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Code'
        checksum:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Checksum'
        rest_of_headers:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.RestOfHeaders'
    Flow.Icmpv6:
      description: |-
        ICMPv6 packet header
      type: object
      properties:
        type:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Type'
        code:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Code'
        checksum:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Checksum'
        message_body:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.MessageBody'
    Flow.Ppp:
      description: |-
        PPP packet header
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address'
        control:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control'
        protocol_type:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType'
    Flow.Igmpv1:
      description: |-
        IGMPv1 packet header
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version'
        type:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type'
        unused:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused'
        checksum:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Checksum'
        group_address:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress'
    Flow.Size:
      description: |-
        The frame size which overrides the total length of the packet
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - fixed
          - increment
          - random
        fixed:
          type: integer
          default: 64
        increment:
          $ref: '#/components/schemas/Flow.SizeIncrement'
        random:
          $ref: '#/components/schemas/Flow.SizeRandom'
    Flow.SizeIncrement:
      type: object
      description: |-
        Frame size that increments from a starting size to  an ending size incrementing by a step size.
      required:
      - start
      - end
      - step
      properties:
        start:
          description: |-
            Starting frame size in bytes
          type: integer
          minimum: 1
          default: 64
        end:
          description: |-
            Ending frame size in bytes
          type: integer
          minimum: 64
          default: 1518
        step:
          description: |-
            Step frame size in bytes
          type: integer
          default: 1
    Flow.SizeRandom:
      type: object
      description: |-
        Random frame size from a min value to a max value.
      required:
      - min
      - max
      properties:
        min:
          type: integer
          default: 64
        max:
          type: integer
          default: 1518
    Flow.Rate:
      type: object
      description: |-
        The rate of packet transmission
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - pps
          - bps
          - kbps
          - mbps
          - gbps
          - percentage
          default: pps
        pps:
          description: |-
            Packets per second.
          type: integer
          default: 1000
        bps:
          description: |-
            Bits per second.
          type: integer
        kbps:
          description: |-
            Kilobits per second.
          type: integer
        mbps:
          description: |-
            Megabits per second.
          type: integer
        gbps:
          description: |-
            Gigabits per second.
          type: integer
        percentage:
          description: |-
            The percentage of a port location's available bandwidth.
          type: number
    Flow.Duration:
      description: "A container for different transmit durations. "
      type: object
      properties:
        choice:
          type: string
          enum:
          - fixed_packets
          - fixed_seconds
          - burst
          - continuous
        fixed_packets:
          $ref: '#/components/schemas/Flow.FixedPackets'
        fixed_seconds:
          $ref: '#/components/schemas/Flow.FixedSeconds'
        burst:
          $ref: '#/components/schemas/Flow.Burst'
        continuous:
          $ref: '#/components/schemas/Flow.Continuous'
    Flow.Continuous:
      description: "Transmit will be continuous and will not stop automatically. "
      type: object
      properties:
        gap:
          description: |-
            The minimum gap between packets expressed as bytes.
          type: integer
          default: 12
        delay:
          description: |-
            The delay before starting transmission of packets.
          type: integer
          default: 0
        delay_unit:
          description: |-
            The delay expressed as a number of this value.
          type: string
          enum:
          - bytes
          - nanoseconds
          default: bytes
    Flow.FixedPackets:
      description: |-
        Transmit a fixed number of packets after which the flow will stop.
      type: object
      properties:
        packets:
          description: |-
            Stop transmit of the flow after this number of packets.
          type: integer
          default: 1
        gap:
          description: |-
            The minimum gap between packets expressed as bytes.
          type: integer
          default: 12
        delay:
          description: |-
            The delay before starting transmission of packets.
          type: integer
          default: 0
        delay_unit:
          description: |-
            The delay expressed as a number of this value.
          type: string
          enum:
          - bytes
          - nanoseconds
          default: bytes
    Flow.FixedSeconds:
      description: |-
        Transmit for a fixed number of seconds after which the flow will stop.
      type: object
      properties:
        seconds:
          description: |-
            Stop transmit of the flow after this number of seconds.
          type: number
          default: 1
        gap:
          description: |-
            The minimum gap between packets expressed as bytes.
          type: integer
          default: 12
        delay:
          description: |-
            The delay before starting transmission of packets.
          type: integer
          default: 0
        delay_unit:
          description: |-
            The delay expressed as a number of this value.
          type: string
          enum:
          - bytes
          - nanoseconds
          default: bytes
    Flow.Burst:
      description: "Transmits continuous or fixed burst of packets.  For continuous\
        \ burst of packets, it will not automatically stop. For fixed burst of packets,\
        \ it will stop after transmitting fixed number of bursts.      "
      type: object
      properties:
        bursts:
          description: |-
            The number of packet bursts transmitted per flow. A value of 0 implies continuous burst of packets.
          type: integer
          default: 0
        packets:
          description: |-
            The number of packets transmitted per burst.
          type: integer
          minimum: 1
        gap:
          description: |-
            The minimum gap between packets expressed as bytes.
          type: integer
          default: 12
        inter_burst_gap:
          description: |-
            The gap between the transmission of each burst. A value of 0 means there is no gap between bursts.
          type: integer
          default: 0
        inter_burst_gap_unit:
          description: |-
            The inter burst gap expressed as a number of this value.
          type: string
          enum:
          - bytes
          - nanoseconds
          default: bytes
    Pending.Detail:
      description: |-
        The standard response to any request. This allows an implementation to be either async or sync.
      type: object
      properties:
        state:
          type: string
          enum:
          - pending
          - success
        url:
          description: |-
            The url to poll while the state is pending.
          type: string
    Details:
      type: object
      properties:
        errors:
          description: |-
            A list of any errors that may have occurred while executing the request.
          type: array
          items:
            type: string
        warnings:
          description: |-
            A list of any warnings generated while executing the request.
          type: array
          items:
            type: string
    Link.State:
      description: |-
        Port link state.
      type: object
      required:
      - state
      properties:
        port_names:
          description: |-
            The names of port objects to. An empty or null list will control all port objects.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Port/properties/name
        state:
          description: |-
            The link state.
          type: string
          enum:
          - up
          - down
    Transmit.State:
      description: |-
        Control the transmit state of flows.
      type: object
      required:
      - state
      properties:
        flow_names:
          description: |-
            The names of flows to which the transmit state will be applied to. If the list of flow_names is empty or null the state will be applied to all configured flows.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Flow/properties/name
        state:
          description: |-
            The transmit state.
          type: string
          enum:
          - start
          - stop
          - pause
          default: start
    Capture.State:
      description: |-
        Control port capture state
      type: object
      required:
      - state
      properties:
        port_names:
          description: |-
            The name of ports to start capturing packets on. An empty or null list will control all port objects.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Port/properties/name
        state:
          description: |-
            The capture state.
          type: string
          enum:
          - start
          - stop
    Bgpv4.Route.State:
      description: |-
        BGPv4 route specific action
      type: object
      required:
      - state
      properties:
        names:
          description: |-
            The names of Bgpv4RouteRange object to control.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device.Bgpv4RouteRange/properties/name
        state:
          description: |-
            BGPv4 route specific state
          type: string
          enum:
          - withdraw_routes
          - advertise_routes
    Bgpv6.Route.State:
      description: |-
        BGPv6 route specific action
      type: object
      required:
      - state
      properties:
        names:
          description: |-
            The names of Bgpv6RouteRange object to control.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device.Bgpv6RouteRange/properties/name
        state:
          description: |-
            BGPv6 route specific state
          type: string
          enum:
          - withdraw_routes
          - advertise_routes
    Metrics.Request:
      description: |-
        Request to traffic generator for metrics of choice
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - port
          - flow
          - bgpv4
          - bgpv6
        port:
          $ref: '#/components/schemas/Port.Metrics.Request'
        flow:
          $ref: '#/components/schemas/Flow.Metrics.Request'
        bgpv4:
          $ref: '#/components/schemas/Bgpv4.Metrics.Request'
        bgpv6:
          $ref: '#/components/schemas/Bgpv6.Metrics.Request'
    Metrics.Response:
      description: |-
        Response containing chosen traffic generator metrics
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - port_metrics
          - flow_metrics
          - bgpv4_metrics
        port_metrics:
          type: array
          items:
            $ref: '#/components/schemas/Port.Metric'
        flow_metrics:
          type: array
          items:
            $ref: '#/components/schemas/Flow.Metric'
        bgpv4_metrics:
          type: array
          items:
            $ref: '#/components/schemas/Bgpv4.Metric'
        bgpv6_metrics:
          type: array
          items:
            $ref: '#/components/schemas/Bgpv6.Metric'
    Port.Metrics.Request:
      description: |-
        The port result request to the traffic generator
      type: object
      properties:
        port_names:
          description: |-
            The names of objects to return results for. An empty list will return all port row results.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Port/properties/name
        column_names:
          description: |-
            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned. The name of the port cannot be excluded.
          type: array
          items:
            type: string
            enum:
            - transmit
            - location
            - link
            - capture
            - frames_tx
            - frames_rx
            - bytes_tx
            - bytes_rx
            - frames_tx_rate
            - frames_rx_rate
            - bytes_tx_rate
            - bytes_rx_rate
    Port.Metric:
      type: object
      properties:
        name:
          description: |-
            The name of a configured port
          type: string
        location:
          description: |-
            The state of the connection to the test port location. The format should be the configured port location along with  any custom connection state message.
          type: string
        link:
          description: |-
            The state of the test port link The string can be up, down or a custom error message.
          type: string
          enum:
          - up
          - down
        capture:
          description: |-
            The state of the test port capture infrastructure. The string can be started, stopped or a custom error message.
          type: string
          enum:
          - started
          - stopped
        frames_tx:
          description: |-
            The current total number of frames transmitted
          type: integer
        frames_rx:
          description: |-
            The current total number of valid frames received
          type: integer
        bytes_tx:
          description: |-
            The current total number of bytes transmitted
          type: integer
        bytes_rx:
          description: |-
            The current total number of valid bytes received
          type: integer
        frames_tx_rate:
          description: |-
            The current rate of frames transmitted
          type: number
        frames_rx_rate:
          description: |-
            The current rate of valid frames received
          type: number
        bytes_tx_rate:
          description: |-
            The current rate of bytes transmitted
          type: number
        bytes_rx_rate:
          description: |-
            The current rate of bytes received
          type: number
    Flow.Metrics.Request:
      description: |-
        The request to the traffic generator for flow results.
      type: object
      properties:
        flow_names:
          description: |-
            The names of flow objects to return results for. An empty list will return results for all flows.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Flow/properties/name
        column_names:
          description: |-
            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the flow cannot be excluded.
          type: array
          items:
            type: string
            enum:
            - transmit
            - port_tx
            - port_rx
            - frames_tx
            - frames_rx
            - bytes_tx
            - bytes_rx
            - frames_tx_rate
            - frames_rx_rate
            - min_latency_ns
            - max_latency_ns
            - avg_latency_ns
            - loss
        metric_group_names:
          description: |-
            Extend the details of flow metrics by specifying any configured  flow packet header field metric_group names.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Flow.Pattern/properties/metric_group
    Flow.MetricGroup:
      description: |-
        A metric group
      type: object
      required:
      - name
      - value
      properties:
        name:
          description: |-
            Name provided as part of a flow packet header field metric group
          type: string
        value:
          description: |-
            The value of the flow packet header field
          type: number
    Flow.Metric:
      type: object
      properties:
        name:
          description: |-
            The name of a configured flow.
          type: string
        transmit:
          description: |-
            The transmit state of the flow.
          type: string
          enum:
          - started
          - stopped
          - paused
        port_tx:
          description: |-
            The name of a configured port
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
        port_rx:
          description: |-
            The name of a configured port
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
        frames_tx:
          description: |-
            The current total number of frames transmitted
          type: integer
        frames_rx:
          description: |-
            The current total number of valid frames received
          type: integer
        bytes_tx:
          description: |-
            The current total number of bytes transmitted
          type: integer
        bytes_rx:
          description: |-
            The current total number of bytes received
          type: integer
        frames_tx_rate:
          description: |-
            The current rate of frames transmitted
          type: number
        frames_rx_rate:
          description: |-
            The current rate of valid frames received
          type: number
        min_latency_ns:
          description: |-
            The minimum latency in nanoseconds for valid frames received
          type: number
        max_latency_ns:
          description: |-
            The maximum latency in nanoseconds for valid frames received
          type: number
        avg_latency_ns:
          description: |-
            The avarage latency in nanoseconds for valid frames received
          type: number
        loss:
          description: |-
            The percentage of lost frames
          type: number
        metric_groups:
          description: |-
            Any configured flow packet header field metric_group names will  appear as additional name/value pairs.
          type: array
          items:
            $ref: '#/components/schemas/Flow.MetricGroup'
          x-constraint:
          - /components/schemas/Flow.Pattern/properties/result_group
    Bgpv4.Metrics.Request:
      description: |-
        The request to retrieve BGPv4 Router statistics and learned routing information
      type: object
      properties:
        device_names:
          description: |-
            The names of BGPv4 device to return results for. An empty list will return results for all BGPv4 devices.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device.Bgpv4/properties/name
        column_names:
          description: |-
            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv4 device cannot be excluded.
          type: array
          items:
            type: string
            enum:
            - sessions_total
            - sessions_up
            - sessions_down
            - sessions_not_started
            - routes_advertised
            - routes_withdrawn
    Bgpv4.Metric:
      description: |-
        BGPv4 Router statistics and learned routing information
      type: object
      properties:
        name:
          description: |-
            The name of a configured BGPv4 device.
          type: string
        sessions_total:
          description: |-
            Total number of session
          type: integer
        sessions_up:
          description: |-
            Sessions are in active state
          type: integer
        sessions_down:
          description: |-
            Sessions are not active state
          type: integer
        sessions_not_started:
          description: |-
            Sessions not able to start due to some internal issue
          type: integer
        routes_advertised:
          description: |-
            Number of advertised routes sent
          type: integer
        routes_withdrawn:
          description: |-
            Number of routes withdrawn
          type: integer
    Bgpv6.Metrics.Request:
      description: |-
        The request to retrieve BGPv6 Router statistics and learned routing information
      type: object
      properties:
        device_names:
          description: |-
            The names of BGPv6 device to return results for. An empty list will return results for all BGPv6 devices.
          type: array
          items:
            type: string
            x-constraint:
            - /components/schemas/Device.Bgpv6/properties/name
        column_names:
          description: |-
            The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv6 device cannot be excluded.
          type: array
          items:
            type: string
            enum:
            - sessions_total
            - sessions_up
            - sessions_down
            - sessions_not_started
            - routes_advertised
            - routes_withdrawn
    Bgpv6.Metric:
      description: |-
        BGPv6 Router statistics and learned routing information
      type: object
      properties:
        name:
          description: |-
            The name of a configured BGPv6 device.
          type: string
        sessions_total:
          description: |-
            Total number of session
          type: integer
        sessions_up:
          description: |-
            Sessions are in active state
          type: integer
        sessions_down:
          description: |-
            Sessions are not active state
          type: integer
        sessions_not_started:
          description: |-
            Sessions not started yet or sessions not able to start due to some internal issue
          type: integer
        routes_advertised:
          description: |-
            Number of advertised routes sent
          type: integer
        routes_withdrawn:
          description: |-
            Number of routes withdrawn
          type: integer
    State.Metrics:
      description: |-
        A container for the different types of states.
      type: object
      properties:
        port_state:
          type: array
          items:
            $ref: '#/components/schemas/Port.State'
        flow_state:
          type: array
          items:
            $ref: '#/components/schemas/Flow.State'
    Port.State:
      type: object
      properties:
        name:
          type: string
        link:
          type: string
          enum:
          - up
          - down
        capture:
          type: string
          enum:
          - started
          - stopped
    Flow.State:
      type: object
      properties:
        name:
          type: string
        transmit:
          type: string
          enum:
          - started
          - stopped
          - paused
    Capabilities:
      description: |-
        A list of capabilities of the implementation
      type: object
      properties:
        unsupported:
          description: |-
            A list of /components/schemas/... paths that are not supported.
          type: array
          items:
            type: string
        formats:
          description: |-
            A /components/schemas/... path and specific format  details regarding the path. Specific model format details can be additional objects and properties represented as a hashmap. For example layer1 models are defined as a hashmap key to object with  each object consisting of a specific name/value property pairs. This list of items will detail any specific formats, properties, enums.
          type: array
          items:
            type: string
    Capture.Request:
      description: |-
        The capture result request to the traffic generator. Stops the port capture on the port_name and returns the capture.
      type: object
      required:
      - port_name
      properties:
        port_name:
          description: |-
            The name of a port a capture is started on.
          type: string
          x-constraint:
          - /components/schemas/Port/properties/name
    Pattern.Flow.Ethernet.Dst.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.Ethernet.Dst:
      description: |-
        Destination MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Dst.Counter'
    Pattern.Flow.Ethernet.Src.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.Ethernet.Src:
      description: |-
        Source MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.Src.Counter'
    Pattern.Flow.Ethernet.EtherType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          minimum: 0
          maximum: 65535
        step:
          type: integer
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        ipv4: 2048
        ipv6: 34525
        arp: 2054
        vlan_802_1_q: 33024
        reserved: 65535
    Pattern.Flow.Ethernet.EtherType:
      description: |-
        Ethernet type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - auto
          - increment
          - decrement
          default: auto
        value:
          type: integer
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 65535
        auto:
          type: string
          enum:
          - auto
          default: auto
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.EtherType.Counter'
      x-constants:
        ipv4: 2048
        ipv6: 34525
        arp: 2054
        vlan_802_1_q: 33024
        reserved: 65535
    Pattern.Flow.Ethernet.PfcQueue.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Ethernet.PfcQueue:
      description: |-
        Priority flow control queue
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ethernet.PfcQueue.Counter'
    Pattern.Flow.Vlan.Priority.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Vlan.Priority:
      description: |-
        Priority code point
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Priority.Counter'
    Pattern.Flow.Vlan.Cfi.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Vlan.Cfi:
      description: |-
        Canonical format indicator or drop elegible indicator
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Cfi.Counter'
    Pattern.Flow.Vlan.Id.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        count:
          type: integer
          default: 1
    Pattern.Flow.Vlan.Id:
      description: |-
        Vlan identifier
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4095
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Id.Counter'
    Pattern.Flow.Vlan.Tpid.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 33024
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 33024
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        x8100: 33024
        x88A8: 34984
        x9100: 37120
        x9200: 37376
        x9300: 37632
    Pattern.Flow.Vlan.Tpid:
      description: |-
        Protocol identifier
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 33024
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 33024
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vlan.Tpid.Counter'
      x-constants:
        x8100: 33024
        x88A8: 34984
        x9100: 37120
        x9200: 37376
        x9300: 37632
    Pattern.Flow.Vxlan.Flags.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Vxlan.Flags:
      description: |-
        Flags field with a bit format of RRRRIRRR. The I flag MUST be set to 1 for a valid vxlan network id (VNI).   The other 7 bits (designated "R") are reserved fields and MUST be  set to zero on transmission and ignored on receipt.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 8
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Flags.Counter'
    Pattern.Flow.Vxlan.Reserved0.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        count:
          type: integer
          default: 1
    Pattern.Flow.Vxlan.Reserved0:
      description: |-
        Reserved field
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 16777215
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved0.Counter'
    Pattern.Flow.Vxlan.Vni.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        count:
          type: integer
          default: 1
    Pattern.Flow.Vxlan.Vni:
      description: |-
        VXLAN network id
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 16777215
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Vni.Counter'
    Pattern.Flow.Vxlan.Reserved1.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Vxlan.Reserved1:
      description: |-
        Reserved field
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Vxlan.Reserved1.Counter'
    Pattern.Flow.Ipv4.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 4
          minimum: 0
          maximum: 15
        step:
          type: integer
          default: 4
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Version:
      description: |-
        Version
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 4
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            default: 4
            minimum: 0
            maximum: 15
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Version.Counter'
    Pattern.Flow.Ipv4.HeaderLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          minimum: 0
          maximum: 15
        step:
          type: integer
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.HeaderLength:
      description: |-
        Header length
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - auto
          - increment
          - decrement
          default: auto
        value:
          type: integer
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 15
        auto:
          type: string
          enum:
          - auto
          default: auto
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.HeaderLength.Counter'
    Pattern.Flow.Ipv4.TotalLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          minimum: 0
          maximum: 65535
        step:
          type: integer
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.TotalLength:
      description: |-
        Total length
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - auto
          - increment
          - decrement
          default: auto
        value:
          type: integer
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 65535
        auto:
          type: string
          enum:
          - auto
          default: auto
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TotalLength.Counter'
    Pattern.Flow.Ipv4.Identification.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Identification:
      description: |-
        Identification
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Identification.Counter'
    Pattern.Flow.Ipv4.Reserved.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Reserved:
      description: |-
        Version
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Reserved.Counter'
    Pattern.Flow.Ipv4.DontFragment.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.DontFragment:
      description: |-
        Dont fragment
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.DontFragment.Counter'
    Pattern.Flow.Ipv4.MoreFragments.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.MoreFragments:
      description: |-
        More fragments
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.MoreFragments.Counter'
    Pattern.Flow.Ipv4.FragmentOffset.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 31
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 31
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.FragmentOffset:
      description: |-
        Fragment offset
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 31
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 31
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.FragmentOffset.Counter'
    Pattern.Flow.Ipv4.TimeToLive.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.TimeToLive:
      description: |-
        Time to live
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 64
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.TimeToLive.Counter'
    Pattern.Flow.Ipv4.Protocol.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 61
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 61
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Protocol:
      description: |-
        Protocol, default is 61 any host internal protocol
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 61
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 61
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Protocol.Counter'
    Pattern.Flow.Ipv4.HeaderChecksum:
      description: |-
        Header checksum
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Ipv4.Src.Counter:
      description: |-
        ipv4 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 0.0.0.0
          format: ipv4
        step:
          type: string
          default: 0.0.0.0
          format: ipv4
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Src:
      description: |-
        Source address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 0.0.0.0
          format: ipv4
        values:
          type: array
          items:
            type: string
            default: 0.0.0.0
            format: ipv4
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Src.Counter'
    Pattern.Flow.Ipv4.Dst.Counter:
      description: |-
        ipv4 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 0.0.0.0
          format: ipv4
        step:
          type: string
          default: 0.0.0.0
          format: ipv4
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Dst:
      description: |-
        Destination address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 0.0.0.0
          format: ipv4
        values:
          type: array
          items:
            type: string
            default: 0.0.0.0
            format: ipv4
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dst.Counter'
    Pattern.Flow.Ipv4.Priority.Raw.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Priority.Raw:
      description: |-
        Raw priority
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Priority.Raw.Counter'
    Pattern.Flow.Ipv4.Dscp.Phb.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 63
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 63
        count:
          type: integer
          default: 1
      x-constants:
        default: 0
        cs1: 8
        cs2: 16
        cs3: 24
        cs4: 32
        cs5: 40
        cs6: 48
        cs7: 56
        af11: 10
        af12: 12
        af13: 14
        af21: 18
        af22: 20
        af23: 22
        af31: 26
        af32: 28
        af33: 30
        af41: 34
        af42: 36
        af43: 38
        ef46: 46
    Pattern.Flow.Ipv4.Dscp.Phb:
      description: |-
        Per hop behavior
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 63
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 63
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Phb.Counter'
      x-constants:
        default: 0
        cs1: 8
        cs2: 16
        cs3: 24
        cs4: 32
        cs5: 40
        cs6: 48
        cs7: 56
        af11: 10
        af12: 12
        af13: 14
        af21: 18
        af22: 20
        af23: 22
        af31: 26
        af32: 28
        af33: 30
        af41: 34
        af42: 36
        af43: 38
        ef46: 46
    Pattern.Flow.Ipv4.Dscp.Ecn.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 3
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 3
        count:
          type: integer
          default: 1
      x-constants:
        non_capable: 0
        capable_transport_0: 1
        capable_transport_1: 2
        congestion_encountered: 3
    Pattern.Flow.Ipv4.Dscp.Ecn:
      description: |-
        Explicit congestion notification
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 3
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 3
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Dscp.Ecn.Counter'
      x-constants:
        non_capable: 0
        capable_transport_0: 1
        capable_transport_1: 2
        congestion_encountered: 3
    Pattern.Flow.Ipv4.Tos.Precedence.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
      x-constants:
        routine: 0
        priority: 1
        immediate: 2
        flash: 3
        flash_override: 4
        critic_ecp: 5
        internetwork_control: 6
        network_control: 7
    Pattern.Flow.Ipv4.Tos.Precedence:
      description: |-
        Precedence
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Precedence.Counter'
      x-constants:
        routine: 0
        priority: 1
        immediate: 2
        flash: 3
        flash_override: 4
        critic_ecp: 5
        internetwork_control: 6
        network_control: 7
    Pattern.Flow.Ipv4.Tos.Delay.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Delay:
      description: |-
        Delay
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Delay.Counter'
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Throughput.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Throughput:
      description: |-
        Throughput
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Throughput.Counter'
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Reliability.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Reliability:
      description: |-
        Reliability
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Reliability.Counter'
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Monetary.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Monetary:
      description: |-
        Monetary
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Monetary.Counter'
      x-constants:
        normal: 0
        low: 1
    Pattern.Flow.Ipv4.Tos.Unused.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv4.Tos.Unused:
      description: |-
        Unused
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv4.Tos.Unused.Counter'
    Pattern.Flow.Ipv6.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 6
          minimum: 0
          maximum: 15
        step:
          type: integer
          default: 6
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.Version:
      description: |-
        Version number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 6
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            default: 6
            minimum: 0
            maximum: 15
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Version.Counter'
    Pattern.Flow.Ipv6.TrafficClass.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.TrafficClass:
      description: |-
        Traffic class
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.TrafficClass.Counter'
    Pattern.Flow.Ipv6.FlowLabel.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1048575
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1048575
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.FlowLabel:
      description: |-
        Flow label
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1048575
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1048575
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.FlowLabel.Counter'
    Pattern.Flow.Ipv6.PayloadLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.PayloadLength:
      description: |-
        Payload length
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - auto
          - increment
          - decrement
          default: auto
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        auto:
          type: string
          enum:
          - auto
          default: auto
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.PayloadLength.Counter'
    Pattern.Flow.Ipv6.NextHeader.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 59
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 59
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
      x-constants:
        hopopt: 0
        icmp: 1
        igmp: 2
        ggp: 3
        ip_in_ip: 4
        st: 5
        tcp: 6
        cpt: 7
        egp: 8
        igp: 9
        no_next_header: 59
    Pattern.Flow.Ipv6.NextHeader:
      description: |-
        Next header
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 59
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 59
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.NextHeader.Counter'
      x-constants:
        hopopt: 0
        icmp: 1
        igmp: 2
        ggp: 3
        ip_in_ip: 4
        st: 5
        tcp: 6
        cpt: 7
        egp: 8
        igp: 9
        no_next_header: 59
    Pattern.Flow.Ipv6.HopLimit.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.HopLimit:
      description: |-
        Hop limit
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 64
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 64
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.HopLimit.Counter'
    Pattern.Flow.Ipv6.Src.Counter:
      description: |-
        ipv6 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: ::0
          format: ipv6
        step:
          type: string
          default: ::0
          format: ipv6
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.Src:
      description: |-
        Source address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: ::0
          format: ipv6
        values:
          type: array
          items:
            type: string
            default: ::0
            format: ipv6
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Src.Counter'
    Pattern.Flow.Ipv6.Dst.Counter:
      description: |-
        ipv6 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: ::0
          format: ipv6
        step:
          type: string
          default: ::0
          format: ipv6
        count:
          type: integer
          default: 1
    Pattern.Flow.Ipv6.Dst:
      description: |-
        Destination address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: ::0
          format: ipv6
        values:
          type: array
          items:
            type: string
            default: ::0
            format: ipv6
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ipv6.Dst.Counter'
    Pattern.Flow.PfcPause.Dst.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.Dst:
      description: |-
        Destination MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Dst.Counter'
    Pattern.Flow.PfcPause.Src.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.Src:
      description: |-
        Source MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.Src.Counter'
    Pattern.Flow.PfcPause.EtherType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        x8808: 34824
    Pattern.Flow.PfcPause.EtherType:
      description: |-
        Ethernet type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 34824
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.EtherType.Counter'
      x-constants:
        x8808: 34824
    Pattern.Flow.PfcPause.ControlOpCode.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 257
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 257
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.ControlOpCode:
      description: |-
        Control operation code
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 257
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 257
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ControlOpCode.Counter'
    Pattern.Flow.PfcPause.ClassEnableVector.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.ClassEnableVector:
      description: |-
        Destination
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.ClassEnableVector.Counter'
    Pattern.Flow.PfcPause.PauseClass0.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass0:
      description: |-
        Pause class 0
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass0.Counter'
    Pattern.Flow.PfcPause.PauseClass1.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass1:
      description: |-
        Pause class 1
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass1.Counter'
    Pattern.Flow.PfcPause.PauseClass2.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass2:
      description: |-
        Pause class 2
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass2.Counter'
    Pattern.Flow.PfcPause.PauseClass3.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass3:
      description: |-
        Pause class 3
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass3.Counter'
    Pattern.Flow.PfcPause.PauseClass4.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass4:
      description: |-
        Pause class 4
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass4.Counter'
    Pattern.Flow.PfcPause.PauseClass5.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass5:
      description: |-
        Pause class 5
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass5.Counter'
    Pattern.Flow.PfcPause.PauseClass6.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass6:
      description: |-
        Pause class 6
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass6.Counter'
    Pattern.Flow.PfcPause.PauseClass7.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.PfcPause.PauseClass7:
      description: |-
        Pause class 7
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.PfcPause.PauseClass7.Counter'
    Pattern.Flow.EthernetPause.Dst.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.EthernetPause.Dst:
      description: |-
        Destination MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Dst.Counter'
    Pattern.Flow.EthernetPause.Src.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.EthernetPause.Src:
      description: |-
        Source MAC address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Src.Counter'
    Pattern.Flow.EthernetPause.EtherType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        flow_control: 34824
    Pattern.Flow.EthernetPause.EtherType:
      description: |-
        Ethernet type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 34824
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 34824
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.EtherType.Counter'
      x-constants:
        flow_control: 34824
    Pattern.Flow.EthernetPause.ControlOpCode.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.EthernetPause.ControlOpCode:
      description: |-
        Control operation code
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.ControlOpCode.Counter'
    Pattern.Flow.EthernetPause.Time.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.EthernetPause.Time:
      description: |-
        Time
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.EthernetPause.Time.Counter'
    Pattern.Flow.Tcp.SrcPort.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.SrcPort:
      description: |-
        Source port
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SrcPort.Counter'
    Pattern.Flow.Tcp.DstPort.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.DstPort:
      description: |-
        Destination port
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DstPort.Counter'
    Pattern.Flow.Tcp.SeqNum.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.SeqNum:
      description: |-
        Sequence number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.SeqNum.Counter'
    Pattern.Flow.Tcp.AckNum.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.AckNum:
      description: |-
        Acknowledgement number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.AckNum.Counter'
    Pattern.Flow.Tcp.DataOffset.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 15
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.DataOffset:
      description: |-
        The number of 32 bit words in the TCP header. This indicates where the data begins.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 15
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.DataOffset.Counter'
    Pattern.Flow.Tcp.EcnNs.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.EcnNs:
      description: |-
        Explicit congestion notification, concealment protection.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnNs.Counter'
    Pattern.Flow.Tcp.EcnCwr.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.EcnCwr:
      description: |-
        Explicit congestion notification, congestion window reduced.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnCwr.Counter'
    Pattern.Flow.Tcp.EcnEcho.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.EcnEcho:
      description: |-
        Explicit congestion notification, echo. 1 indicates the peer is ecn capable. 0 indicates that a packet with ipv4.ecn = 11 in the ip header was  received during normal transmission.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.EcnEcho.Counter'
    Pattern.Flow.Tcp.CtlUrg.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlUrg:
      description: |-
        A value of 1 indicates that the urgent pointer field is significant.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlUrg.Counter'
    Pattern.Flow.Tcp.CtlAck.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlAck:
      description: |-
        A value of 1 indicates that the ackknowledgment field is significant.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlAck.Counter'
    Pattern.Flow.Tcp.CtlPsh.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlPsh:
      description: "Asks to push the buffered data to the receiving application. "
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlPsh.Counter'
    Pattern.Flow.Tcp.CtlRst.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlRst:
      description: "Reset the connection. "
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlRst.Counter'
    Pattern.Flow.Tcp.CtlSyn.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlSyn:
      description: "Synchronize sequenece numbers. "
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlSyn.Counter'
    Pattern.Flow.Tcp.CtlFin.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.CtlFin:
      description: "Last packet from the sender. "
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.CtlFin.Counter'
    Pattern.Flow.Tcp.Window.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Tcp.Window:
      description: |-
        Tcp connection window.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Tcp.Window.Counter'
    Pattern.Flow.Udp.SrcPort.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Udp.SrcPort:
      description: |-
        Source port
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Udp.SrcPort.Counter'
    Pattern.Flow.Udp.DstPort.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Udp.DstPort:
      description: |-
        Destination port
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Udp.DstPort.Counter'
    Pattern.Flow.Udp.Length.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Udp.Length:
      description: |-
        Length
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Udp.Length.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Udp.Length.Counter'
    Pattern.Flow.Udp.Checksum:
      description: |-
        UDP checksum
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Gre.ChecksumPresent.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gre.ChecksumPresent:
      description: |-
        Checksum present bit
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gre.ChecksumPresent.Counter'
    Pattern.Flow.Gre.Reserved0.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        count:
          type: integer
          default: 1
    Pattern.Flow.Gre.Reserved0:
      description: |-
        Reserved bits
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4095
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4095
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved0.Counter'
    Pattern.Flow.Gre.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Gre.Version:
      description: |-
        GRE version number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Version.Counter'
    Pattern.Flow.Gre.Protocol.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        ipv4: 2048
        ipv6: 34525
    Pattern.Flow.Gre.Protocol:
      description: |-
        Protocol type of encapsulated payload
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 2048
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Protocol.Counter'
      x-constants:
        ipv4: 2048
        ipv6: 34525
    Pattern.Flow.Gre.Checksum:
      description: |-
        Optional checksum of GRE header and payload. Only present if the checksum_present bit is set.
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Gre.Reserved1.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Gre.Reserved1:
      description: |-
        Optional reserved field. Only present if the checksum_present bit is set.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gre.Reserved1.Counter'
    Pattern.Flow.Gtpv1.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.Version:
      description: |-
        GTPv1 version
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Version.Counter'
    Pattern.Flow.Gtpv1.ProtocolType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.ProtocolType:
      description: |-
        Protocol type, GTP is 1, GTP' is 0
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.ProtocolType.Counter'
    Pattern.Flow.Gtpv1.Reserved.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.Reserved:
      description: |-
        Reserved field
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Reserved.Counter'
    Pattern.Flow.Gtpv1.EFlag.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.EFlag:
      description: |-
        Extension header field present
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.EFlag.Counter'
    Pattern.Flow.Gtpv1.SFlag.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.SFlag:
      description: |-
        Sequence number field present
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SFlag.Counter'
    Pattern.Flow.Gtpv1.PnFlag.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.PnFlag:
      description: |-
        N-PDU field present
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.PnFlag.Counter'
    Pattern.Flow.Gtpv1.MessageType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.MessageType:
      description: |-
        The type of GTP message Different types of messages are defined in 3GPP TS 29.060 section 7.1
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageType.Counter'
    Pattern.Flow.Gtpv1.MessageLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.MessageLength:
      description: |-
        The length of the payload (the bytes following the mandatory 8-byte GTP header) in bytes that includes any optional fields
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.MessageLength.Counter'
    Pattern.Flow.Gtpv1.Teid.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.Teid:
      description: |-
        Tunnel endpoint identifier (TEID) used to multiplex connections in the same GTP tunnel
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.Teid.Counter'
    Pattern.Flow.Gtpv1.SquenceNumber.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.SquenceNumber:
      description: |-
        Sequence number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the s_flag bit is on.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.SquenceNumber.Counter'
    Pattern.Flow.Gtpv1.NPduNumber.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.NPduNumber:
      description: |-
        N-PDU number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the pn_flag bit is on.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NPduNumber.Counter'
    Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv1.NextExtensionHeaderType:
      description: |-
        Next extension header. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the e_flag bit is on.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv1.NextExtensionHeaderType.Counter'
    Pattern.Flow.GtpExtension.ExtensionLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.GtpExtension.ExtensionLength:
      description: |-
        This field states the length of this extension header,  including the length, the contents, and the next extension header field, in 4-octet units, so the length of the extension must  always be a multiple of 4.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.ExtensionLength.Counter'
    Pattern.Flow.GtpExtension.Contents.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 281474976710655
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 281474976710655
        count:
          type: integer
          default: 1
    Pattern.Flow.GtpExtension.Contents:
      description: |-
        The extension header contents
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 281474976710655
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 281474976710655
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.Contents.Counter'
    Pattern.Flow.GtpExtension.NextExtensionHeader.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.GtpExtension.NextExtensionHeader:
      description: |-
        It states the type of the next extension, or 0 if no next  extension exists.  This permits chaining several next extension headers.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.GtpExtension.NextExtensionHeader.Counter'
    Pattern.Flow.Gtpv2.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 2
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 2
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.Version:
      description: |-
        Version number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 2
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 2
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Version.Counter'
    Pattern.Flow.Gtpv2.PiggybackingFlag.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.PiggybackingFlag:
      description: |-
        If piggybacking_flag is set to 1 then another GTP-C message with its own header shall be present at the end of the current message
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.PiggybackingFlag.Counter'
    Pattern.Flow.Gtpv2.TeidFlag.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.TeidFlag:
      description: |-
        If teid_flag is set to 1 then the TEID field will be present  between the message length and the sequence number. All messages except Echo and Echo reply require TEID to be present
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 1
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 1
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.TeidFlag.Counter'
    Pattern.Flow.Gtpv2.Spare1.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.Spare1:
      description: |-
        A 3-bit reserved field (must be 0).
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 7
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 7
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare1.Counter'
    Pattern.Flow.Gtpv2.MessageType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.MessageType:
      description: |-
        An 8-bit field that indicates the type of GTP message. Different types of messages are defined in 3GPP TS 29.060 section 7.1
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageType.Counter'
    Pattern.Flow.Gtpv2.MessageLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.MessageLength:
      description: |-
        A 16-bit field that indicates the length of the payload in bytes, excluding the mandatory GTP-c header (first 4 bytes). Includes the TEID and sequence_number if they are present.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.MessageLength.Counter'
    Pattern.Flow.Gtpv2.Teid.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.Teid:
      description: |-
        Tunnel endpoint identifier. A 32-bit (4-octet) field used to multiplex different connections in the same GTP tunnel. Is present only if the teid_flag is set.
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Teid.Counter'
    Pattern.Flow.Gtpv2.SequenceNumber.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.SequenceNumber:
      description: |-
        The sequence number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 16777215
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 16777215
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.SequenceNumber.Counter'
    Pattern.Flow.Gtpv2.Spare2.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Gtpv2.Spare2:
      description: |-
        Reserved field
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Gtpv2.Spare2.Counter'
    Pattern.Flow.Arp.HardwareType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        ethernet: 1
    Pattern.Flow.Arp.HardwareType:
      description: |-
        Network link protocol type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareType.Counter'
      x-constants:
        ethernet: 1
    Pattern.Flow.Arp.ProtocolType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        ipv4: 2048
        ipv6: 34525
    Pattern.Flow.Arp.ProtocolType:
      description: |-
        The internetwork protocol for which the ARP request is intended
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 2048
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 2048
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolType.Counter'
      x-constants:
        ipv4: 2048
        ipv6: 34525
    Pattern.Flow.Arp.HardwareLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 6
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 6
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.HardwareLength:
      description: |-
        Length (in octets) of a hardware address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 6
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 6
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.HardwareLength.Counter'
    Pattern.Flow.Arp.ProtocolLength.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 4
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 4
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.ProtocolLength:
      description: |-
        Length (in octets) of internetwork addresses
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 4
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 4
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.ProtocolLength.Counter'
    Pattern.Flow.Arp.Operation.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
      x-constants:
        request: 1
        reply: 2
    Pattern.Flow.Arp.Operation:
      description: |-
        The operation that the sender is performing
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 65535
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.Operation.Counter'
      x-constants:
        request: 1
        reply: 2
    Pattern.Flow.Arp.SenderHardwareAddr.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.SenderHardwareAddr:
      description: |-
        Media address of the sender
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderHardwareAddr.Counter'
    Pattern.Flow.Arp.SenderProtocolAddr.Counter:
      description: |-
        ipv4 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 0.0.0.0
          format: ipv4
        step:
          type: string
          default: 0.0.0.0
          format: ipv4
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.SenderProtocolAddr:
      description: |-
        Internetwork address of the sender
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 0.0.0.0
          format: ipv4
        values:
          type: array
          items:
            type: string
            default: 0.0.0.0
            format: ipv4
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.SenderProtocolAddr.Counter'
    Pattern.Flow.Arp.TargetHardwareAddr.Counter:
      description: |-
        mac counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        step:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.TargetHardwareAddr:
      description: |-
        Media address of the target
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 00:00:00:00:00:00
          format: mac
        values:
          type: array
          items:
            type: string
            default: 00:00:00:00:00:00
            format: mac
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetHardwareAddr.Counter'
    Pattern.Flow.Arp.TargetProtocolAddr.Counter:
      description: |-
        ipv4 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 0.0.0.0
          format: ipv4
        step:
          type: string
          default: 0.0.0.0
          format: ipv4
        count:
          type: integer
          default: 1
    Pattern.Flow.Arp.TargetProtocolAddr:
      description: |-
        Internetwork address of the target
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 0.0.0.0
          format: ipv4
        values:
          type: array
          items:
            type: string
            default: 0.0.0.0
            format: ipv4
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Arp.TargetProtocolAddr.Counter'
    Pattern.Flow.Icmp.Type.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
      x-constants:
        echo_reply: 0
        echo_request: 8
        destination_unreachable: 3
        source_quench: 4
        redirect_message: 5
        time_exceeded: 11
        parameter_problem: 12
        timestamp: 13
        timestamp_reply: 14
        information_request: 15
        information_reply: 16
    Pattern.Flow.Icmp.Type:
      description: |-
        ICMP Type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 8
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 8
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Type.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Type.Counter'
      x-constants:
        echo_reply: 0
        echo_request: 8
        destination_unreachable: 3
        source_quench: 4
        redirect_message: 5
        time_exceeded: 11
        parameter_problem: 12
        timestamp: 13
        timestamp_reply: 14
        information_request: 15
        information_reply: 16
    Pattern.Flow.Icmp.Code.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Icmp.Code:
      description: |-
        ICMP subtype
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Code.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.Code.Counter'
    Pattern.Flow.Icmp.Checksum:
      description: |-
        ICMP checksum
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Icmp.RestOfHeaders.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Icmp.RestOfHeaders:
      description: |-
        Contents vary based on the ICMP type and code
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.RestOfHeaders.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmp.RestOfHeaders.Counter'
    Pattern.Flow.Icmpv6.Type.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 128
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 128
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
      x-constants:
        destination_unreachable: 1
        packet_too_big: 2
        time_exceeded: 3
        parameter_problem: 4
        echo_reply: 129
        echo_request: 128
        multicast_listener_query: 130
    Pattern.Flow.Icmpv6.Type:
      description: |-
        ICMPv6 Type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 128
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 128
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Type.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Type.Counter'
      x-constants:
        destination_unreachable: 1
        packet_too_big: 2
        time_exceeded: 3
        parameter_problem: 4
        echo_reply: 129
        echo_request: 128
        multicast_listener_query: 130
    Pattern.Flow.Icmpv6.Code.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Icmpv6.Code:
      description: |-
        ICMPv6 subtype
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Code.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.Code.Counter'
    Pattern.Flow.Icmpv6.Checksum:
      description: |-
        ICMPv6 checksum
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Icmpv6.MessageBody.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Icmpv6.MessageBody:
      description: |-
        Contents vary based on the ICMPv6 type and code
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.MessageBody.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Icmpv6.MessageBody.Counter'
    Pattern.Flow.Ppp.Address.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 255
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 255
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
      x-constants:
        standard_address: 255
    Pattern.Flow.Ppp.Address:
      description: |-
        PPP address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 255
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 255
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Address.Counter'
      x-constants:
        standard_address: 255
    Pattern.Flow.Ppp.Control.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 3
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 3
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
      x-constants:
        unnumbered_data: 3
    Pattern.Flow.Ppp.Control:
      description: |-
        PPP control
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 3
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 3
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.Control.Counter'
      x-constants:
        unnumbered_data: 3
    Pattern.Flow.Ppp.ProtocolType.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          minimum: 0
          maximum: 65535
        step:
          type: integer
          minimum: 0
          maximum: 65535
        count:
          type: integer
          default: 1
    Pattern.Flow.Ppp.ProtocolType:
      description: |-
        PPP protocol type
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - auto
          - increment
          - decrement
          default: auto
        value:
          type: integer
          minimum: 0
          maximum: 65535
        values:
          type: array
          items:
            type: integer
            minimum: 0
            maximum: 65535
        auto:
          type: string
          enum:
          - auto
          default: auto
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Ppp.ProtocolType.Counter'
    Pattern.Flow.Igmpv1.Version.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 1
          minimum: 0
          maximum: 15
        step:
          type: integer
          default: 1
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
    Pattern.Flow.Igmpv1.Version:
      description: |-
        Version number
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 1
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            default: 1
            minimum: 0
            maximum: 15
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Version.Counter'
    Pattern.Flow.Igmpv1.Type.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 17
          minimum: 0
          maximum: 15
        step:
          type: integer
          default: 17
          minimum: 0
          maximum: 15
        count:
          type: integer
          default: 1
      x-constants:
        query: 17
        report: 18
    Pattern.Flow.Igmpv1.Type:
      description: |-
        Type of message
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 17
          minimum: 0
          maximum: 15
        values:
          type: array
          items:
            type: integer
            default: 17
            minimum: 0
            maximum: 15
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Type.Counter'
      x-constants:
        query: 17
        report: 18
    Pattern.Flow.Igmpv1.Unused.Counter:
      description: |-
        integer counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        step:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        count:
          type: integer
          default: 1
    Pattern.Flow.Igmpv1.Unused:
      description: |-
        Unused
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: integer
          default: 0
          minimum: 0
          maximum: 255
        values:
          type: array
          items:
            type: integer
            default: 0
            minimum: 0
            maximum: 255
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.Unused.Counter'
    Pattern.Flow.Igmpv1.Checksum:
      description: |-
        Checksum
      type: object
      required:
      - choice
      properties:
        choice:
          description: |-
            The type of checksum
          type: string
          enum:
          - generated
          - custom
          default: generated
        generated:
          description: |-
            A system generated checksum value
          type: string
          enum:
          - good
          - bad
          default: good
        custom:
          description: |-
            A custom checksum value
          type: integer
          minimum: 0
          maximum: 65535
    Pattern.Flow.Igmpv1.GroupAddress.Counter:
      description: |-
        ipv4 counter pattern
      type: object
      required:
      - start
      - step
      properties:
        start:
          type: string
          default: 0.0.0.0
          format: ipv4
          minimum: 0
          maximum: 4294967295
        step:
          type: string
          default: 0.0.0.0
          format: ipv4
          minimum: 0
          maximum: 4294967295
        count:
          type: integer
          default: 1
    Pattern.Flow.Igmpv1.GroupAddress:
      description: |-
        Group address
      type: object
      required:
      - choice
      properties:
        choice:
          type: string
          enum:
          - value
          - values
          - increment
          - decrement
          default: value
        value:
          type: string
          default: 0.0.0.0
          format: ipv4
          minimum: 0
          maximum: 4294967295
        values:
          type: array
          items:
            type: string
            default: 0.0.0.0
            format: ipv4
            minimum: 0
            maximum: 4294967295
        metric_group:
          description: |-
            A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request.
          type: string
        increment:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress.Counter'
        decrement:
          $ref: '#/components/schemas/Pattern.Flow.Igmpv1.GroupAddress.Counter'
