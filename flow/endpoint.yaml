components:
  schemas:
    Flow.TxRx:
      description: |-
        A container for different types of transmit and receive 
        endpoint containers.
      type: object
      properties:
        choice:
          description: |-
            The type of transmit and receive container used by the flow.
          type: string
          default: port
          x-field-uid: 1
          x-enum:
            port:
              x-field-uid: 1
            device:
              x-field-uid: 2
        port:
          $ref: '#/components/schemas/Flow.Port'
          x-field-uid: 2
        device:
          $ref: '#/components/schemas/Flow.Router'
          x-field-uid: 3
    Flow.Port:
      description: |-
        A container for a transmit port and 0..n intended receive ports.
        When assigning this container to a flow the flows's 
        packet headers will not be populated with any address resolution 
        information such as source and/or destination addresses. 
        For example Flow.Ethernet dst mac address values will be defaulted to 0. 
        For full control over the Flow.properties.packet header contents use this 
        container. 
      type: object
      required: [tx_name]
      properties:
        tx_name:
          description: |-
            The unique name of a port that is the transmit port.
          type: string
          x-constraint:
          - '/components/schemas/Port/properties/name'
          - '/components/schemas/Lag/properties/name'
          x-field-uid: 1
        rx_name:
          description: |-
            The unique name of a port that is the intended receive port.
          type: string
          x-constraint:
          - '/components/schemas/Port/properties/name'
          - '/components/schemas/Lag/properties/name'

          x-field-uid: 2
    Flow.Router:
      description: >-
        A container for declaring a map of 1..n transmit devices
        to 1..n receive devices. This allows for a single flow to have  different
        tx to rx device flows such as a single one to one map or a  many to many map.
      type: object
      required: [tx_names, rx_names]
      properties:
        mode:
          description: |-
            Determines the mapping of tx_names to rx_names.

            The mesh mode creates traffic between each value in tx_names to
            every value in rx_names except in the case where the individual 
            tx_names value is equal to rx_names value which will be ignored.
            Identical values in tx_names or rx_names MUST raise an error.

            The one_to_one mode creates traffic between each value pair in 
            of tx_names and rx_names by index.
            The length of tx_names and rx_name MUST be the same.
            Identical values in tx_names or rx_names MUST raise an error.
          type: string
          default: mesh
          x-field-uid: 1
          x-enum:
            mesh:
              x-field-uid: 1
            one_to_one:
              x-field-uid: 2
        tx_names:
          type: array
          items:
            description: |-
              The unique name of an emulated device that will be transmitting.
            type: string
          x-constraint:
          - '/components/schemas/Device.Ethernet/properties/name'
          - '/components/schemas/Device.Ipv4/properties/name'
          - '/components/schemas/Device.Ipv6/properties/name'
          - '/components/schemas/Bgp.V4RouteRange/properties/name'
          - '/components/schemas/Bgp.V6RouteRange/properties/name'
          - '/components/schemas/Bgp.CMacIpRange/properties/name'
          example: ['Eth 1', 'Eth 2', 'Eth 3', 'IPv4 1', 'IPv6 1', 'Bgp V4RouteRange
              1', 'Bgp V6RouteRange 1']
          x-field-uid: 2
        rx_names:
          type: array
          items:
            description: |-
              The unique name of an emulated device that will be receiving.
            type: string
          x-constraint:
          - '/components/schemas/Device.Ethernet/properties/name'
          - '/components/schemas/Device.Ipv4/properties/name'
          - '/components/schemas/Device.Ipv6/properties/name'
          - '/components/schemas/Bgp.V4RouteRange/properties/name'
          - '/components/schemas/Bgp.V6RouteRange/properties/name'
          - '/components/schemas/Bgp.CMacIpRange/properties/name'
          example: ['Eth 1', 'Eth 2', 'Eth 3', 'IPv4 1', 'IPv6 1', 'Bgp V4RouteRange
              1', 'Bgp V6RouteRange 1']
          x-field-uid: 3
