components:
  schemas:
    Flow.Tcp:
      description: TCP packet header
      type: object
      properties:
        src_port:
          x-pattern:
            description: >-
              Source port
            format: integer
            length: 16
            default: 0
            features: [count, metric_group]
        dst_port:
          x-pattern:
            description: >-
              Destination port
            format: integer
            length: 16
            default: 0
            features: [count, metric_group]
        seq_num:
          x-pattern:
            description: >-
              Sequence number
            format: hex
            length: 32
            default: '00000000'
            features: [count, metric_group]
        ack_num:
          x-pattern:
            description: >-
              Acknowledgement number
            format: hex
            length: 32
            default: '00000000'
            features: [count, metric_group]
        data_offset:
          x-pattern:
            description: >-
              The number of 32 bit words in the TCP header.
              This indicates where the data begins.
            format: integer
            length: 4
            default: 0
            features: [count, metric_group]
        ecn_ns:
          x-pattern:
            description: >-
              Explicit congestion notification, concealment protection.
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ecn_cwr:
          x-pattern:
            description: >-
              Explicit congestion notification, congestion window reduced.
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ecn_echo:
          x-pattern:
            description: >-
              Explicit congestion notification, echo.
              1 indicates the peer is ecn capable.
              0 indicates that a packet with ipv4.ecn = 11 in the ip header was 
              received during normal transmission.
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_urg:
          x-pattern:
            description: >-
              A value of 1 indicates that the urgent pointer field is significant.
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_ack:
          x-pattern:
            description: >-
              A value of 1 indicates that the ackknowledgment field is significant.
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_psh:
          x-pattern:
            description: >-
              Asks to push the buffered data to the receiving application. 
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_rst:
          x-pattern:
            description: >-
              Reset the connection. 
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_syn:
          x-pattern:
            description: >-
             Synchronize sequenece numbers. 
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        ctl_fin:
          x-pattern:
            description: >-
              Last packet from the sender. 
            format: integer
            length: 1
            default: 0
            features: [count, metric_group]
        window:
          x-pattern:
            description: >-
              Tcp connection window.
            format: hex
            length: 16
            default: '0000'
            features: [count, metric_group]

