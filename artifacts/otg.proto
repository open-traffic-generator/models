/* Open Traffic Generator API 1.6.2
 * Open Traffic Generator API defines a model-driven, vendor-neutral and standard
 * interface for emulating layer 2-7 network devices and generating test traffic.
 * 
 * Contributions can be made in the following ways:
 * - [open an issue](https://github.com/open-traffic-generator/models/issues) in the
 * models repository
 * - [fork the models repository](https://github.com/open-traffic-generator/models)
 * and submit a PR
 * License: MIT */

syntax = "proto3";

package otg;

option go_package = "./otg;otg";

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

// Description missing in models
message AppsecConfig {

  // Description missing in models
  Config config = 1;

  // Used for API clients to decide what type of config they have loaded
  // required = true
  optional string configtypename = 4;

  // The version of the data model used for this configuration
  optional string datamodelversion = 5;

  // The unique identifier of the CyPerf configuration
  optional string id = 6;

  // Description missing in models
  repeated APILink links = 7;

  // The name of the configuration
  optional string name = 8;

  // The unique identifier of the session this configuration belongs to
  optional string sessionid = 2;

  // The unique identifier of the CyPerf configuration template from which this configuration
  // was created
  optional string templateid = 3;
}

// The test configuration
message Config {

  // Description missing in models
  repeated AttackProfile attackprofiles = 1;

  // Description missing in models
  ConfigValidation configvalidation = 2;

  // Description missing in models
  CustomDashboards customdashboards = 3;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  repeated NetworkProfile networkprofiles = 4;

  // Description missing in models
  repeated ApplicationProfile trafficprofiles = 5;

  // Description missing in models
  repeated string validate = 7;
}

// The configuration for DUT
message AttackProfile {

  // Indicates whether the profile is enabled or not.
  // default = True
  optional bool active = 10;

  // Description missing in models
  repeated ExternalResourceInfo add_attacks = 5;

  // Description missing in models
  repeated Attack attacks = 1;

  // Description missing in models
  NetworkMapping defaultnetworkmapping = 2;

  // Description missing in models
  ID id = 12;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  repeated UpdateNetworkMapping modify_excluded_dut_recursively = 7;

  // Description missing in models
  repeated UpdateNetworkMapping modify_tags_recursively = 8;

  // Description missing in models
  // required = true
  optional string name = 3;

  // Description missing in models
  AttackObjectivesAndTimeline objectivesandtimeline = 4;

  // Description missing in models
  repeated string reset_tags_to_default = 9;

  // Description missing in models
  TrafficSettings trafficsettings = 11;
}

// Description missing in models
message ExternalResourceInfo {

  // The id of the attack resource
  optional string externalresourceurl = 1;
}

// Description missing in models
message Attack {

  // The action timeout value of the Scenario.
  // default = 30
  optional int32 actiontimeout = 10;

  // Indicates whether the scenario is enabled or not.
  // default = True
  optional bool active = 11;

  // The client HTTP profile used in the Scenario.
  HTTPProfile clienthttpprofile = 12;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileForAttack)
  TLSProfile clienttlsprofile = 1;

  // Description missing in models
  repeated Connection connections = 13;

  // The maximum number of transactions for all scenario connections.
  optional int32 connectionsmaxtransactions = 14;

  // Description missing in models
  repeated string create = 6;

  // The description of the Scenario.
  optional string description = 15;

  // Description missing in models
  optional string destinationhostname = 16;

  // Description missing in models
  optional string dnnid = 17;

  // The endpoint ID of the Scenario.
  optional int32 endpointid = 18;

  // Description missing in models
  repeated Endpoint endpoints = 19;

  // The external resource URL of the Scenario.
  optional string externalresourceurl = 20;

  // Description missing in models
  ID id = 37;

  // The index of the scenario.
  optional int32 index = 21;

  // Description missing in models
  optional bool inherithttpprofile = 22;

  // Description missing in models
  // default = True
  optional bool inherittls = 2;

  // The Ip Preference. Must be one of: IPV4_ONLY, IPV6_ONLY, BOTH_IPV4_FIRST, BOTH_IPV6_FIRST
  // or IP_PREF_MAX.
  IpPreference ippreference = 23;

  // A value that indicates if the action is deprecated.
  optional bool isdeprecated = 24;

  // The iteration counter of the Scenario.
  optional int32 iterationcount = 25;

  // Description missing in models
  repeated APILink links = 7;

  // The maximum active limit of the Scenario.
  optional int32 maxactivelimit = 26;

  // Description missing in models
  repeated UpdateNetworkMapping modify_excluded_dut_recursively = 8;

  // Description missing in models
  repeated UpdateNetworkMapping modify_tags_recursively = 9;

  // Description missing in models
  Name name = 27;

  // Description missing in models
  NetworkMapping networkmapping = 28;

  // Description missing in models
  repeated Params params = 29;

  // The protocol ID of the Scenario.
  optional string protocolid = 30;

  // Description missing in models
  optional string qosflowid = 31;

  // If true, ConnectionsMaxTransactions will be readonly.
  optional bool readonlymaxtrans = 32;

  // The server HTTP profile used in the Scenario.
  HTTPProfile serverhttpprofile = 33;

  // Description missing in models
  // default = method(GetDefaultServerTlsProfileForAttack)
  TLSProfile servertlsprofile = 3;

  // Indicates if the scenario supports Client HTTP profile.
  optional bool supportsclienthttpprofile = 34;

  // Indicates if the scenario supports HTTP profiles.
  optional bool supportshttpprofiles = 35;

  // Indicates if the scenario supports Server HTTP profile.
  optional bool supportsserverhttpprofile = 36;

  // Description missing in models
  // default = True
  optional bool supportstls = 4;

  // Description missing in models
  // default = items(1)
  repeated AttackTrack tracks = 5;
}

// Description missing in models
message HTTPProfile {

  // Description missing in models
  Params additionalheaders = 1;

  // Description missing in models
  ConnectionPersistence connectionpersistence = 2;

  // The maximum number of transactions for all scenario connections.
  optional int32 connectionsmaxtransactions = 3;

  // The description of the HTTP profile.
  // required = true
  optional string description = 4;

  // The external resource URL of the HTTP profile.
  optional string externalresourceurl = 5;

  // Description missing in models
  Params headers = 7;

  // Description missing in models
  HTTPVersion httpversion = 6;

  // Description missing in models
  optional bool ismodified = 8;

  // Description missing in models
  repeated APILink links = 12;

  // The name of the HTTP profile.
  // required = true
  optional string name = 9;

  // The list of parameters present in the HTTP profile.
  repeated Params params = 10;

  // Description missing in models
  optional bool useapplicationserverheaders = 11;
}

// Description missing in models
message Params {

  // Description missing in models
  repeated ParamsArrayelements arrayelements = 2;

  // The type of the array elements.
  optional string arrayelementtype = 1;

  // The category associated with the parameter
  optional string category = 3;

  // The position of the category in the category list
  optional int32 categoryindex = 4;

  // A value indicating that this parameter had a source that was deprecated
  optional string deprecatedprevioussource = 5;

  // The description of the parameter
  optional string description = 6;

  // The dictionary value of the parameter.
  ParamsDictionaryvalue dictionaryvalue = 7;

  // Description missing in models
  ParamsEnum_property enum_property = 8;

  // Description missing in models
  repeated string file_upload = 22;

  // Description missing in models
  FileValue filevalue = 9;

  // If true, the value of this parameter is used to uniquely identify an application/attack
  optional bool flowidentifier = 10;

  // Description missing in models
  // required = true
  ID id = 23;

  // Description missing in models
  // default = False
  optional bool isdeprecated = 11;

  // Description missing in models
  optional bool ismodified = 12;

  // Description missing in models
  repeated APILink links = 24;

  // Description missing in models
  repeated MediaFile mediafiles = 13;

  // The name of the parameter.
  optional string name = 15;

  // The id of the parameter.
  optional string paramid = 16;

  // Description missing in models
  optional bool readonly = 17;

  // The source of the parameter.
  optional string source = 18;

  // A list that indicates possible sources for the parameter
  repeated string supportedsources = 19;

  // A value that indicates if the parameter can have dynamic payload.
  optional bool supportsdynamicpayload = 25;

  // The type of the parameter.
  optional string type = 20;

  // The URL where the file parameter content could be uploaded.
  optional string uploadurl = 26;

  // The value of the parameter.
  optional string value = 21;
}

// Description missing in models
message ParamsArrayelements {

  // Description missing in models
  optional string additionalproperties = 1;
}

// Description missing in models
message ParamsDictionaryvalue {

  // Description missing in models
  optional string additionalproperties = 1;
}

// Description missing in models
message ParamsEnum_property {

  // Description missing in models
  repeated Choice choices = 1;
}

// Description missing in models
message FileValue {

  // The name of the file.
  optional string filename = 1;

  // The payload value of the file.
  repeated string payload = 2;

  // The resource URL of the file.
  optional string resourceurl = 3;

  // Selected column name of the file (playlist type).
  optional string value = 4;
}

// Description missing in models
message ID {
}

// Description missing in models
message APILink {

  // Description missing in models
  optional string contenttype = 1;

  // Description missing in models
  optional string href = 2;

  // Description missing in models
  optional string method = 3;

  // Description missing in models
  optional string name = 4;

  // Description missing in models
  optional int32 referencescount = 5;

  // Description missing in models
  optional string rel = 6;

  // Description missing in models
  optional string type = 7;
}

// Description missing in models
message MediaFile {

  // Description missing in models
  FileValue filevalue = 1;

  // Description missing in models
  ID id = 3;

  // Description missing in models
  repeated APILink links = 4;

  // Description missing in models
  repeated MediaTrack mediatracks = 2;
}

// Description missing in models
message MediaTrack {

  // Description missing in models
  optional int32 bitrate = 1;

  // Description missing in models
  optional int32 bitratekbps = 2;

  // Description missing in models
  optional string codec = 3;

  // Description missing in models
  optional string codecdescription = 4;

  // Description missing in models
  // required = true
  ID id = 7;

  // Description missing in models
  // required = true
  optional string trackid = 5;

  // Description missing in models
  // required = true
  TrackType tracktype = 6;
}

// Description missing in models
message TrackType {
}

// Description missing in models
message Choice {

  // Description missing in models
  optional string description = 1;

  // Description missing in models
  // default = False
  optional bool hidden = 2;

  // Description missing in models
  optional string name = 3;

  // Description missing in models
  optional string value = 4;
}

// Description missing in models
message ConnectionPersistence {
}

// Description missing in models
message HTTPVersion {
}

// Description missing in models
message TLSProfile {

  // The certificate file of the TLS profile.
  // default = method(GetDefaultCertificateFile)
  Params certificatefile = 1;

  // Description missing in models
  CipherTLS12 cipher = 2;

  // Description missing in models
  CipherTLS12 cipher12 = 3;

  // Description missing in models
  CipherTLS13 cipher13 = 4;

  // Description missing in models
  repeated CipherTLS12 ciphers12 = 5;

  // Description missing in models
  repeated CipherTLS13 ciphers13 = 6;

  // Description missing in models
  // default = method(GetDefaultDhFile)
  Params dhfile = 7;

  // Description missing in models
  repeated string get_tls_conflicts = 8;

  // The immediate FIN after close notify
  // default = False
  optional bool immediateclose = 9;

  // The key file of the TLS profile.
  // default = method(GetDefaultKeyFile)
  Params keyfile = 10;

  // The key file password of the TLS profile.
  // default = appsec
  optional string keyfilepassword = 11;

  // Description missing in models
  repeated APILink links = 12;

  // If true, the middle box compatibility will be enabled
  // default = True
  optional bool middleboxenabled = 13;

  // The ID of the TLS profile (default: TLSProfile).
  // required = true
  optional string profileid = 14;

  // Description missing in models
  repeated Conflict resolve_tls_conflicts = 15;

  // If true, a TLS close-notify alert will be sent while closing the TLS session
  // default = True
  optional bool sendclosenotify = 16;

  // Description missing in models
  // default = 0
  optional int32 sessionreusecount = 17;

  // Description missing in models
  SessionReuseMethodTLS12 sessionreusemethod = 18;

  // Description missing in models
  SessionReuseMethodTLS12 sessionreusemethod12 = 19;

  // Description missing in models
  SessionReuseMethodTLS13 sessionreusemethod13 = 20;

  // The certificate configs per SNI of the TLS profile.
  repeated CertConfig snicertconfigs = 21;

  // The enable status of the SNI configuration (default: false).
  // required = true
  optional bool snienabled = 22;

  // Description missing in models
  repeated SupportedGroupTLS13 supportedgroups13 = 23;

  // Description missing in models
  // required = true
  optional bool tls12enabled = 24;

  // Description missing in models
  optional bool tls13enabled = 25;

  // When disabled, the connection is not TLS secured (default: true).
  // default = True
  optional bool usetlsprofile = 26;

  message Version {
    enum Enum {
      unspecified = 0;
      v10 = 1;
      v20 = 2;
      v30 = 3;
    }
  }
  // The version of the TLS profile (default: NONE). Must be one of: NONE or TLSv1.2 or
  // TLSv1.3.
  // required = true
  optional Version.Enum version = 27;
}

// The cipher of the TLS profile (default: AES256-GCM-SHA384).
message CipherTLS12 {
}

// The cipher of the TLSv1.3 profile (default: AES-256-GCM-SHA384).
message CipherTLS13 {
}

// Description missing in models
message Conflict {

  // Description missing in models
  // required = true
  optional string name = 1;

  // Description missing in models
  // required = true
  optional string pathtotarget = 2;

  // Description missing in models
  // required = true
  ConflictPathvars pathvars = 3;
}

// Description missing in models
message ConflictPathvars {

  // Description missing in models
  optional string additionalproperties = 1;
}

// The session reuse method. Must be one of: DISABLE, SESSION-TICKET or SESSION-ID (default:
// DISABLE).
message SessionReuseMethodTLS12 {
}

// The session reuse method. Must be DISABLE (default: DISABLE).
message SessionReuseMethodTLS13 {
}

// Description missing in models
message CertConfig {

  // The certificate file of the TLS profile.
  // default = method(GetDefaultCertificateFile)
  Params certificatefile = 1;

  // Description missing in models
  // default = method(GetDefaultDhFile)
  Params dhfile = 2;

  // Description missing in models
  repeated string get_sni_conflicts = 3;

  // Description missing in models
  // required = true
  ID id = 4;

  // Description missing in models
  // default = False
  optional bool isplaylist = 5;

  // The key file of the TLS profile.
  // default = method(GetDefaultKeyFile)
  Params keyfile = 6;

  // The key file password of the TLS profile.
  // default = appsec
  optional string keyfilepassword = 7;

  // Description missing in models
  repeated APILink links = 8;

  // Description missing in models
  optional string playlistcolumnname = 9;

  // Description missing in models
  optional string playlistfilename = 10;

  // Description missing in models
  repeated Conflict resolve_sni_conflicts = 11;

  // The SNI hostname associated with the certificate. (default: generic.keysight.io).
  // required = true
  optional string snihostname = 12;
}

// The TLSv1.3 supported groups (default: P-256).
message SupportedGroupTLS13 {
}

// Description missing in models
message Connection {

  // The client endpoint of the connection.
  // required = true
  optional string clientendpoint = 1;

  // The client port of the connection (default: 80).
  // required = true
  optional int32 clientport = 2;

  // Description missing in models
  optional string closingend = 3;

  // If true, the connection will be unencrypted regardless of other TLS settings.
  // default = False
  optional bool disableencryption = 4;

  // The hostname associated with the connection. (default: generic.keysight.io).
  // default = generic.keysight.io
  optional string hostname = 5;

  // The hostname associated with the connection. (default: generic.keysight.io).
  Params hostnameparam = 6;

  message Httpforwardproxymode {
    enum Enum {
      unspecified = 0;
      INHERIT_DUT = 1;
      PROXY_MODE = 2;
      TUNNEL_MODE = 3;
    }
  }
  // Deprecated. This is ignored and the proxy mode will be deduced from the connection
  // type.
  // default = Httpforwardproxymode.Enum.inherit_dut
  optional Httpforwardproxymode.Enum httpforwardproxymode = 7;

  // Description missing in models
  // required = true
  ID id = 19;

  // Description missing in models
  // default = False
  optional bool isdeprecated = 8;

  // Description missing in models
  repeated APILink links = 20;

  // The maximum number of transactions for this connection.
  // required = true
  optional int32 maxtransactions = 9;

  // The name of the Connection.
  optional string name = 10;

  // Description missing in models
  PortSettings portsettings = 11;

  // If true, the connection can't be modified by the user.
  // default = False
  optional bool readonly = 12;

  // If true, the connection hostname will be readonly.
  // default = False
  optional bool readonlyhostname = 13;

  // If true, MaxTransactions will be readonly
  optional bool readonlymaxtrans = 14;

  // If true or missing, the type of the connection cannot be changed
  optional bool readonlytype = 15;

  // The server endpoint of the connection.
  optional string serverendpoint = 16;

  // The server port of the connection (default: 80).
  // required = true
  optional int32 serverport = 17;

  message Type {
    enum Enum {
      unspecified = 0;
      http = 1;
      https = 2;
      ssl = 6;
      tcp = 3;
      tls = 4;
      udp = 5;
    }
  }
  // Description missing in models
  // default = Type.Enum.http
  optional Type.Enum type = 18;
}

// Description missing in models
message PortSettings {

  // Description missing in models
  // required = true
  optional bool automatic = 1;

  // Description missing in models
  // required = true
  optional bool automaticdestinationport = 2;

  // Description missing in models
  // required = true
  optional bool automaticforwardproxyport = 3;

  // Description missing in models
  // required = true
  optional int32 destinationport = 4;

  // Description missing in models
  EffectivePorts effectiveports = 5;

  // Description missing in models
  // required = true
  optional int32 forwardproxyport = 6;

  // Description missing in models
  repeated APILink links = 9;

  // If true, the port can't be selected by the user
  optional bool readonly = 7;

  // Description missing in models
  // required = true
  optional int32 serverlistenport = 8;
}

// Description missing in models
message EffectivePorts {

  // Description missing in models
  // required = true
  optional string effectivedestinationport = 1;

  // Description missing in models
  optional string effectiveforwardproxyport = 2;

  // Description missing in models
  // required = true
  optional string effectiveserverport = 3;
}

// Description missing in models
message Endpoint {

  // Description missing in models
  // required = true
  ID id = 4;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  // required = true
  optional string name = 1;

  // The per-endpoint network mapping. Depending on Endpoint type, only ClientNetworkTags
  // or ServerNetworkTags will be used.
  NetworkMapping networkmapping = 2;

  message Type {
    enum Enum {
      unspecified = 0;
      Client = 1;
      Server = 2;
    }
  }
  // Description missing in models
  // required = true
  optional Type.Enum type = 3;
}

// Description missing in models
message NetworkMapping {

  // A list of tags of Network Segments which serve as clients. (default: Client)
  repeated string clientnetworktags = 1;

  // A list of DUTs that are excluded from client-server network connections.
  repeated string excludeddutlist = 2;

  // A list of tags of Network Segments which serve as servers. (default: Server)
  repeated string servernetworktags = 3;
}

// Description missing in models
message IpPreference {
}

// Description missing in models
message UpdateNetworkMapping {

  // Description missing in models
  repeated string clientnetworktags = 1;

  // Description missing in models
  repeated string excludeddutlist = 2;

  // Description missing in models
  optional bool selecttags = 3;

  // Description missing in models
  repeated string servernetworktags = 4;
}

// Description missing in models
message Name {
}

// Description missing in models
message AttackTrack {

  // Description missing in models
  repeated AttackAction actions = 1;

  // Description missing in models
  repeated string add_actions = 2;

  // Description missing in models
  // required = true
  ID id = 3;

  // Description missing in models
  repeated APILink links = 4;
}

// Description missing in models
message AttackAction {
}

// Description missing in models
message ActionBase {

  // The destination host of the action.
  Host dsthost = 1;

  // Description missing in models
  repeated Exchange exchanges = 2;

  // Description missing in models
  ID id = 13;

  // The index of the action.
  optional int32 index = 3;

  // Indicates if this is a required action, can only be add once and also must be the
  // first
  optional bool isbanner = 4;

  // A value that indicates if the action is deprecated.
  optional bool isdeprecated = 5;

  // Description missing in models
  optional int32 ishostname = 6;

  // A value that indicates if the action is a strike.
  optional bool isstrike = 7;

  // Description missing in models
  repeated APILink links = 14;

  // The name of the action.
  optional string name = 8;

  // Description missing in models
  repeated Params params = 9;

  // The port of the destination host.
  optional int32 port = 10;

  // Description missing in models
  optional string protocolid = 11;

  // If true, for applications with the same protocol id, application/attack must have
  // been uniquely identified in previous commands.
  optional bool requiresuniqueness = 12;
}

// Description missing in models
message Host {
}

// Description missing in models
message Exchange {

  // The client's endpoint for exchange.
  optional string clientendpoint = 1;

  // Description missing in models
  // required = true
  ID id = 4;

  // The name of the exchange.
  optional string name = 2;

  // The server's endpoint for exchange.
  optional string serverendpoint = 3;
}

// Description missing in models
message AttackObjectivesAndTimeline {

  // Description missing in models
  repeated APILink links = 2;

  // Description missing in models
  // default = items(1)
  repeated AttackTimelineSegment timelinesegments = 1;
}

// Description missing in models
message AttackTimelineSegment {

  // The attack rate of the attack (default: 1).
  // required = true
  optional int64 attackrate = 1;

  // The time the test will wait all connections to be graceful stopped (default: 15 seconds).
  // default = 120
  optional int64 connectiongracefulstoptimeout = 2;

  // The duration of the timeline segment (default: 600).
  optional int64 duration = 5;

  // Description missing in models
  ID id = 8;

  // The number of iterations to run (default: 1).
  // default = 1
  optional int64 iterationcount = 3;

  // The maximum number of concurrent attacks (default: 1).
  // required = true
  optional int64 maxconcurrentattack = 4;

  // The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
  SegmentType segmenttype = 6;

  // Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need
  // to warm up, when clients should wait (default: 0 seconds).
  // default = 0
  optional int64 warmupperiod = 7;
}

// The type of timeline segment. Empty, NormalSegment, RampDownSegment and IdleSegment
// are deprecated.
message SegmentType {
}

// Description missing in models
message TrafficSettings {

  // Description missing in models
  TransportProfile defaulttransportprofile = 1;

  // Description missing in models
  repeated APILink links = 2;
}

// Description missing in models
message TransportProfile {

  // The client HTTP profile used in the Scenario.
  HTTPProfile clienthttpprofile = 2;

  // Description missing in models
  TcpProfile clienttcpprofile = 4;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfile)
  TLSProfile clienttlsprofile = 3;

  // Description missing in models
  // default = 0
  optional int32 iptos = 5;

  // Description missing in models
  // required = true
  optional string l4profilename = 1;

  // Description missing in models
  repeated APILink links = 12;

  // Description missing in models
  // default = method(GetDefaultRTPProfile)
  RTPProfile rtpprofile = 6;

  // The server HTTP profile used in the Scenario.
  HTTPProfile serverhttpprofile = 7;

  // Description missing in models
  TcpProfile servertcpprofile = 9;

  // Description missing in models
  // default = method(GetDefaultServerTlsProfile)
  TLSProfile servertlsprofile = 8;

  // Description missing in models
  UdpProfile udpprofile = 10;

  // Description missing in models
  // default = 0
  optional int32 vlanprio = 11;
}

// Description missing in models
message TcpProfile {

  // Description missing in models
  // default = False
  optional bool closewithreset = 1;

  // Description missing in models
  // default = True
  optional bool deferaccept = 2;

  // Description missing in models
  // default = False
  optional bool ecnenabled = 3;

  // Description missing in models
  // required = true
  optional int32 maxrto = 4;

  // Description missing in models
  // required = true
  optional int32 maxsrcport = 5;

  // Description missing in models
  // required = true
  optional int32 minrto = 6;

  // Description missing in models
  // required = true
  optional int32 minsrcport = 7;

  // Description missing in models
  // default = True
  optional bool pingpong = 8;

  // Description missing in models
  // default = False
  optional bool pmtudiscdisabled = 9;

  // Description missing in models
  // default = True
  optional bool recycletwenabled = 10;

  // Description missing in models
  // default = False
  optional bool reordering = 11;

  // Description missing in models
  // default = True
  optional bool reusetwenabled = 12;

  // Description missing in models
  // required = true
  optional int32 rxbuffer = 13;

  // Description missing in models
  // default = False
  optional bool sackenabled = 14;

  // Description missing in models
  // default = appsim_group
  optional string sockgroup = 15;

  // Description missing in models
  // default = True
  optional bool timestamphdrenabled = 16;

  // Description missing in models
  // required = true
  optional int32 txbuffer = 17;

  // Description missing in models
  // default = 1460
  optional int32 usermss = 18;

  // Description missing in models
  // default = False
  optional bool wscaleenabled = 19;
}

// Description missing in models
message RTPProfile {

  // Description missing in models
  // required = true
  RTPEncryptionMode encryptionmode = 1;

  // Description missing in models
  // required = true
  MosMode mosmode = 2;

  // The ID of the RTP profile (default: VoiceProfile).
  // required = true
  optional string profileid = 3;
}

// Description missing in models
message RTPEncryptionMode {
}

// Description missing in models
message MosMode {
}

// Description missing in models
message UdpProfile {

  // Description missing in models
  // default = 65535
  optional int32 maxsrcport = 1;

  // Description missing in models
  // default = 1024
  optional int32 minsrcport = 2;

  // Description missing in models
  // default = 32768
  optional int32 recvbuffsizeini = 3;

  // Description missing in models
  // default = 32768
  optional int32 recvbuffsizeres = 4;

  // Description missing in models
  // default = 32768
  optional int32 rxbuffer = 5;

  // Description missing in models
  // default = appsim_group
  optional string sockgroup = 6;

  // Description missing in models
  // default = 32768
  optional int32 txbuffer = 7;
}

// Description missing in models
message ConfigValidation {

  // Description missing in models
  // required = true
  optional bool isvalidated = 1;

  // Description missing in models
  repeated APILink links = 3;

  // Description missing in models
  repeated ValidationMessage validationmessages = 2;
}

// Description missing in models
message ValidationMessage {

  // Description missing in models
  // required = true
  optional string message = 1;

  message Severity {
    enum Enum {
      unspecified = 0;
      ERROR = 2;
      WARNING = 1;
    }
  }
  // Description missing in models
  // required = true
  optional Severity.Enum severity = 2;
}

// Description missing in models
message CustomDashboards {

  // Indicates whether the custom dashboards are enabled or not.
  // required = true
  optional bool active = 1;

  // Description missing in models
  repeated APILink links = 3;
}

// The networks assigned to the current test configuration
message NetworkProfile {

  // Description missing in models
  repeated DUTNetwork dutnetworksegment = 1;

  // Description missing in models
  // required = true
  ID id = 3;

  // Description missing in models
  repeated IPNetwork ipnetworksegment = 2;

  // Description missing in models
  repeated APILink links = 4;
}

// The configuration for DUT
message DUTNetwork {

  // A flag indicating if the server DUT is an active device. If it is, the simulated
  // clients or client DUT(if active) will send traffic to the DUT 'host'; and the simulated
  // servers will use the healtcheck configurations. (default: false)
  // default = False
  optional bool active = 21;

  // Description missing in models
  // default = False
  optional bool clientdutactive = 1;

  // Description missing in models
  Host clientduthost = 2;

  // The listen port for client-side DUT (default: 80).
  // default = 80
  optional int32 clientdutport = 3;

  message Configsettings {
    enum Enum {
      unspecified = 0;
      ADVANCED_MODE = 2;
      SIMPLE_MODE = 1;
    }
  }
  // Description missing in models
  // default = Configsettings.Enum.simple_mode
  optional Configsettings.Enum configsettings = 4;

  // Description missing in models
  // default = method(GetDefaultPEPDut)
  PepDUT forwardproxypepdut = 5;

  // A flag indicating if the PEP device is an active device. If active, the simulated
  // clients will send traffic to the PEP device host. (default: false)
  // default = False
  optional bool forwardproxypepdutactive = 6;

  // The hostname where the traffic goes if server DUT is active.
  Host host = 22;

  // A suffix to be added to the Host header of all Apps/Attacks running through the forward
  // proxy DUT (default: empty string).
  Host hostnamesuffix = 9;

  message Httpforwardproxymode {
    enum Enum {
      unspecified = 0;
      PROXY_MODE = 1;
      TUNNEL_MODE = 2;
    }
  }
  // Deprecated. This is ignored and the proxy mode will be deduced from the connection
  // type.
  // default = Httpforwardproxymode.Enum.proxy_mode
  optional Httpforwardproxymode.Enum httpforwardproxymode = 10;

  // The HTTP HealthCheck configuration for DUT
  HealthCheckConfig httphealthcheck = 7;

  // The HTTPS HealthCheck configuration for DUT
  HealthCheckConfig httpshealthcheck = 8;

  // Description missing in models
  ID id = 25;

  // Description missing in models
  repeated APILink links = 23;

  // Description missing in models
  Name name = 24;

  // Description missing in models
  TagList networktags = 26;

  // Description missing in models
  // default = method(GetDefaultNonProxiedHosts)
  Params nonproxiedhosts = 11;

  // Description missing in models
  // default = method(GetDefaultPEPDut)
  PepDUT pepdut = 12;

  // A flag indicating if the PEP device is an active device. If active, the simulated
  // clients will send traffic to the PEP device host. (default: false)
  // default = False
  optional bool pepdutactive = 13;

  // Description missing in models
  // default = method(GetDefaultPEPDut)
  PepDUT reverseproxypepdut = 14;

  // A flag indicating if the PEP device is an active device. If active, the simulated
  // clients will send traffic to the PEP device host. (default: false)
  // default = False
  optional bool reverseproxypepdutactive = 15;

  // A flag indicating if the server DUT is an active device. If it is, the simulated
  // clients or client DUT(if active) will send traffic to the server DUT 'host'; and
  // the simulated servers will use the healtcheck configurations. (default: false)
  // default = False
  optional bool serverdutactive = 16;

  // The hostname where the traffic goes if server DUT is active.
  Host serverduthost = 17;

  // The listen port for server-side DUT
  optional int32 serverdutport = 18;

  // The TCP HealthCheck configuration for DUT
  HealthCheckConfig tcphealthcheck = 19;

  // A flag indicating if tunneled hostname should use real domain names.
  // default = False
  optional bool userealhost = 20;
}

// The Policy Enforcement Point (PEP) device under test (also known as Zero Trust device)
message PepDUT {

  // Description missing in models
  Params authmethod = 1;

  // Description missing in models
  repeated Params authprofileparams = 2;

  // Description missing in models
  optional string authprofiletype = 3;

  // A suffix to be added to the Host header of all Apps/Attacks running through the DUT
  // (default: empty string).
  Host hostnamesuffix = 4;

  // Description missing in models
  Params idptype = 5;

  // A flag indicating if PEP for the selected authentication profile is an explicit proxy
  optional bool isexplicitproxy = 6;

  // Description missing in models
  repeated APILink links = 10;

  // The hostname where the traffic goes if PEP device is active.
  Host pephost = 7;

  // The listen port for PEP DUT (default: 443).
  // default = 443
  optional int32 pepport = 8;

  // Description missing in models
  // default = method(GetDefaultSimulatedIDP)
  SimulatedIdP simulatedidp = 9;
}

// Description missing in models
message SimulatedIdP {

  // Description missing in models
  // required = true
  optional bool assertionsignature = 1;

  // Description missing in models
  // required = true
  optional string audienceuri = 2;

  // Description missing in models
  CertConfig certconfig = 3;

  // Description missing in models
  repeated APILink links = 9;

  // Description missing in models
  // required = true
  NameIdFormat nameidformat = 4;

  // Description missing in models
  // required = true
  optional bool responsesignature = 5;

  // Description missing in models
  IdPSignatureAlgo signaturealgorithm = 6;

  // Description missing in models
  // required = true
  optional string singlesignonurl = 7;

  // Description missing in models
  repeated bytes xmlmetadata = 8;
}

// Description missing in models
message NameIdFormat {
}

// Description missing in models
message IdPSignatureAlgo {
}

// The HealthCheck configuration for DUT
message HealthCheckConfig {

  // A flag indicating if the servers should listen for HealthCheck requests (default:
  // true).
  // default = True
  optional bool enabled = 1;

  // Description missing in models
  repeated APILink links = 4;

  // A list of additional parameters for the HealthCheck.
  repeated Params params = 2;

  // The port that the DUT will send HealthCheck requests to the simulated servers. (default:
  // 80)
  // default = 80
  optional int32 port = 3;
}

// A list of tags.
message TagList {
}

// The IP network configuration
message IPNetwork {

  // A flag indicating if the network segment is active.(default: true)
  // default = True
  optional bool active = 10;

  // Description missing in models
  AgentAssignments agentassignments = 11;

  // Description missing in models
  DNSResolver dnsresolver = 1;

  // The DNS Server configuration for Network Segment
  // default = method(GetDefaultDNSServer)
  DNSServer dnsserver = 2;

  // The connected DUT network segments.
  repeated string dutconnections = 3;

  // Description missing in models
  EmulatedRouter emulatedrouter = 4;

  // Description missing in models
  // default = method(GetDefaultEthRange)
  EthRange ethrange = 5;

  // Description missing in models
  ID id = 12;

  // Description missing in models
  // default = items(1)
  repeated IPRange ipranges = 6;

  // Description missing in models
  // default = items(0)
  repeated IPSecStack ipsecstacks = 7;

  // Description missing in models
  repeated APILink links = 13;

  // Description missing in models
  // default = items(0)
  repeated MacDtlsStack macdtlsstacks = 8;

  // The minimum number of agents that should be assigned to this network segment in a
  // valid test (default: 1).
  // default = 1
  optional int32 minagents = 14;

  // Description missing in models
  Name name = 15;

  // Description missing in models
  TagList networktags = 16;

  // Description missing in models
  // default = items(0)
  repeated TunnelStack tunnelstacks = 9;
}

// The agents assigned to the current test configuration
message AgentAssignments {

  // The agents statically assigned to the current test configuration.
  repeated AgentAssignmentDetails byid = 1;

  // The ports assigned to the current test configuration.
  repeated AgentAssignmentByPort byport = 2;

  // The tags according to which the agents are dynamically assigned.
  repeated string bytag = 3;

  // Description missing in models
  repeated APILink links = 4;
}

// Details of an agent assignment by ID
message AgentAssignmentDetails {

  // The id of the agent that is assigned.
  // required = true
  optional string agentid = 1;

  // The capture settings of the agent that is assigned.
  CaptureSettings capturesettings = 2;

  // Description missing in models
  // required = true
  ID id = 3;

  // The names of the assigned test interfaces for the agent.
  repeated string interfaces = 4;

  // Description missing in models
  repeated APILink links = 5;
}

// The capture settings for an agent
message CaptureSettings {

  // The enable status of the capture configuration (default: false).
  // required = true
  optional bool captureenabled = 1;

  // Capture first or latest packets (true to enable latest packets capture).
  // default = True
  optional bool capturelatestpackets = 2;

  // Log level options: NONE, ERROR, WARN, INFO, DEBUG, TRACE (default: INFO)
  // required = true
  LogLevel loglevel = 3;

  // The maximum capture size in bytes (default: 104857600).
  // default = 104857600
  optional int64 maxcapturesize = 4;
}

// Description missing in models
message LogLevel {
}

// Details of an agent assignment by port
message AgentAssignmentByPort {

  // The capture settings of the port that is assigned.
  CaptureSettings capturesettings = 1;

  // Description missing in models
  // required = true
  ID id = 2;

  // Description missing in models
  repeated APILink links = 3;

  // The id of the port that is assigned.
  optional string portid = 4;
}

// Description missing in models
message DNSResolver {

  // The cached timeout for the DNS Resolver
  optional int32 cachetimeout = 1;

  // The enable perconnection value.
  optional bool enableperconnect = 2;

  // Description missing in models
  repeated APILink links = 3;

  // A list of name servers.
  repeated NameServer nameservers = 4;
}

// Description missing in models
message NameServer {

  // Description missing in models
  optional string name = 1;
}

// Description missing in models
message DNSServer {

  // A flag indicating if the DNS server should respond automatically with the test interface
  // IP.
  // default = True
  optional bool automatic = 1;

  // A flag indicating if the servers should listen for DNS requests (default: false).
  // required = true
  optional bool enabled = 2;

  // The IP that will be returned for all queries
  optional string iptoresolveto = 3;

  // The port that the DNS server should listen on. (default: 53)
  // required = true
  optional int32 port = 4;
}

// Description missing in models
message EmulatedRouter {

  // Description missing in models
  // default = items(2)
  repeated EmulatedRouterRange emulatedrouterranges = 1;

  // Description missing in models
  // required = true
  optional bool enabled = 2;

  // Description missing in models
  repeated APILink links = 3;
}

// Description missing in models
message EmulatedRouterRange {

  // The automatic IP types, either 'ONLY_IPV4', 'ONLY_IPV6' or 'BOTH_IPV4_IPV6'.
  // default = ONLY_IPV4
  AutomaticIpType automaticiptype = 3;

  // The number of IPs generated (default: 1).
  // default = 1
  optional int32 count = 4;

  // A flag indicating if the gateway settings for the IPRange should be determined automatically
  // (default: true).
  optional bool gwauto = 5;

  // The gateway start IP for the IPRange (default: 10.0.0.1).
  // default = 10.0.0.1
  optional string gwstart = 6;

  // The number of Host IPs generated (default: 1).
  // default = 1
  optional int32 hostcount = 7;

  // Description missing in models
  ID id = 17;

  // The inner VLAN range assigned to the current IP range configuration
  // default = method(GetDefaultVlanRange)
  VLANRange innervlanrange = 8;

  // A flag indicating if IP settings for the IPRange should be determined automatically
  // (default: true).
  optional bool ipauto = 9;

  // The IP incrementation rule (default: 0.0.0.1).
  // default = 0.0.0.1
  optional string ipincr = 10;

  // Description missing in models
  Name iprangename = 11;

  // The start IP for the IPRange (default: 10.0.0.10).
  // default = 10.0.0.10
  optional string ipstart = 12;

  // The type of the IP. 'IPV4' and 'IPV6' are both supported currently.
  IpVer ipver = 13;

  // Description missing in models
  // default = False
  optional bool isemulatedrouter = 14;

  // Description missing in models
  repeated APILink links = 18;

  // The maximum number of IPs that should be assigned to each traffic agent for this
  // IP range segment in a valid test (default: 1).
  // default = 1
  optional int32 maxcountperagent = 19;

  // The maximum segment size of the TCP header.
  // required = true
  optional int32 mss = 1;

  // A flag indicating if Mss settings for the IPRange should be determined automatically
  // (default: false).
  // required = true
  optional bool mssauto = 2;

  // The network mask of the IP Range (default: 16).
  // default = 16
  optional int32 netmask = 15;

  // A flag indicating if the network mask of the IPRange should be determined automatically
  // (default: true).
  // required = true
  optional bool netmaskauto = 16;

  // Description missing in models
  TagList networktags = 20;
}

// Description missing in models
message AutomaticIpType {
}

// The VLAN range assigned to an IP range configuration
message VLANRange {

  // The number of VLANs generated (default: 1).
  // default = 1
  optional int32 count = 1;

  // The number of VLANs that should be assigned to each traffic agent for this VLAN range
  // segment in a valid test (default: 1).
  // default = 1
  optional int32 countperagent = 2;

  // Description missing in models
  repeated APILink links = 11;

  // The maximum number of VLANs that should be assigned to each traffic agent for this
  // VLAN range segment in a valid test (default: 1).
  // default = 1
  optional int32 maxcountperagent = 3;

  // The priority code point value (default: 0).
  // default = 0
  optional int32 priority = 4;

  // Description missing in models
  repeated StaticARPEntry staticarptable = 5;

  // The tag protocol identifier (default: 33024).
  // default = 33024
  optional int32 tagprotocolid = 6;

  // A flag indicating if VLAN settings for the VLANRange should be determined automatically
  // (default: false).
  // required = true
  optional bool vlanauto = 7;

  // The enable status of the VLAN configuration, if not determined automatically (default:
  // false).
  // default = False
  optional bool vlanenabled = 8;

  // The VLAN identifier (default: 1).
  // default = 1
  optional int32 vlanid = 9;

  // The VLAN incrementation rule (default: 1).
  // default = 1
  optional int32 vlanincr = 10;
}

// Description missing in models
message StaticARPEntry {

  // Description missing in models
  // default = 1
  optional int32 count = 1;

  // Description missing in models
  // required = true
  ID id = 7;

  // Description missing in models
  optional string remoteip = 2;

  // Description missing in models
  // default = 0.0.0.1
  optional string remoteipincr = 3;

  // Description missing in models
  optional string remotemac = 4;

  // Description missing in models
  // default = 00:00:00:00:00:01
  optional string remotemacincr = 5;

  // Description missing in models
  // required = true
  Name staticarpentryname = 6;
}

// Description missing in models
message IpVer {
}

// The Ethernet Ranges assigned to the current test configuration
message EthRange {

  // Description missing in models
  // default = 10
  optional int32 count = 1;

  // Description missing in models
  repeated APILink links = 7;

  // A flag indicating if the MAC address for the EthRange should be determined automatically
  // (default: true).
  // required = true
  optional bool macauto = 2;

  // The MAC address increment rule for the EthRange (default: 00:00:00:00:00:01).
  // default = 00:00:00:00:00:01
  optional string macincr = 3;

  // The MAC start address for the EthRange (default: 00:11:01:00:00:01).
  // default = 00:11:01:00:00:01
  optional string macstart = 4;

  // The maximum number of MACs that should be assigned to each traffic agent for this
  // Ethernet range segment in a valid test (default: 0, split equally between agents).
  optional int32 maxcountperagent = 8;

  // A flag indicating if there is only one MAC address for the EthRange per IPRange (default:
  // true).
  // default = True
  optional bool onemacperip = 5;

  // Description missing in models
  // default = items(0)
  repeated StaticARPEntry staticarptable = 6;
}

// The IP Ranges assigned to the current test configuration
message IPRange {

  // The automatic IP types, either 'ONLY_IPV4', 'ONLY_IPV6' or 'BOTH_IPV4_IPV6'.
  // default = ONLY_IPV4
  AutomaticIpType automaticiptype = 1;

  // The number of IPs generated (default: 1).
  // default = 1
  optional int32 count = 2;

  // A flag indicating if the gateway settings for the IPRange should be determined automatically
  // (default: true).
  // required = true
  optional bool gwauto = 3;

  // The gateway start IP for the IPRange (default: 10.0.0.1).
  // default = 10.0.0.1
  optional string gwstart = 4;

  // The number of Host IPs generated (default: 1).
  // default = 1
  optional int32 hostcount = 5;

  // Description missing in models
  ID id = 17;

  // The inner VLAN range assigned to the current IP range configuration
  // default = method(GetDefaultVlanRange)
  VLANRange innervlanrange = 6;

  // A flag indicating if IP settings for the IPRange should be determined automatically
  // (default: true).
  // required = true
  optional bool ipauto = 7;

  // The IP incrementation rule (default: 0.0.0.1).
  // default = 0.0.0.1
  optional string ipincr = 8;

  // Description missing in models
  // required = true
  Name iprangename = 9;

  // The start IP for the IPRange (default: 10.0.0.10).
  // default = 10.0.0.10
  optional string ipstart = 10;

  // The type of the IP. 'IPV4' and 'IPV6' are both supported currently.
  // required = true
  IpVer ipver = 11;

  // Description missing in models
  // default = False
  optional bool isemulatedrouter = 12;

  // Description missing in models
  repeated APILink links = 18;

  // The maximum number of IPs that should be assigned to each traffic agent for this
  // IP range segment in a valid test (default: 1).
  // default = 1
  optional int32 maxcountperagent = 19;

  // The maximum segment size of the TCP header.
  // default = 1460
  optional int32 mss = 13;

  // A flag indicating if Mss settings for the IPRange should be determined automatically
  // (default: false).
  // required = true
  optional bool mssauto = 14;

  // The network mask of the IP Range (default: 16).
  // default = 16
  optional int32 netmask = 15;

  // A flag indicating if the network mask of the IPRange should be determined automatically
  // (default: true).
  // required = true
  optional bool netmaskauto = 16;

  // Description missing in models
  TagList networktags = 20;
}

// Description missing in models
message IPSecStack {

  // The authentication CA certificate file of the IPsec tunnel(s).
  // default = method(GetDefaultCACertificateFile)
  Params cacertificatefile = 1;

  // Deeprecated. Use LocalSubConfig instead.
  EmulatedSubnetConfig emulatedsubconfig = 2;

  // Description missing in models
  // required = true
  optional bool enablerekey = 3;

  // Description missing in models
  // required = true
  ID id = 19;

  // Description missing in models
  IPSecRange ipsecrange = 4;

  // Description missing in models
  // required = true
  Name ipsecstackname = 5;

  // Description missing in models
  repeated APILink links = 20;

  // Description missing in models
  LocalSubnetConfig localsubconfig = 6;

  // Description missing in models
  // required = true
  optional bool logkeys = 7;

  // Description missing in models
  // required = true
  optional int32 maxinitiationrate = 8;

  // Description missing in models
  // required = true
  optional int32 maxpending = 9;

  // Description missing in models
  IPRange outeriprange = 10;

  // Description missing in models
  // required = true
  optional int32 rekeymargin = 11;

  // Description missing in models
  // required = true
  optional int32 rekeyretrycount = 12;

  // Description missing in models
  // required = true
  optional int32 retransmissiontimeout = 13;

  // Description missing in models
  // required = true
  optional int32 retrycount = 14;

  // Description missing in models
  // default = 10
  optional int32 retryinterval = 15;

  // Description missing in models
  // default = 0
  optional int32 retryintervalincrement = 16;

  // Description missing in models
  // required = true
  optional int32 setuptimeout = 17;

  message Stackrole {
    enum Enum {
      unspecified = 0;
      INITIATOR = 1;
      RESPONDER = 2;
    }
  }
  // Description missing in models
  // required = true
  optional Stackrole.Enum stackrole = 18;
}

// The Inner IP Range assigned to the current test configuration
message EmulatedSubnetConfig {

  // Description missing in models
  // required = true
  optional int32 hostcountpertunnel = 1;

  // The IP incrementation rule (default: 0.0.0.1).
  // required = true
  optional string hostsincrement = 2;

  // The network mask of the IP Range (default: 16).
  // required = true
  optional int32 hostsprefix = 3;

  // The IP incrementation rule (default: 0.0.1.0).
  // required = true
  optional string increment = 4;

  // Description missing in models
  // required = true
  TagList networktags = 8;

  // The network mask of the IP Range (default: 16).
  // required = true
  optional int32 prefix = 5;

  // The start IP for the IPRange (default: 10.0.0.10).
  // required = true
  optional string start = 6;

  // Description missing in models
  // required = true
  optional string totalhostcount = 7;
}

// Description missing in models
message IPSecRange {

  // Description missing in models
  AuthenticationSettings authsettings = 1;

  // Description missing in models
  // required = true
  ID id = 14;

  // Description missing in models
  P1Config ikephase1config = 2;

  // Description missing in models
  P2Config ikephase2config = 3;

  // Description missing in models
  // required = true
  Name ipsecrangename = 4;

  // Description missing in models
  repeated APILink links = 15;

  // Description missing in models
  // default = False
  optional bool multip2overp1 = 5;

  // Deeprecated. Use RemoteSubConfig instead.
  ProtectedSubnetConfig protectedsubconfig = 6;

  // Description missing in models
  // required = true
  optional string publicpeer = 7;

  // Description missing in models
  // required = true
  optional string publicpeerincrement = 8;

  // Description missing in models
  RemoteAccess remoteaccess = 9;

  // Description missing in models
  RemoteSubnetConfig remotesubconfig = 10;

  message Testscenario {
    enum Enum {
      unspecified = 0;
      v10 = 1;
      v20 = 2;
    }
  }
  // Description missing in models
  // required = true
  optional Testscenario.Enum testscenario = 11;

  // Description missing in models
  Timers timers = 12;

  // Description missing in models
  // required = true
  optional int32 tunnelcountperouterip = 13;
}

// Description missing in models
message AuthenticationSettings {

  message Authmethod {
    enum Enum {
      unspecified = 0;
      CERTIFICATES = 2;
      v10 = 1;
    }
  }
  // Description missing in models
  // default = Authmethod.Enum.pre-shared-key
  optional Authmethod.Enum authmethod = 1;

  // The authentication certificate file of the IPsec tunnel(s).
  // default = method(GetDefaultCertificateFile)
  Params certificatefile = 2;

  // The authentication key file of the IPsec tunnel(s).
  // default = method(GetDefaultKeyFile)
  Params keyfile = 3;

  // The key file password of the IPsec authentication.
  optional string keyfilepassword = 4;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  // default = ipsec
  optional string sharedkey = 5;
}

// Description missing in models
message P1Config {

  // Description missing in models
  // required = true
  DhP1Group dhgroup = 1;

  // Description missing in models
  // required = true
  EncP1Algorithm encalgorithm = 2;

  // Description missing in models
  // required = true
  HashP1Algorithm hashalgorithm = 3;

  // Description missing in models
  // required = true
  optional bool initialcontact = 4;

  // Description missing in models
  // required = true
  optional int32 lifetime = 5;

  // Description missing in models
  // required = true
  PrfP1Algorithm prfalgorithm = 6;
}

// Description missing in models
message DhP1Group {
}

// Description missing in models
message EncP1Algorithm {
}

// Description missing in models
message HashP1Algorithm {
}

// Description missing in models
message PrfP1Algorithm {
}

// Description missing in models
message P2Config {

  // Description missing in models
  // required = true
  EncP2Algorithm encalgorithm = 1;

  // Description missing in models
  // required = true
  HashP2Algorithm hashalgorithm = 2;

  // Description missing in models
  // required = true
  optional int32 lifetime = 3;

  // Description missing in models
  // required = true
  optional bool natenabled = 4;

  // Description missing in models
  // required = true
  optional bool pfsenabled = 5;

  // Description missing in models
  // required = true
  PfsP2Group pfsgroup = 6;
}

// Description missing in models
message EncP2Algorithm {
}

// Description missing in models
message HashP2Algorithm {
}

// Description missing in models
message PfsP2Group {
}

// Description missing in models
message ProtectedSubnetConfig {

  // Description missing in models
  // required = true
  optional bool automatic = 1;

  // The increment to be used for enumerating all the emulated subnets of the phase 2
  // tunnels that belong to each phase 1 (default: 0.0.0.1).
  // required = true
  optional string hostsincrement = 2;

  // The Prefix specifies the length (in bits) of the subnet mask to be applied to all
  // the addresses created in the range
  // required = true
  optional int32 hostsprefix = 3;

  // The increment to be used for enumerating all the emulated subnets in the range (default:
  // 0.0.0.0).
  // required = true
  optional string increment = 4;

  // The length (in bits) of the subnet mask to be applied to all the addresses created
  // in the range.
  // required = true
  optional int32 prefix = 5;

  // Description missing in models
  // required = true
  optional bool singleprotectedsubnet = 6;

  // The base address for enumerating all the emulated subnets in the range
  // required = true
  optional string start = 7;
}

// Description missing in models
message RemoteAccess {

  // The increment value for the ModeCfg address pool (default: 0.0.0.1).
  // required = true
  optional string modecfgincrement = 1;

  // The base address to be used for the ModeCfg address pool
  optional string modecfgstart = 2;

  // The IP address suffix for the ModeCfg address pool(default: 0.0.0.1).
  // required = true
  optional int32 modecfgsuffix = 3;
}

// Description missing in models
message RemoteSubnetConfig {

  // Description missing in models
  // required = true
  optional bool automatic = 1;

  // The increment to be used for enumerating all the local subnets of the phase 2 tunnels
  // that belong to each phase 1 (default: 0.0.0.1).
  // required = true
  optional string hostsincrement = 2;

  // The Prefix specifies the length (in bits) of the subnet mask to be applied to all
  // the addresses created in the range
  // required = true
  optional int32 hostsprefix = 3;

  // The increment to be used for enumerating all the local subnets in the range (default:
  // 0.0.0.0).
  // required = true
  optional string increment = 4;

  // The length (in bits) of the subnet mask to be applied to all the addresses created
  // in the range.
  // required = true
  optional int32 prefix = 5;

  // Description missing in models
  // required = true
  optional bool singleremotesubnet = 6;

  // The base address for enumerating all the local subnets in the range
  // required = true
  optional string start = 7;
}

// Description missing in models
message Timers {

  // Description missing in models
  // required = true
  optional bool dpdenabled = 1;

  // Description missing in models
  // required = true
  optional int32 dpdidleperiod = 2;

  // Description missing in models
  // required = true
  optional int32 dpdtimeout = 3;
}

// The Inner IP Range assigned to the current test configuration
message LocalSubnetConfig {

  // Description missing in models
  // required = true
  optional int32 hostcountpertunnel = 1;

  // The IP incrementation rule (default: 0.0.0.1).
  // required = true
  optional string hostsincrement = 2;

  // The network mask of the IP Range (default: 16).
  // required = true
  optional int32 hostsprefix = 3;

  // The IP incrementation rule (default: 0.0.1.0).
  // required = true
  optional string increment = 4;

  // Description missing in models
  // required = true
  TagList networktags = 8;

  // The network mask of the IP Range (default: 16).
  // required = true
  optional int32 prefix = 5;

  // The start IP for the IPRange (default: 10.0.0.10).
  // required = true
  optional string start = 6;

  // Description missing in models
  // required = true
  optional string totalhostcount = 7;
}

// Description missing in models
message MacDtlsStack {

  // Description missing in models
  // default = True
  optional bool dtlsenabled = 1;

  // Description missing in models
  // required = true
  Name dtlsrangename = 2;

  // Description missing in models
  // required = true
  optional int32 epoch = 3;

  // Description missing in models
  // default = 1
  optional int32 epochincr = 4;

  // Description missing in models
  // required = true
  ID id = 19;

  // The in IV start for the DTLSRange (default: 0x22222222).
  // required = true
  optional string iniv = 6;

  // The in IV increment for the DTLSRange (default: 0x00000001).
  // required = true
  optional string inivincr = 7;

  // The in key start for the DTLSRange (default: 0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB).
  // required = true
  optional string inkey = 8;

  // The in key increment for the DTLSRange (default: 0x0000000000000000000000000000000000000000000000000000000000000001).
  // required = true
  optional string inkeyincr = 9;

  // Description missing in models
  // default = method(GetDefaultIPRangeForDTLS)
  IPRange iprange = 5;

  // Description missing in models
  repeated APILink links = 20;

  // Description missing in models
  // default = method(GetDefaultNetworkMeshing)
  NetworkMeshing networkmeshing = 10;

  // The out IV start for the DTLSRange (default: 0x11111111).
  // required = true
  optional string outiv = 11;

  // The out IV increment for the DTLSRange (default: 0x00000001).
  // required = true
  optional string outivincr = 12;

  // The out key start for the DTLSRange (default: 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA).
  // required = true
  optional string outkey = 13;

  // The out key start for the DTLSRange (default: 0x0000000000000000000000000000000000000000000000000000000000000001).
  // required = true
  optional string outkeyincr = 14;

  // Description missing in models
  // required = true
  optional int32 tunnelcount = 15;

  // The MAC address increment rule for the DTLSRange (default: 00:00:00:00:00:01).
  // required = true
  optional string tunneldestinationmacincr = 16;

  // The MAC start address for the DTLSRange (default: AA:BB:CC:DD:EE:FF).
  // required = true
  optional string tunneldestinationmacstart = 17;

  // The inner VLAN range assigned to the current DTLS Range configuration
  VLANRange vlanrange = 18;
}

// Description missing in models
message NetworkMeshing {

  // The number of destination IPs to use for each meshing group.
  // default = 1
  optional int32 dstipspergroup = 1;

  // Description missing in models
  MappingType mappingtype = 2;

  // The number of source VLANs to use for each meshing group.
  // default = 1
  optional int32 srcvlanspergroup = 3;
}

// Use this property to switch between different meshing types (default: FULL_MESH).
message MappingType {
}

// The tunnel stack assigned to the current test configuration
message TunnelStack {

  // Description missing in models
  // required = true
  ID id = 5;

  // Description missing in models
  InnerIPRange inneriprange = 1;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  IPRange outeriprange = 2;

  // Description missing in models
  TunnelRange tunnelrange = 3;

  // Description missing in models
  // required = true
  Name tunnelstackname = 4;
}

// The Inner IP Range assigned to the current test configuration
message InnerIPRange {

  // Description missing in models
  TagList networktags = 1;
}

// The Tunnel Range assigned to the current test configuration
message TunnelRange {

  // Description missing in models
  CiscoAnyConnectSettings ciscoanyconnectsettings = 1;

  // Description missing in models
  // default = 120
  optional int32 dcprequesttimeout = 2;

  // Description missing in models
  DNSResolver dnsresolver = 3;

  // Description missing in models
  F5Settings f5settings = 4;

  // Description missing in models
  FortinetSettings fortinetsettings = 5;

  // Description missing in models
  repeated APILink links = 11;

  // Description missing in models
  PANGPSettings pangpsettings = 6;

  // Description missing in models
  // required = true
  optional int32 tcpdstport = 7;

  // Description missing in models
  // required = true
  optional int32 tunnelcountperouterip = 8;

  // Description missing in models
  // default = 120
  optional int32 tunnelestablishmenttimeout = 9;

  message Vendortype {
    enum Enum {
      unspecified = 0;
      CISCO_ANY_CONNECT = 1;
      F5 = 4;
      FORTINET = 3;
      PAN_GP = 2;
    }
  }
  // Description missing in models
  // required = true
  optional Vendortype.Enum vendortype = 10;
}

// Description missing in models
message CiscoAnyConnectSettings {

  // Description missing in models
  AuthSettings authsettings = 8;

  // Description missing in models
  CiscoEncapsulation ciscoencapsulation = 1;

  // Description missing in models
  repeated string connectionprofiles = 2;

  // Description missing in models
  // default = 60
  optional int32 espproberetrytimeout = 3;

  // Description missing in models
  // default = 65
  optional int32 espprobetimeout = 4;

  // Description missing in models
  repeated APILink links = 7;

  // Description missing in models
  TcpProfile outertcpprofile = 9;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileCiscoSettings)
  TLSProfile outertlsclientprofile = 5;

  // Description missing in models
  // required = true
  optional string vpngateway = 6;
}

// Description missing in models
message AuthSettings {

  // Description missing in models
  // default = AAA
  AuthMethodType authmethod = 1;

  // Description missing in models
  // default = method(GetDefaultAuthParam)
  Params authparam = 2;

  // The authentication certificate file of the VPN tunnel.
  // default = method(GetDefaultCertificateFile)
  Params certificatefile = 3;

  // The authentication key file of the VPN tunnel.
  // default = method(GetDefaultKeyFile)
  Params keyfile = 4;

  // The key file password of the TLS VPN authentication.
  optional string keyfilepassword = 5;

  // Description missing in models
  repeated APILink links = 10;

  // Description missing in models
  repeated string passwords = 6;

  // Description missing in models
  Params passwordsparam = 7;

  // Description missing in models
  repeated string usernames = 8;

  // Description missing in models
  Params usernamesparam = 9;
}

// The authentication method for TLS VPN tunnels.
message AuthMethodType {
}

// Description missing in models
message CiscoEncapsulation {

  // Description missing in models
  // required = true
  optional bool dtlsenabled = 1;

  // Description missing in models
  DTLSSettings dtlssettings = 2;

  message Encapsulationmode {
    enum Enum {
      unspecified = 0;
      DTLS = 1;
      TLS = 2;
    }
  }
  // The encapsulation mode for inner traffic.
  // required = true
  optional Encapsulationmode.Enum encapsulationmode = 3;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  // required = true
  optional int32 udpport = 4;
}

// Description missing in models
message DTLSSettings {

  // Description missing in models
  repeated APILink links = 3;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileDTLSSettings)
  TLSProfile tlsclientprofile = 1;

  // Description missing in models
  UdpProfile udpprofile = 2;
}

// Description missing in models
message F5Settings {

  // Description missing in models
  AuthSettings authsettings = 5;

  // Description missing in models
  F5Encapsulation f5encapsulation = 1;

  // Description missing in models
  repeated APILink links = 4;

  // Description missing in models
  TcpProfile outertcpprofile = 6;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileF5Settings)
  TLSProfile outertlsclientprofile = 2;

  // Description missing in models
  optional string vpngateway = 3;
}

// Description missing in models
message F5Encapsulation {

  message Encapsulationmode {
    enum Enum {
      unspecified = 0;
      PPP_OVER_DTLS = 1;
      TLS = 2;
    }
  }
  // The encapsulation mode for inner traffic.
  // required = true
  optional Encapsulationmode.Enum encapsulationmode = 1;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  // required = true
  optional bool pppoverdtlsenabled = 2;

  // Description missing in models
  DTLSSettings pppoverdtlssettings = 3;

  // Description missing in models
  // required = true
  optional int32 udpport = 4;
}

// Description missing in models
message FortinetSettings {

  // Description missing in models
  AuthSettings authsettings = 5;

  // Description missing in models
  FortinetEncapsulation fortinetencapsulation = 1;

  // Description missing in models
  repeated APILink links = 4;

  // Description missing in models
  TcpProfile outertcpprofile = 6;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileFortinetSettings)
  TLSProfile outertlsclientprofile = 2;

  // Description missing in models
  optional string vpngateway = 3;
}

// Description missing in models
message FortinetEncapsulation {

  message Encapsulationmode {
    enum Enum {
      unspecified = 0;
      PPP_OVER_DTLS = 1;
      TLS = 2;
    }
  }
  // The encapsulation mode for inner traffic.
  // required = true
  optional Encapsulationmode.Enum encapsulationmode = 1;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  // required = true
  optional bool pppoverdtlsenabled = 2;

  // Description missing in models
  DTLSSettings pppoverdtlssettings = 3;

  // Description missing in models
  // required = true
  optional int32 udpport = 4;
}

// Description missing in models
message PANGPSettings {

  // Description missing in models
  AuthSettings authsettings = 11;

  // Description missing in models
  // default = 60
  optional int32 espproberetrytimeout = 1;

  // Description missing in models
  // default = 65
  optional int32 espprobetimeout = 2;

  // GP Client Version
  // default = 5.1.5-8
  optional string gpclientversion = 3;

  // A flag indicating if the tunnel is connected to PAN Portal instead of a direct connection
  // to the PAN GP VPN Gateway (default: true).
  // default = True
  optional bool isportal = 4;

  // Description missing in models
  repeated APILink links = 10;

  // Description missing in models
  TcpProfile outertcpprofile = 12;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfilePangpSettings)
  TLSProfile outertlsclientprofile = 5;

  // Description missing in models
  PANGPEncapsulation pangpencapsulation = 6;

  // Description missing in models
  // required = true
  optional string portalhostname = 7;

  // Description missing in models
  optional string vpngateway = 8;

  // Description missing in models
  repeated string vpngateways = 9;
}

// Description missing in models
message PANGPEncapsulation {

  message Encapsulationmode {
    enum Enum {
      unspecified = 0;
      ESP_OVER_UDP = 1;
      TLS = 2;
    }
  }
  // The encapsulation mode for inner traffic.
  // required = true
  optional Encapsulationmode.Enum encapsulationmode = 3;

  // Description missing in models
  // required = true
  optional bool espoverudpenabled = 1;

  // Description missing in models
  ESPOverUDPSettings espoverudpsettings = 2;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  // required = true
  optional int32 udpport = 4;
}

// Description missing in models
message ESPOverUDPSettings {

  // Description missing in models
  repeated APILink links = 2;

  // Description missing in models
  UdpProfile udpprofile = 1;
}

// The configuration for DUT
message ApplicationProfile {

  // Indicates whether the profile is enabled or not.
  // default = True
  optional bool active = 10;

  // Description missing in models
  repeated ExternalResourceInfo add_applications = 5;

  // Description missing in models
  repeated Application applications = 1;

  // Description missing in models
  NetworkMapping defaultnetworkmapping = 2;

  // Description missing in models
  ID id = 12;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  repeated UpdateNetworkMapping modify_excluded_dut_recursively = 7;

  // Description missing in models
  repeated UpdateNetworkMapping modify_tags_recursively = 8;

  // Description missing in models
  // required = true
  optional string name = 3;

  // Description missing in models
  // default = method(GetDefaultObjectivesAndTimeline)
  ObjectivesAndTimeline objectivesandtimeline = 4;

  // Description missing in models
  repeated string reset_tags_to_default = 9;

  // Description missing in models
  TrafficSettings trafficsettings = 11;
}

// Description missing in models
message Application {

  // The action timeout value of the Scenario.
  // default = 30
  optional int32 actiontimeout = 17;

  // Indicates whether the scenario is enabled or not.
  // default = True
  optional bool active = 18;

  // The client HTTP profile used in the Scenario.
  HTTPProfile clienthttpprofile = 19;

  // Description missing in models
  // default = method(GetDefaultClientTlsProfileForApplication)
  TLSProfile clienttlsprofile = 1;

  // Description missing in models
  repeated Connection connections = 20;

  // The maximum number of transactions for all scenario connections.
  optional int32 connectionsmaxtransactions = 21;

  // Description missing in models
  repeated DataType datatypes = 2;

  // The description of the Scenario.
  optional string description = 22;

  // Description missing in models
  optional string destinationhostname = 23;

  // Description missing in models
  optional string dnnid = 24;

  // The endpoint ID of the Scenario.
  optional int32 endpointid = 25;

  // Description missing in models
  repeated Endpoint endpoints = 26;

  // The external resource URL of the Scenario.
  optional string externalresourceurl = 27;

  // Description missing in models
  ID id = 44;

  // The index of the scenario.
  optional int32 index = 28;

  // Description missing in models
  optional bool inherithttpprofile = 29;

  // Description missing in models
  // default = True
  optional bool inherittls = 3;

  // The Ip Preference. Must be one of: IPV4_ONLY, IPV6_ONLY, BOTH_IPV4_FIRST, BOTH_IPV6_FIRST
  // or IP_PREF_MAX.
  IpPreference ippreference = 30;

  // A value that indicates if the action is deprecated.
  optional bool isdeprecated = 31;

  // Description missing in models
  optional bool isstatelessstream = 4;

  // The iteration counter of the Scenario.
  optional int32 iterationcount = 32;

  // Description missing in models
  repeated APILink links = 14;

  // The maximum active limit of the Scenario.
  optional int32 maxactivelimit = 33;

  // Description missing in models
  repeated UpdateNetworkMapping modify_excluded_dut_recursively = 15;

  // Description missing in models
  repeated UpdateNetworkMapping modify_tags_recursively = 16;

  // Description missing in models
  Name name = 34;

  // Description missing in models
  NetworkMapping networkmapping = 35;

  // The objective weight of the application.
  // required = true
  optional int64 objectiveweight = 5;

  // Description missing in models
  repeated Params params = 36;

  // The protocol ID of the Scenario.
  optional string protocolid = 37;

  // Description missing in models
  optional string qosflowid = 38;

  // If true, ConnectionsMaxTransactions will be readonly.
  optional bool readonlymaxtrans = 39;

  // The server HTTP profile used in the Scenario.
  HTTPProfile serverhttpprofile = 40;

  // Description missing in models
  // default = method(GetDefaultServerTlsProfileForApplication)
  TLSProfile servertlsprofile = 6;

  // Description missing in models
  StatelessStream statelessstream = 7;

  // Description missing in models
  // default = False
  optional bool static = 8;

  // Description missing in models
  repeated string supportedapps = 9;

  // Description missing in models
  // default = False
  optional bool supportscalibration = 10;

  // Indicates if the scenario supports Client HTTP profile.
  optional bool supportsclienthttpprofile = 41;

  // Indicates if the scenario supports HTTP profiles.
  optional bool supportshttpprofiles = 42;

  // Indicates if the scenario supports Server HTTP profile.
  optional bool supportsserverhttpprofile = 43;

  // Description missing in models
  // default = True
  optional bool supportsstrikes = 11;

  // Description missing in models
  // default = True
  optional bool supportstls = 12;

  // Description missing in models
  // default = items(1)
  repeated Track tracks = 13;
}

// Description missing in models
message DataType {

  // Description missing in models
  ID id = 2;

  // A list of parameters for this data type.
  repeated DataTypeValues values = 1;
}

// Description missing in models
message DataTypeValues {

  // The name of the parameter.
  optional string id = 1;

  // The default value of the parameter.
  optional string valuetype = 2;
}

// Description missing in models
message StatelessStream {

  // Description missing in models
  StreamProfile clientstreamprofile = 1;

  // Description missing in models
  StreamDirection direction = 2;

  // Description missing in models
  // default = False
  optional bool isfloodstream = 3;

  // Description missing in models
  repeated APILink links = 5;

  // Description missing in models
  StreamProfile serverstreamprofile = 4;
}

// Description missing in models
message StreamProfile {

  // Description missing in models
  // required = true
  optional int32 packetrate = 1;

  // Description missing in models
  // required = true
  optional int32 payloadsize = 2;

  // Description missing in models
  // required = true
  StreamPayloadType payloadtype = 3;

  // Description missing in models
  optional string totalestimatedthroughput = 4;

  // Description missing in models
  optional string totalestimatedthroughputpersimulateduser = 5;

  // Description missing in models
  optional int32 uniquepoolsize = 6;
}

// Description missing in models
message StreamPayloadType {
}

// Description missing in models
message StreamDirection {
}

// Description missing in models
message Track {

  // Description missing in models
  repeated Action actions = 1;

  // Description missing in models
  repeated string add_actions = 2;

  // Description missing in models
  // required = true
  ID id = 3;

  // Description missing in models
  repeated APILink links = 4;
}

// Description missing in models
message Action {
}

// Description missing in models
message ObjectivesAndTimeline {

  // Description missing in models
  // default = AgentOptimizationMode:BALANCED_MODE, WarmUpPeriod:0
  AdvancedSettings advancedsettings = 1;

  // Description missing in models
  repeated APILink links = 6;

  // Description missing in models
  // default = Type:Throughput,Id:0,Unit:bps
  SpecificObjective primaryobjective = 2;

  // Description missing in models
  SecondaryObjective secondaryobjective = 3;

  // Deprecated. Use SecondaryObjective instead.
  // default = items(1)
  repeated SpecificObjective secondaryobjectives = 4;

  // Deprecated. Use PrimaryObjective.Timeline instead.
  // default = items(1)
  repeated TimelineSegment timelinesegments = 5;
}

// Description missing in models
message AdvancedSettings {

  // Description missing in models
  AgentOptimizationMode agentoptimizationmode = 1;

  // The CPU percentage reserved for streaming purpose use (default: 0).
  // default = 25
  optional int32 agentstreamingpurposecpupercent = 2;

  // Deprecated. Use the calibration operation to find the best value for AgentStreamingPurposeCPUPercent
  // for the current assigned agents.
  // default = True
  optional bool automaticcpupercent = 3;

  // The time the test will wait all connections to be graceful stopped (default: 15 seconds).
  // default = 120
  optional int64 connectiongracefulstoptimeout = 4;

  // The time that servers may need to warm up, when clients should wait (default: 0 seconds).
  // required = true
  optional int64 warmupperiod = 5;
}

// Use this property to switch between different agent optimization strategies (default:
// BALANCED_MODE)
message AgentOptimizationMode {
}

// Description missing in models
message SpecificObjective {

  // Description missing in models
  // required = true
  ID id = 6;

  // Description missing in models
  repeated APILink links = 7;

  // Only applies if Type is SimulatedUsers. The maximum number or percentage of users
  // that can be in the pending state (not yet connected and sending traffic) at any time.
  // You can either specify a number or a percentage using the % sign.
  // required = true
  optional string maxpendingsimulatedusers = 1;

  // Only applies if Type is SimulatedUsers. The maximum number of simulated users at
  // which new users are initiated and teardown per interval(1 second). Default value
  // is 0 (no limit)
  // default = 0
  optional int64 maxsimulatedusersperinterval = 2;

  // The timeline of this objective.
  // default = items(3)
  repeated TimelineSegmentUnion timeline = 3;

  // The objective's type (default: Throughput).
  // required = true
  ObjectiveType type = 4;

  // The objective's unit. Must be one of: bps or ''.
  // required = true
  ObjectiveUnit unit = 5;
}

// Description missing in models
message TimelineSegmentUnion {
}

// Description missing in models
message SteadySegment {

  // The duration of the timeline segment (default: 600).
  optional int64 duration = 3;

  // Description missing in models
  ID id = 6;

  message Objectiveunit {
    enum Enum {
      unspecified = 0;
      Gbps = 4;
      Kbps = 2;
      Mbps = 3;
      bps = 1;
    }
  }
  // Description missing in models
  // required = true
  optional Objectiveunit.Enum objectiveunit = 1;

  // Description missing in models
  // required = true
  optional float objectivevalue = 2;

  // The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
  SegmentType segmenttype = 4;

  // Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need
  // to warm up, when clients should wait (default: 0 seconds).
  // default = 0
  optional int64 warmupperiod = 5;
}

// Description missing in models
message ObjectiveType {
}

// Description missing in models
message ObjectiveUnit {
}

// Description missing in models
message SecondaryObjective {

  // If false, the values of this objective will be ignored.
  // required = true
  optional bool enabled = 1;

  // Only applies if Type is SimulatedUsers. The maximum number or percentage of users
  // that can be in the pending state (not yet connected and sending traffic) at any time.
  // You can either specify a number or a percentage using the % sign.
  // required = true
  optional string maxpendingsimulatedusers = 2;

  // Only applies if Type is SimulatedUsers. The maximum number of simulated users at
  // which new users are initiated and teardown per interval(1 second). Default value
  // is 0 (no limit)
  // default = 0
  optional int64 maxsimulatedusersperinterval = 3;

  message Objectiveunit {
    enum Enum {
      unspecified = 0;
      Gbps = 4;
      Kbps = 2;
      Mbps = 3;
      bps = 1;
    }
  }
  // The objective's unit.
  // required = true
  optional Objectiveunit.Enum objectiveunit = 4;

  // The value of the secondary objective. This value will be used for the whole duration
  // of the test.
  // required = true
  optional float objectivevalue = 5;

  // The objective's type (default: SimulatedUsers).
  // required = true
  ObjectiveType type = 6;
}

// Description missing in models
message TimelineSegment {

  // The duration of the timeline segment (default: 600).
  optional int64 duration = 7;

  // Description missing in models
  ID id = 10;

  // Description missing in models
  repeated APILink links = 6;

  message Objectiveunit {
    enum Enum {
      unspecified = 0;
      Gbps = 4;
      Kbps = 2;
      Mbps = 3;
      bps = 1;
    }
  }
  // The measurement unit for the objective value. Only applicable for Throughput objectives.
  // default = Objectiveunit.Enum.gbps
  optional Objectiveunit.Enum objectiveunit = 1;

  // The objective value for this timeline segment.
  // default = 1
  optional float objectivevalue = 2;

  message Primaryobjectiveunit {
    enum Enum {
      unspecified = 0;
      Gbps = 4;
      Kbps = 2;
      Mbps = 3;
      bps = 1;
    }
  }
  // Deprecated. Use PrimaryObjective.Timeline[].ObjectiveUnit instead. The primary objective
  // unit. (default: Gbps)
  // required = true
  optional Primaryobjectiveunit.Enum primaryobjectiveunit = 3;

  // Deprecated. Use PrimaryObjective.Timeline[].ObjectiveValue instead. The primary objective
  // value (default: 1).
  // required = true
  optional float primaryobjectivevalue = 4;

  // Deprecated. Use SecondaryObjective.ObjectiveValue/ObjectiveUnit instead. The secondary
  // objectives values.
  repeated ObjectiveValueEntry secondaryobjectivevalues = 5;

  // The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
  SegmentType segmenttype = 8;

  // Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need
  // to warm up, when clients should wait (default: 0 seconds).
  // default = 0
  optional int64 warmupperiod = 9;
}

// Description missing in models
message ObjectiveValueEntry {

  // The ID of the objective.
  // required = true
  optional string id = 3;

  // The unit of the Objective.
  optional string unit = 1;

  // The value of the Objective.
  // required = true
  optional float value = 2;
}

// Error response generated while serving API request.
message Error {

  // Numeric status code based on the underlying transport being used.
  // The API server MUST set this code explicitly based on following references:
  // - HTTP 4xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.5
  // - HTTP 5xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.6
  // - gRPC errors: https://grpc.github.io/grpc/core/md_doc_statuscodes.html
  // required = true
  optional int32 code = 1;

  message Kind {
    enum Enum {
      unspecified = 0;
      validation = 1;
      internal = 2;
    }
  }
  // Classification of error originating from within API server that may not be mapped
  // to the value in `code`.
  // Absence of this field may indicate that the error did not originate from within API
  // server.
  optional Kind.Enum kind = 2;

  // List of error messages generated while executing the request.
  repeated string errors = 3;
}

// A list of warnings that have occurred while executing the request.
message Warning {

  // A list of any system specific warnings that have occurred while
  // executing the request.
  repeated string warnings = 1;
}

// Version details
message Version {

  // Version of API specification
  // default =
  optional string api_spec_version = 1;

  // Version of SDK generated from API specification
  // default =
  optional string sdk_version = 2;

  // Version of application consuming or serving the API
  // default =
  optional string app_version = 3;
}

// The request has succeeded with no application content but the server
// may return a list of detailed warnings.
message Success {
  Warning warning = 1;
}

// The request did not succeed and server has responded with error details.
message Failure {
  Error error = 1;
}

message UpdateConfigRequest {
  AppsecConfig appsec_config = 1;
}
message UpdateConfigResponse {
  AppsecConfig appsec_config = 1;
}

message GetVersionResponse {
  Version version = 1;
}


// Description missing in models
//
// For all RPCs defined in this service, API Server SHOULD provide JSON
// representation of `Error` message as an error string upon failure, ensuring
// name of enum constants (instead of value) for `kind` property is present
// in the representation
service Openapi {

  // Description missing in models
  rpc GetVersion(google.protobuf.Empty) returns (GetVersionResponse);
}
