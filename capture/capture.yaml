openapi: 3.1.0

info:
  title: Capture models
  version: ^0.0.0

components:
  schemas:
    Capture:
      x-status: under-review
      x-include: '../common/common.yaml#/components/schemas/Named.Object'
      description: >-
        Container for capture settings.
      type: object
      required: [name]
      properties:
        port_names:
          description: >-
            The unique names of ports that the capture settings will apply to.
          type: array
          items:
            type: string
            x-constraint:
            - '/components/schemas/Port/properties/name'
        custom_filters:
          description: >-
            A list of custom filters
          type: array
          items:
            $ref: '#/components/schemas/Capture.Custom'
        packet_filter:
          description: >-
            A list of packet filters to apply to the capturing ports.
            If no packet filters are specified then all packets will be captured.
            A capture can have multiple filters. The number of filters supported
            is determined by the implementation which can be retrieved using
            the capabilities API.
          type: array
          items:
            $ref: '#/components/schemas/Capture.Filter'
        enable:
          description: >-
            Enable capture on the port.
          type: boolean
          default: True
        overwrite:
          description: >-
            Overwrite the capture buffer.
          type: boolean
          default: false
        format:
          description: >-
            The format of the capture file.
          type: string
          enum: [pcap, pcapng]
          default: pcap

    Capture.Filter:
      description: >-
        Container for capture filters
      type: object
      required: [choice]
      properties:
        choice:
          type: string
          enum: [ethernet, vlan, ipv4]
        ethernet:
          $ref: '#/components/schemas/Capture.Ethernet'
        vlan:
          $ref: '#/components/schemas/Capture.Vlan'
        ipv4:
          $ref: '#/components/schemas/Capture.Ipv4'

    Capture.Custom:
      type: object
      properties:
        offset:
          description: >-
            The byte offset to filter on
          type: integer
        value:
          type: string
          format: hex
        mask:
          type: string
          format: hex
    
    Capture.Field:
      type: object
      properties:
        value:
          type: string
          format: hex
        mask:
          type: string
          format: hex

    Capture.Ethernet:
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
        ether_type:
          $ref: '#/components/schemas/Capture.Field'
        pfc_queue:
          $ref: '#/components/schemas/Capture.Field'

    Capture.Vlan:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Capture.Field'
        priority:
          $ref: '#/components/schemas/Capture.Field'

    Capture.Ipv4:
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
        priority:
          $ref: '#/components/schemas/Capture.Field'
