openapi: 3.1.0

info:
  title: Capture models
  version: ^0.0.0

components:
  schemas:
    Capture:
      x-status: under-review
      x-include: 
      - '../common/common.yaml#/components/schemas/Named.Object'
      description: >-
        Container for capture settings.
      type: object
      required: [name]
      properties:
        port_names:
          description: >-
            The unique names of ports that the capture settings will apply to.
            Port_names cannot be duplicated between capture objects.
          type: array
          items:
            type: string
            x-constraint:
            - '/components/schemas/Port/properties/name'
        filters:
          description: >-
            A list of filters to apply to the capturing ports.
            If no filters are specified then all packets will be captured.
            A capture can have multiple filters. The number of filters supported
            is determined by the implementation which can be retrieved using
            the capabilities API.

            When multiple filters are specified the capture implementation 
            must && (and) all the filters.
          type: array
          items:
            $ref: '#/components/schemas/Capture.Filter'
        overwrite:
          description: >-
            Overwrite the capture buffer.
          type: boolean
          default: false
        packet_size:
          description: >-
            The maximum size of each captured packet.
            If no value is specified or it is null then the entire packet will
            be captured.
          type: integer
        format:
          description: >-
            The format of the capture file.
          type: string
          enum: [pcap, pcapng]
          default: pcap

    Capture.Filter:
      description: >-
        Container for capture filters
      type: object
      required: [choice]
      properties:
        choice:
          type: string
          enum: [custom, ethernet, vlan, ipv4]
        custom:
          description: >-
            Offset from last filter in the list.
            If no filters are present it is offset from position 0.
            Multiple custom filters can be present, the length of each custom
            filter is the length of the value being filtered.
          $ref: '#/components/schemas/Capture.Custom'
        ethernet:
          $ref: '#/components/schemas/Capture.Ethernet'
        vlan:
          $ref: '#/components/schemas/Capture.Vlan'
        ipv4:
          $ref: '#/components/schemas/Capture.Ipv4'

    Capture.Custom:
      x-include: 
      - '#/components/schemas/Capture.Field'
      properties:
        offset:
          description: >-
            The byte offset to filter on
          type: integer
    
    Capture.Field:
      type: object
      properties:
        value:
          type: string
          format: hex
        mask:
          type: string
          format: hex
        negate:
          type: boolean
          default: false

    Capture.Ethernet:
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
        ether_type:
          $ref: '#/components/schemas/Capture.Field'
        pfc_queue:
          $ref: '#/components/schemas/Capture.Field'

    Capture.Vlan:
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/Capture.Field'
        cfi:
          $ref: '#/components/schemas/Capture.Field'
        id:
          $ref: '#/components/schemas/Capture.Field'
        protocol:
          $ref: '#/components/schemas/Capture.Field'

    Capture.Ipv4:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Capture.Field'
        headeer_length:
          $ref: '#/components/schemas/Capture.Field'
        priority:
          $ref: '#/components/schemas/Capture.Field'
        total_length:
          $ref: '#/components/schemas/Capture.Field'
        identification:
          $ref: '#/components/schemas/Capture.Field'
        reserved:
          $ref: '#/components/schemas/Capture.Field'
        dont_fragment:
          $ref: '#/components/schemas/Capture.Field'
        more_fragments:
          $ref: '#/components/schemas/Capture.Field'
        fragment_offset:
          $ref: '#/components/schemas/Capture.Field'
        time_to_live:
          $ref: '#/components/schemas/Capture.Field'
        protocol:
          $ref: '#/components/schemas/Capture.Field'
        header_checksum:
          $ref: '#/components/schemas/Capture.Field'
        src:
          $ref: '#/components/schemas/Capture.Field'
        dst:
          $ref: '#/components/schemas/Capture.Field'
