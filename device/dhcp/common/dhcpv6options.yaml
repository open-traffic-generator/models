components:
  schemas:
    Dhcpv6Options.ClientIdentifier:
      type: object
      properties:
        choice:
          description: >-
            The client identifier option is used to carry a DUID. The client identifier identifies a client.
            In auto mode, The OTG implementation will provide a system generated value for this property.
          type: string
          default: auto
          x-field-uid: 1
          x-enum:
            auto:
              x-field-uid: 1
            identifier:
              x-field-uid: 2
        identifier:
          $ref: '#/components/schemas/Dhcpv6Options.Identifier'
          x-field-uid: 2

    Dhcpv6Options.ServerIdentifier:
      type: object
      properties:
        choice:
          description: >-
            The server identifier option is used to carry a DUID. The server identifier identifies a server.
            In auto mode, The OTG implementation will provide a system generated value for this property.
          type: string
          default: auto
          x-field-uid: 1
          x-enum:
            auto:
              x-field-uid: 1
            identifier:
              x-field-uid: 2
        identifier:
          $ref: '#/components/schemas/Dhcpv6Options.Identifier'
          x-field-uid: 2

    Dhcpv6Options.Identifier:
      type: object
      properties:
        choice:
          description: >-
            The Identifier option is used to carry a DUID. The Identifier option can be either client or server. Client identifier
            identifies a client while the server identifier identifies the server.
          type: string
          default: duid_ll
          x-field-uid: 1
          x-enum:
            duid_llt:
              x-field-uid: 1
            duid_en:
              x-field-uid: 2
            duid_ll:
              x-field-uid: 3
            duid_uuid:
              x-field-uid: 4
        duid_llt:
          $ref: '#/components/schemas/Dhcpv6Options.DuidLlt'
          x-field-uid: 2
        duid_en:
          $ref: '#/components/schemas/Dhcpv6Options.DuidEn'
          x-field-uid: 3  
        duid_ll:
          $ref: '#/components/schemas/Dhcpv6Options.DuidLl'
          x-field-uid: 4
        duid_uuid:
          $ref: '#/components/schemas/Dhcpv6Options.DuidUuid'
          x-field-uid: 5
        
    Dhcpv6Options.DuidLlt:
      description: >-
        DUID based on Link Layer address plus time. Hardware Type will be auto assigned to ethernet type.
      type: object
      properties:
        time:
          description: |-
            The time value is the time that the DUID is generated represented in seconds since midnight (UTC), January 1, 
            2000, modulo 2^32.            
          type: integer
          format: uint32
          x-field-uid: 1
        link_layer_address:
          description: |-
            The link-layer address is stored in canonical form, as described in RFC 2464.           
          $ref: '#/components/schemas/Dhcpv6Options.LinkLayerAddress'
          x-field-uid: 2

    Dhcpv6Options.DuidEn:
      description: >-
        DUID assigned by vendor based on enterprise number.
      type: object
      properties:
        enterprise_number:
          description: |-
            Vendor's registered private enterprise number as maintained by IANA.            
          type: integer
          format: uint32
          x-field-uid: 1
        identifier:
          description: |-
            The unique identifier assigned by the vendor..           
          type: string
          x-field-uid: 2

    Dhcpv6Options.DuidLl:
      description: >-
        DUID based on Link Layer address. Hardware Type will be auto assigned to ethernet type.
      type: object
      properties:
       link_layer_address:
          description: |-
            The link-layer address is stored in canonical form, as described in RFC 2464.           
          $ref: '#/components/schemas/Dhcpv6Options.LinkLayerAddress'
          x-field-uid: 1   
    
    Dhcpv6Options.DuidUuid:
      description: >-
        DUID embedded a Universally Unique IDentifier (UUID).
      type: object
      properties:
       uuid:
          description: |-
            The Universally Unique IDentifier embedded in DUID.           
          type: string
          x-field-uid: 1

    Dhcpv6Options.LinkLayerAddress:
      description: >-
        The link-layer address configured in DUID llt of DUID ll. If configured on client for server identifier then user must
        specify the choice as value. 
      type: object
      properties:
        choice:
          description: >-
            In auto mode the system generated value is set for this property, while if the choice is selected as value, 
            a user configured value will be used for this property.
          type: string
          default: auto
          x-field-uid: 1
          x-enum:
            auto:
              x-field-uid: 1
            value:
              x-field-uid: 2
        auto:
          description: >-
            The OTG implementation must provide a system generated value for this property.
          type: string
          format: mac
          x-field-uid: 2
        value:
          description: >-
            User must specify a value if mode is not auto.
          type: string
          format: mac
          x-field-uid: 3

    Dhcpv6Options.Iana:
      description: >-
        The Identity Association for non temporary Addresses option (IA_NA option) is used to carry an IA_NA, the 
        parameters associated with the IA_NA, and the non-temporary addresses associated with the IA_NA.
      type: object
      properties:
        iaid:
          description: |-
            The unique identifier for this IA_NA, the IAID must be unique among the identifiers for all of this client's IA_NAs. 
            The number space for IA_NA IAIDs is separate from the number space for IA_TA IAIDs.          
          type: integer
          format: uint32
          x-field-uid: 1
        t1:
          description: |-
            The time at which the client contacts the server from which the addresses in the IA_NA were obtained to extend the 
            lifetimes of the addresses assigned to the IA_NA. T1 is a time duration relative to the current time expressed in 
            units of seconds.          
          type: integer
          format: uint32
          x-field-uid: 2
        t2:
          description: |-
            The time at which the client contacts any available server to extend the lifetimes of the addresses assigned to the 
            IA_NA. T2 is a time duration relative to the current time expressed in units of seconds.
          type: integer
          format: uint32
          x-field-uid: 3

    Dhcpv6Options.Iata:
      description: >-
        The Identity Association for the Temporary Addresses (IA_TA) option is used to carry an IA_TA, the parameters associated 
        with the IA_TA and the addresses associated with the IA_TA. All of the addresses in this option are used by the client as 
        temporary addresses.
      type: object
      properties:
        iaid:
          description: |-
            The unique identifier for this IA_TA, the IAID must be unique among the identifiers for all of this client's IA_TAs. 
            The number space for IA_TA IAIDs is separate from the number space for IA_NA IAIDs.          
          type: integer
          format: uint32
          x-field-uid: 1

    Dhcpv6Options.IaAddress:
      description: >-
        The IA Address option is used to specify IPv6 addresses associated with an IA_NA or an IA_TA. The IA Address option must be 
        encapsulated in the Options field of an IA_NA or IA_TA option.
      type: object
      properties:
        ip:
          description: >-
            The IPv6 address associated with an IA_NA or an IA_TA.
          type: string
          format: ipv6
          x-field-uid: 1
        preferred_lifetime: 
          description: >-
            The preferred lifetime for the IPv6 address in expressed in units of seconds.
          type: integer
          format: uint32
          x-field-uid: 2
        valid_lifetime: 
          description: >-
            The valid lifetime for the IPv6 address in expressed in units of seconds.
          type: integer
          format: uint32
          x-field-uid: 3

    Dhcpv6Options.OptionsRequest:
      type: object
      properties:
        choice:
          description: >-
            The Option Request option is used to identify a list of options in a message between a client and a server.
            - Vendor_specific information option, requested by clients for vendor-specific informations from servers.
            - DNS Recursive Name Server Option, requested by clients to get the list ofIPv6 addresses of DNS recursive name 
              servers to which DNS queries may be sent by the client resolver in order of preference.
            - Client FQDN option - indicates whether the client or the DHCP server should update DNS with the AAAA record 
              corresponding to the assigned IPv6 address and the FQDN provided in this option. The DHCP server always updates 
              the PTR record.
            - bootfile_url, URLvto a boot file.
            - sztp. Securely provision a networking device when it is booting in a factory-default state.
          type: string
          default: vendor_information
          x-field-uid: 1
          x-enum:
            vendor_information:
              x-field-uid: 1
            name_servers:
              x-field-uid: 2
            fqdn:
              x-field-uid: 3
            bootfile_url:
              x-field-uid: 4
            sztp:
              x-field-uid: 5
            custom:
              x-field-uid: 6
        custom:
          $ref: '#/components/schemas/Dhcpv6Options.Custom'
          x-field-uid: 2

    Dhcpv6Options.Custom:
      description: >-
        The Custom option is used to provide a not well known option in the message between a client and a server.
      type: object
      properties:
        type:
          description: >-
            The type of the Custom option TLV.
          type: integer
          format: uint32
          x-field-uid: 1  
        value:
          description: >-
            The value of the Custom option TLV.
          type: string
          x-field-uid: 2

    Dhcpv6Options.VendorClass:
      description: >-
        This option is used by a client to identify the vendor that manufactured the hardware on which the client is running.
      type: object
      properties:
        enterprise_number:
          description: >-
            The vendor's registered Enterprise Number as registered with IANA.
          type: integer
          format: uint32
          x-field-uid: 1
        class_data: 
          description: >-
            The opaque data representing the hardware configuration of the host on which the client is running.
          type: string
          x-field-uid: 2

    Dhcpv6Options.VendorInfo:
      description: >-
        This option is used by clients and servers to exchange vendor-specific information.
      type: object
      properties:
        enterprise_number:
          description: >-
            The vendor's registered Enterprise Number as registered with IANA.
          type: integer
          format: uint32
          x-field-uid: 1
        option_data: 
          description: >-
            An opaque object of option-len octets,interpreted by vendor-specific code on the clients and servers.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6Options.VendorSpecificOptions'
          x-field-uid: 2

    Dhcpv6Options.VendorSpecificOptions:
      description: >-
        The encapsulated vendor-specific options field is encoded as a sequence of code/length/value fields of 
        identical format to the DHCP options field. The option codes are defined by the vendor identified in the 
        enterprise-number field and are not managed by IANA.
      type: object
      properties:
        code:
          description: >-
            The code for the encapsulated option.
          type: integer
          format: uint32
          x-field-uid: 1  
        data:
          description: >-
            The data for the encapsulated option.
          type: string
          x-field-uid: 2

    Dhcpv6Options.Fqdn:
      description: >-
        DHCPv6 server needs to know the FQDN of the client for the addresses for the client's IA_NA bindings in order to
        update the IPv6-address-to-FQDN mapping. This option allows the client to convey its FQDN to the server. The Client 
        FQDN option also contains Flags that DHCPv6 clients and servers use to negotiate who does which updates.
      type: object
      properties:
        flag_s:
          description: >-
            The "S" bit indicates whether the server should or should not perform the AAAA RR (FQDN-to-address) DNS updates. 
            A client sets the bit to 0 to indicate that the server should not perform the updates and 1 to indicate that the 
            server should perform the updates. The state of the bit in the reply from the server indicates the action to be 
            taken by the server. If it is 1, the server has taken responsibility for AAAA RR updates for the FQDN.
          type: boolean
          default: true
          x-field-uid: 1
        flag_o:
          description: >-
            The "O" bit indicates whether the server has overridden the client's preference for the "S" bit. A client must set this 
            bit to 0. A server must set this bit to 1 if the "S" bit in its reply to the client does not match the "S" bit received 
            from the client.
          type: boolean
          default: false
          x-field-uid: 2
        flag_n:
          description: >-
            The "N" bit indicates whether the server should not perform any DNS updates. A client sets this bit to 0 to request that 
            the server should perform updates (the PTR RR and possibly the AAAA RR based on the "S" bit) or to 1 to request that the 
            server should not perform any DNS updates. A server sets the "N" bit to indicate whether the server shall (0) or shall not (1) 
            perform DNS updates. If the "N" bit is 1, the "S" bit MUST be 0.
          type: boolean
          default: false
          x-field-uid: 3
        domain_name:
          description: >-
            The Domain Name part of the option carries all or part of the FQDN of a DHCPv6 client. A client MAY also leave the 
            Domain Name field empty if it desires the server to provide a name.
          type: string
          x-field-uid: 4

    Dhcpv6Options.BootfileUrl:
      description: >-
        The server sends this option to inform the client about a URL to a boot file. This information is required for booting 
        over the network includes the details about the server on which the boot files can be found, the protocol to be used for 
        the download (for example,HTTP or TFTP, and the path and name of the boot file on the server.
      type: object
      properties:
        url:
          description: |-
            The URL for the boot file. It must comply with STD 66 format.
          type: string
          x-field-uid: 1
