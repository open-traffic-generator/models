components:
  schemas:
    SecureEntity.CryptoEngine:
      description: >-
        A container of crypto engine properties of a SecY.
      type: object
      properties:
        choice:
          description: >-
            Engine type based on encryption and/ or decryption capability. Supported types: 1) encrypt_only - engine can only encrypt transmitted packets but such engine cannot decrypt packets upon arrival. As the packets cannot be decrypted on arrival, such packets cannot be delivered to the receiving device. Hence only stateless traffic can be sent. 2) encrypt_decrypt - engine can both encrypt transmitted packets and decrypt packets on arrival. Such engine can have hardware acceleration for faster encryption/ ddecryption. As both encryption and decryption are possible, stateful (e.g. TCP) traffic can also be sent/ received.
          type: string
          default: encrypt_only
          x-field-uid: 1
          x-enum:
            encrypt_only:
              x-field-uid: 1
            encrypt_decrypt:
              x-field-uid: 2
        encrypt_only:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly'
          x-field-uid: 2
        encrypt_decrypt:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptDecrypt'
          x-field-uid: 3
    SecureEntity.CryptoEngine.EncryptOnly:
      description: >-
        The container for encrypt only engine configuration.
      type: object
      properties:
        secure_channels:
          type: array
          items:
            $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly.TxSc'
          x-field-uid: 1
        traffic_options:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly.TrafficOptions'
          x-field-uid: 2
    SecureEntity.CryptoEngine.EncryptDecrypt:
      description: >-
        The container for encrypt and decrypt engine configuration.
      type: object
      properties:
        secure_channels:
          type: array
          items:
            $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptDecrypt.TxSc'
          x-field-uid: 1
        hardware_acceleration:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptDecrypt.HardwareAcceleration'
          x-field-uid: 2
    SecureEntity.CryptoEngine.EncryptOnly.TxSc:
      description: >-
        The container for Tx secure channel configuration.
      type: object
      properties:
        tx_pn:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly.TxSc.TxPn'
          x-field-uid: 1
    SecureEntity.CryptoEngine.EncryptOnly.TxSc.TxPn:
      description: >-
        Tx packet number(PN) configuration.
      type: object
      properties:
        choice:
          description: >-
            Types of Tx packet number(PN) series. Supported choices: 1) fixed PN - MACsec packets will be sent out with the configured fixed PN or lower half of configured fixed XPN. 2) incrementing PN - MACsec packets will be sent out by single device with an incrementing PN or XPN.
          type: string
          default: fixed_pn
          x-field-uid: 1
          x-enum:
            fixed_pn:
              x-field-uid: 1
            incrementing_pn:
              x-field-uid: 2
        fixed:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly.FixedPn'
          x-field-uid: 2
        incrementing:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptOnly.IncrementingPn'
          x-field-uid: 3
    SecureEntity.CryptoEngine.EncryptOnly.FixedPn:
      description: >-
        Fixed packet number(PN) configuration.
      type: object
      properties:
        pn:
          description: >-
            Fixed Tx packet number(PN). 4 bytes PN with which all packets will be sent out.
          type: integer
          format: uint32
          minimum: 1
          maximum: 4294967295
          default: 6 
          x-field-uid: 1
        xpn:
          description: >-
            Fixed Tx extended packet number(XPN). 8 bytes XPN with which all packets will be sent out.
          type: string
          format: hex
          minLength: 1
          maxLength: 16
          minimum: 1
          default: "0x0000000000000006"
          x-field-uid: 2
    SecureEntity.CryptoEngine.EncryptOnly.IncrementingPn:
      description: >-
        Incrementing packet number(PN) configuration.
      type: object
      properties:
        count:
          description: >-
            Count of packet numbers in series. 
          type: integer
          format: uint32
          minimum: 2
          maximum: 1000000
          default: 100
          x-field-uid: 1
        starting_pn:
          description: >-
            The starting packet number(PN).
          type: integer
          format: uint32
          minimum: 1
          default: 10000
          x-field-uid: 2
        starting_xpn:
          description: >-
            The starting extended packet number(XPN).
          type: string
          format: hex
          minLength: 1
          maxLength: 16
          minimum: 1
          default: "0x0000000000010000"
          x-field-uid: 3
    SecureEntity.CryptoEngine.EncryptOnly.TrafficOptions:
      description: >-
        Encrypt only traffic options.
      type: object
      properties:
        send_gratuitous_arp:
          description: >-
            Send gratuitous ARP or not.
          type: boolean
          default: true 
          x-field-uid: 1
    SecureEntity.CryptoEngine.EncryptDecrypt.TxSc:
      description: >-
        Secure channel configuration.
      type: object
      properties:
        tx_pn:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptDecrypt.TxSc.TxPn'
          x-field-uid: 1
    SecureEntity.CryptoEngine.EncryptDecrypt.TxSc.TxPn:
      description: >-
        Starting packet number(PN) configuration.
      type: object
      properties:
        starting_pn:
          description: >-
            Initial Tx packet number(PN).
          type: integer
          format: uint32
          minimum: 1
          default: 1
          x-field-uid: 1
        starting_xpn:
          description: >-
            The starting extended packet number(XPN).
          type: string
          format: hex
          minLength: 1
          maxLength: 16
          minimum: 1
          default: "0x0000000000000001"
          x-field-uid: 3
    SecureEntity.CryptoEngine.EncryptDecrypt.HardwareAcceleration:
      description: >-
        Hardware acceleration configuration for offloading MACsec processing to hardware.
      type: object
      properties:
        choice:
          description: >-
            Hardware acceleration types.
          type: string
          default: none
          x-field-uid: 1
          x-enum:
            none:
              x-field-uid: 1
            inline_crypto:
              x-field-uid: 2
        inline_crypto:
          $ref: '#/components/schemas/SecureEntity.CryptoEngine.EncryptDecrypt.HardwareAcceleration.InlineCrypto'
          x-field-uid: 2
    SecureEntity.CryptoEngine.EncryptDecrypt.HardwareAcceleration.InlineCrypto:
      description: >-
        Inline crypto engine configuration. Encryption/ decryption are offloaded to hardware. Also dynamic fields e.g. packet number(PN) and integrity check value(ICV) are updated in MACsec header on transmit.
      type: object
      properties:
        rx_sectag_offset:
          description: >-
            Offset of Rx secTAG from the first byte in packet.
          type: integer
          format: uint32
          default: 12
          x-field-uid: 1
        type_of_ca:
          description: >-
            Type of connectivity association(CA).
          type: string
          x-field-uid: 2
          x-enum:
            pairwise_ca:
              x-field-uid: 1
            group_ca_single_dut:
              x-field-uid: 2
            group_ca_multipe_duts:
              x-field-uid: 3
        max_ca_count:
          description: >-
            The maximum number of CAs configured on the port. The maximum count supported per port is 256 for Pair-wise CA, each CA having one MACsec device.
          type: integer
          format: uint32
          minimum: 1
          maximum: 256
          default: 256
          x-field-uid: 3
        max_dut_tx_sc_per_ca:
          description: >-
            The maximum number of DUT transmit SCs that can be supported per CA. The count should be number of Tx SCs supported by the DUT per CA, multiplied by number of DUTs in the CA in case of group CA with multiple DUTs scenario.
          type: integer
          format: uint32
          minimum: 1
          maximum: 256
          default: 1
          x-field-uid: 4
        max_device_per_ca:
          description: >-
            The maximum number of MACsec devices at test port that can be supported on each CA. This number is calculated automatically based on the values configured for Max CA Count and Max DUT Tx SC Per CA. Number of MACsec devices at test port should be configured accordingly.
          type: integer
          format: uint32
          minimum: 1
          default: 256
          x-field-uid: 5
        rx_sc_identifying_field:
          description: >-
            The field based on which secure channel(SC) will be identified by the receiving port. Supported fields are:- - 1) source MAC - identify SC based on source MAC field. 2) SCI system ID - identify SC bbased on SCI system ID field. 3) SCI port ID - identify based on SCI port ID field.
          type: string
          default: source_mac
          x-field-uid: 6
          x-enum:
            source_mac:
              x-field-uid: 1
            sci_sytem_id:
              x-field-uid: 2
            sci_port_id:
              x-field-uid: 3
