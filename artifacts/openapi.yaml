openapi: 3.0.3
info:
  title: Open Traffic Generator API
  description: "Open Traffic Generator API defines a model-driven, vendor-neutral\
    \ and standard \ninterface for emulating layer 2-7 network devices and generating\
    \ test traffic.\n\nContributions can be made in the following ways:\n- [open an\
    \ issue](https://github.com/open-traffic-generator/models/issues) in the models\
    \ repository\n- [fork the models repository](https://github.com/open-traffic-generator/models)\
    \ and submit a PR"
  version: 1.6.2
  contact:
    url: https://github.com/open-traffic-generator/models
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  x-model-guide: https://github.com/open-traffic-generator/models/blob/master/MODEL-GUIDE.md
servers:
- url: /
paths:
  /config:
    put:
      description: |-
        Update the current session's configuration.
      operationId: updateConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppsecConfig'
      responses:
        '200':
          $ref: '#/components/responses/Success'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsecConfig'
          description: |-
            The updated configuration
          x-field-uid: 1
        default:
          $ref: '#/components/responses/Failure'
          x-field-uid: 2
      tags:
      - Sessions
  /capabilities/version:
    get:
      tags:
      - Capabilities
      operationId: get_version
      responses:
        '200':
          description: |-
            Version details from API server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          x-field-uid: 1
        default:
          $ref: '#/components/responses/Failure'
          x-field-uid: 2
components:
  responses:
    Success:
      description: "The request has succeeded with no application content but the\
        \ server \nmay return a list of detailed warnings."
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Warning'
    Failure:
      description: |-
        The request did not succeed and server has responded with error details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    AppsecConfig:
      properties:
        config:
          $ref: '#/components/schemas/Config'
          x-field-uid: 1
        configtypename:
          description: |-
            Used for API clients to decide what type of config they have loaded
          type: string
          x-field-uid: 4
        datamodelversion:
          description: |-
            The version of the data model used for this configuration
          type: string
          x-field-uid: 5
        id:
          description: |-
            The unique identifier of the CyPerf configuration
          type: string
          x-field-uid: 6
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 7
        name:
          description: |-
            The name of the configuration
          type: string
          x-field-uid: 8
        sessionid:
          description: |-
            The unique identifier of the session this configuration belongs to
          type: string
          x-field-uid: 2
        templateid:
          description: |-
            The unique identifier of the CyPerf configuration template from which this configuration was created
          type: string
          x-field-uid: 3
      required:
      - configtypename
      type: object
    Config:
      description: |-
        The test configuration
      properties:
        attackprofiles:
          items:
            $ref: '#/components/schemas/AttackProfile'
          type: array
          x-field-uid: 1
        configvalidation:
          $ref: '#/components/schemas/ConfigValidation'
          x-field-uid: 2
        customdashboards:
          $ref: '#/components/schemas/CustomDashboards'
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        networkprofiles:
          items:
            $ref: '#/components/schemas/NetworkProfile'
          type: array
          x-field-uid: 4
        trafficprofiles:
          items:
            $ref: '#/components/schemas/ApplicationProfile'
          type: array
          x-field-uid: 5
        validate:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 7
      type: object
    AttackProfile:
      description: |-
        The configuration for DUT
      properties:
        active:
          x-field-uid: 10
          default: true
          description: |-
            Indicates whether the profile is enabled or not.
          type: boolean
        add_attacks:
          items:
            $ref: '#/components/schemas/ExternalResourceInfo'
          type: array
          x-field-uid: 5
        attacks:
          items:
            $ref: '#/components/schemas/Attack'
          type: array
          x-field-uid: 1
        defaultnetworkmapping:
          $ref: '#/components/schemas/NetworkMapping'
          x-field-uid: 2
        id:
          x-field-uid: 12
          $ref: '#/components/schemas/ID'
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        modify_excluded_dut_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 7
        modify_tags_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 8
        name:
          type: string
          x-field-uid: 3
        objectivesandtimeline:
          $ref: '#/components/schemas/AttackObjectivesAndTimeline'
          x-field-uid: 4
        reset_tags_to_default:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 9
        trafficsettings:
          x-field-uid: 11
          $ref: '#/components/schemas/TrafficSettings'
      required:
      - name
      type: object
    ExternalResourceInfo:
      properties:
        externalresourceurl:
          description: |-
            The id of the attack resource
          type: string
          x-field-uid: 1
      type: object
    Attack:
      properties:
        actiontimeout:
          x-field-uid: 10
          default: 30
          description: |-
            The action timeout value of the Scenario.
          format: int32
          type: integer
        active:
          x-field-uid: 11
          default: true
          description: |-
            Indicates whether the scenario is enabled or not.
          type: boolean
        clienthttpprofile:
          x-field-uid: 12
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The client HTTP profile used in the Scenario.
        clienttlsprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileForAttack)
          x-field-uid: 1
        connections:
          x-field-uid: 13
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        connectionsmaxtransactions:
          x-field-uid: 14
          description: |-
            The maximum number of transactions for all scenario connections.
          format: int32
          type: integer
        create:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 6
        description:
          x-field-uid: 15
          description: |-
            The description of the Scenario.
          type: string
        destinationhostname:
          x-field-uid: 16
          type: string
        dnnid:
          x-field-uid: 17
          type: string
        endpointid:
          x-field-uid: 18
          description: |-
            The endpoint ID of the Scenario.
          format: int32
          type: integer
        endpoints:
          x-field-uid: 19
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        externalresourceurl:
          x-field-uid: 20
          description: |-
            The external resource URL of the Scenario.
          type: string
        id:
          x-field-uid: 37
          $ref: '#/components/schemas/ID'
        index:
          x-field-uid: 21
          description: |-
            The index of the scenario.
          format: int32
          type: integer
        inherithttpprofile:
          x-field-uid: 22
          type: boolean
        inherittls:
          default: true
          type: boolean
          x-field-uid: 2
        ippreference:
          x-field-uid: 23
          $ref: '#/components/schemas/IpPreference'
          description: |-
            The Ip Preference. Must be one of: IPV4_ONLY, IPV6_ONLY, BOTH_IPV4_FIRST, BOTH_IPV6_FIRST or IP_PREF_MAX.
        isdeprecated:
          x-field-uid: 24
          description: |-
            A value that indicates if the action is deprecated.
          type: boolean
        iterationcount:
          x-field-uid: 25
          description: |-
            The iteration counter of the Scenario.
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 7
        maxactivelimit:
          x-field-uid: 26
          description: |-
            The maximum active limit of the Scenario.
          format: int32
          type: integer
        modify_excluded_dut_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 8
        modify_tags_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 9
        name:
          x-field-uid: 27
          $ref: '#/components/schemas/Name'
        networkmapping:
          x-field-uid: 28
          $ref: '#/components/schemas/NetworkMapping'
        params:
          x-field-uid: 29
          items:
            $ref: '#/components/schemas/Params'
          type: array
        protocolid:
          x-field-uid: 30
          description: |-
            The protocol ID of the Scenario.
          type: string
        qosflowid:
          x-field-uid: 31
          type: string
        readonlymaxtrans:
          x-field-uid: 32
          description: |-
            If true, ConnectionsMaxTransactions will be readonly.
          type: boolean
        serverhttpprofile:
          x-field-uid: 33
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The server HTTP profile used in the Scenario.
        servertlsprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultServerTlsProfileForAttack)
          x-field-uid: 3
        supportsclienthttpprofile:
          x-field-uid: 34
          description: |-
            Indicates if the scenario supports Client HTTP profile.
          type: boolean
        supportshttpprofiles:
          x-field-uid: 35
          description: |-
            Indicates if the scenario supports HTTP profiles.
          type: boolean
        supportsserverhttpprofile:
          x-field-uid: 36
          description: |-
            Indicates if the scenario supports Server HTTP profile.
          type: boolean
        supportstls:
          default: true
          type: boolean
          x-field-uid: 4
        tracks:
          default: items(1)
          items:
            $ref: '#/components/schemas/AttackTrack'
          type: array
          x-field-uid: 5
      type: object
    HTTPProfile:
      properties:
        additionalheaders:
          $ref: '#/components/schemas/Params'
          x-field-uid: 1
        connectionpersistence:
          $ref: '#/components/schemas/ConnectionPersistence'
          x-field-uid: 2
        connectionsmaxtransactions:
          description: |-
            The maximum number of transactions for all scenario connections.
          format: int32
          type: integer
          x-field-uid: 3
        description:
          description: |-
            The description of the HTTP profile.
          type: string
          x-field-uid: 4
        externalresourceurl:
          description: |-
            The external resource URL of the HTTP profile.
          type: string
          x-field-uid: 5
        headers:
          $ref: '#/components/schemas/Params'
          x-field-uid: 7
        httpversion:
          $ref: '#/components/schemas/HTTPVersion'
          x-field-uid: 6
        ismodified:
          type: boolean
          x-field-uid: 8
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 12
        name:
          description: |-
            The name of the HTTP profile.
          type: string
          x-field-uid: 9
        params:
          description: |-
            The list of parameters present in the HTTP profile.
          items:
            $ref: '#/components/schemas/Params'
          type: array
          x-field-uid: 10
        useapplicationserverheaders:
          type: boolean
          x-field-uid: 11
      required:
      - name
      - description
      type: object
    Params:
      properties:
        arrayelements:
          items:
            $ref: '#/components/schemas/Params.Arrayelements'
          type: array
          x-field-uid: 2
        arrayelementtype:
          description: |-
            The type of the array elements.
          type: string
          x-field-uid: 1
        category:
          description: |-
            The category associated with the parameter
          type: string
          x-field-uid: 3
        categoryindex:
          description: |-
            The position of the category in the category list
          type: integer
          x-field-uid: 4
        deprecatedprevioussource:
          description: |-
            A value indicating that this parameter had a source that was deprecated
          type: string
          x-field-uid: 5
        description:
          description: |-
            The description of the parameter
          type: string
          x-field-uid: 6
        dictionaryvalue:
          $ref: '#/components/schemas/Params.Dictionaryvalue'
          description: |-
            The dictionary value of the parameter.
          x-field-uid: 7
        enum_property:
          $ref: '#/components/schemas/Params.Enum_property'
          x-field-uid: 8
        file_upload:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 22
        filevalue:
          $ref: '#/components/schemas/FileValue'
          x-field-uid: 9
        flowidentifier:
          description: |-
            If true, the value of this parameter is used to uniquely identify an application/attack
          type: boolean
          x-field-uid: 10
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 23
        isdeprecated:
          default: false
          type: boolean
          x-field-uid: 11
        ismodified:
          type: boolean
          x-field-uid: 12
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 24
        mediafiles:
          items:
            $ref: '#/components/schemas/MediaFile'
          type: array
          x-field-uid: 13
        name:
          description: |-
            The name of the parameter.
          type: string
          x-field-uid: 15
        paramid:
          description: |-
            The id of the parameter.
          type: string
          x-field-uid: 16
        readonly:
          type: boolean
          x-field-uid: 17
        source:
          description: |-
            The source of the parameter.
          type: string
          x-field-uid: 18
        supportedsources:
          description: |-
            A list that indicates possible sources for the parameter
          items:
            type: string
          type: array
          x-field-uid: 19
        supportsdynamicpayload:
          description: |-
            A value that indicates if the parameter can have dynamic payload.
          type: boolean
          x-field-uid: 25
        type:
          description: |-
            The type of the parameter.
          type: string
          x-field-uid: 20
        uploadurl:
          description: |-
            The URL where the file parameter content could be uploaded.
          type: string
          x-field-uid: 26
        value:
          description: |-
            The value of the parameter.
          type: string
          x-field-uid: 21
      required:
      - id
      type: object
    Params.Arrayelements:
      properties:
        additionalproperties:
          type: string
          x-field-uid: 1
      type: object
    Params.Dictionaryvalue:
      properties:
        additionalproperties:
          type: string
          x-field-uid: 1
      type: object
    Params.Enum_property:
      properties:
        choices:
          items:
            $ref: '#/components/schemas/Choice'
          type: array
          x-field-uid: 1
      type: object
    FileValue:
      properties:
        filename:
          description: |-
            The name of the file.
          type: string
          x-field-uid: 1
        payload:
          description: |-
            The payload value of the file.
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 2
        resourceurl:
          description: |-
            The resource URL of the file.
          type: string
          x-field-uid: 3
        value:
          description: |-
            Selected column name of the file (playlist type).
          type: string
          x-field-uid: 4
      type: object
    ID:
      type: string
    APILink:
      properties:
        contenttype:
          type: string
          x-field-uid: 1
        href:
          type: string
          x-field-uid: 2
        method:
          type: string
          x-field-uid: 3
        name:
          type: string
          x-field-uid: 4
        referencescount:
          type: integer
          x-field-uid: 5
        rel:
          type: string
          x-field-uid: 6
        type:
          type: string
          x-field-uid: 7
      type: object
    MediaFile:
      properties:
        filevalue:
          $ref: '#/components/schemas/FileValue'
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
        mediatracks:
          items:
            $ref: '#/components/schemas/MediaTrack'
          type: array
          x-field-uid: 2
      type: object
    MediaTrack:
      properties:
        bitrate:
          type: integer
          x-field-uid: 1
        bitratekbps:
          type: integer
          x-field-uid: 2
        codec:
          type: string
          x-field-uid: 3
        codecdescription:
          type: string
          x-field-uid: 4
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 7
        trackid:
          type: string
          x-field-uid: 5
        tracktype:
          $ref: '#/components/schemas/TrackType'
          x-field-uid: 6
      required:
      - id
      - trackid
      - tracktype
      type: object
    TrackType:
      type: string
      x-enum:
        AUDIO:
          x-field-uid: 2
        VIDEO:
          x-field-uid: 1
    Choice:
      properties:
        description:
          type: string
          x-field-uid: 1
        hidden:
          default: false
          type: boolean
          x-field-uid: 2
        name:
          type: string
          x-field-uid: 3
        value:
          type: string
          x-field-uid: 4
      type: object
    ConnectionPersistence:
      type: string
      x-enum:
        ConnectionPersistenceDisabled:
          x-field-uid: 3
        ConnectionPersistenceEnabled:
          x-field-uid: 2
        ConnectionPersistenceStandard:
          x-field-uid: 1
    HTTPVersion:
      type: string
      x-enum:
        HTTP10:
          x-field-uid: 2
        HTTP11:
          x-field-uid: 1
        HTTP20:
          x-field-uid: 3
    TLSProfile:
      properties:
        certificatefile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultCertificateFile)
          description: |-
            The certificate file of the TLS profile.
          x-field-uid: 1
        cipher:
          $ref: '#/components/schemas/CipherTLS12'
          x-field-uid: 2
        cipher12:
          $ref: '#/components/schemas/CipherTLS12'
          x-field-uid: 3
        cipher13:
          $ref: '#/components/schemas/CipherTLS13'
          x-field-uid: 4
        ciphers12:
          items:
            $ref: '#/components/schemas/CipherTLS12'
          type: array
          x-field-uid: 5
        ciphers13:
          items:
            $ref: '#/components/schemas/CipherTLS13'
          type: array
          x-field-uid: 6
        dhfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultDhFile)
          x-field-uid: 7
        get_tls_conflicts:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 8
        immediateclose:
          default: false
          description: |-
            The immediate FIN after close notify
          type: boolean
          x-field-uid: 9
        keyfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultKeyFile)
          description: |-
            The key file of the TLS profile.
          x-field-uid: 10
        keyfilepassword:
          default: appsec
          description: |-
            The key file password of the TLS profile.
          type: string
          x-field-uid: 11
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 12
        middleboxenabled:
          default: true
          description: |-
            If true, the middle box compatibility will be enabled
          type: boolean
          x-field-uid: 13
        profileid:
          description: |-
            The ID of the TLS profile (default: TLSProfile).
          type: string
          x-field-uid: 14
        resolve_tls_conflicts:
          items:
            $ref: '#/components/schemas/Conflict'
          type: array
          x-field-uid: 15
        sendclosenotify:
          default: true
          description: |-
            If true, a TLS close-notify alert will be sent while closing the TLS session
          type: boolean
          x-field-uid: 16
        sessionreusecount:
          default: 0
          type: integer
          x-field-uid: 17
        sessionreusemethod:
          $ref: '#/components/schemas/SessionReuseMethodTLS12'
          x-field-uid: 18
        sessionreusemethod12:
          $ref: '#/components/schemas/SessionReuseMethodTLS12'
          x-field-uid: 19
        sessionreusemethod13:
          $ref: '#/components/schemas/SessionReuseMethodTLS13'
          x-field-uid: 20
        snicertconfigs:
          description: |-
            The certificate configs per SNI of the TLS profile.
          items:
            $ref: '#/components/schemas/CertConfig'
          type: array
          x-field-uid: 21
        snienabled:
          description: |-
            The enable status of the SNI configuration (default: false).
          type: boolean
          x-field-uid: 22
        supportedgroups13:
          items:
            $ref: '#/components/schemas/SupportedGroupTLS13'
          type: array
          x-field-uid: 23
        tls12enabled:
          type: boolean
          x-field-uid: 24
        tls13enabled:
          type: boolean
          x-field-uid: 25
        usetlsprofile:
          default: true
          description: |-
            When disabled, the connection is not TLS secured (default: true).
          type: boolean
          x-field-uid: 26
        version:
          description: |-
            The version of the TLS profile (default: NONE). Must be one of: NONE or TLSv1.2 or TLSv1.3.
          type: string
          x-enum:
            v10:
              x-field-uid: 1
            v20:
              x-field-uid: 2
            v30:
              x-field-uid: 3
          x-field-uid: 27
          enum:
          - v10
          - v20
          - v30
      required:
      - profileid
      - version
      - snienabled
      - tls12enabled
      type: object
    CipherTLS12:
      description: |-
        The cipher of the TLS profile (default: AES256-GCM-SHA384).
      type: string
      x-enum:
        v10:
          x-field-uid: 1
        v100:
          x-field-uid: 10
        v110:
          x-field-uid: 11
        v120:
          x-field-uid: 12
        v130:
          x-field-uid: 13
        v140:
          x-field-uid: 14
        v150:
          x-field-uid: 15
        v160:
          x-field-uid: 16
        v170:
          x-field-uid: 17
        v180:
          x-field-uid: 18
        v190:
          x-field-uid: 19
        v20:
          x-field-uid: 2
        v200:
          x-field-uid: 20
        v210:
          x-field-uid: 21
        v220:
          x-field-uid: 22
        v30:
          x-field-uid: 3
        v40:
          x-field-uid: 4
        v50:
          x-field-uid: 5
        v60:
          x-field-uid: 6
        v70:
          x-field-uid: 7
        v80:
          x-field-uid: 8
        v90:
          x-field-uid: 9
    CipherTLS13:
      description: |-
        The cipher of the TLSv1.3 profile (default: AES-256-GCM-SHA384).
      type: string
      x-enum:
        v10:
          x-field-uid: 1
        v20:
          x-field-uid: 2
        v30:
          x-field-uid: 3
    Conflict:
      properties:
        name:
          type: string
          x-field-uid: 1
        pathtotarget:
          type: string
          x-field-uid: 2
        pathvars:
          $ref: '#/components/schemas/Conflict.Pathvars'
          x-field-uid: 3
      required:
      - name
      - pathtotarget
      - pathvars
      type: object
    Conflict.Pathvars:
      properties:
        additionalproperties:
          type: string
          x-field-uid: 1
      type: object
    SessionReuseMethodTLS12:
      description: |-
        The session reuse method. Must be one of: DISABLE, SESSION-TICKET or SESSION-ID (default: DISABLE).
      type: string
      x-enum:
        DISABLE:
          x-field-uid: 1
        v10:
          x-field-uid: 2
        v20:
          x-field-uid: 3
    SessionReuseMethodTLS13:
      description: |-
        The session reuse method. Must be DISABLE (default: DISABLE).
      type: string
      x-enum:
        DISABLE:
          x-field-uid: 1
    CertConfig:
      properties:
        certificatefile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultCertificateFile)
          description: |-
            The certificate file of the TLS profile.
          x-field-uid: 1
        dhfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultDhFile)
          x-field-uid: 2
        get_sni_conflicts:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 3
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 4
        isplaylist:
          default: false
          type: boolean
          x-field-uid: 5
        keyfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultKeyFile)
          description: |-
            The key file of the TLS profile.
          x-field-uid: 6
        keyfilepassword:
          default: appsec
          description: |-
            The key file password of the TLS profile.
          type: string
          x-field-uid: 7
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 8
        playlistcolumnname:
          type: string
          x-field-uid: 9
        playlistfilename:
          type: string
          x-field-uid: 10
        resolve_sni_conflicts:
          items:
            $ref: '#/components/schemas/Conflict'
          type: array
          x-field-uid: 11
        snihostname:
          description: |-
            The SNI hostname associated with the certificate. (default: generic.keysight.io).
          type: string
          x-field-uid: 12
      required:
      - snihostname
      - id
      type: object
    SupportedGroupTLS13:
      description: |-
        The TLSv1.3 supported groups (default: P-256).
      type: string
      x-enum:
        KYBER1024:
          x-field-uid: 12
        KYBER512:
          x-field-uid: 10
        KYBER768:
          x-field-uid: 8
        MLKEM1024:
          x-field-uid: 13
        MLKEM512:
          x-field-uid: 11
        MLKEM768:
          x-field-uid: 9
        P256_KYBER512:
          x-field-uid: 15
        P256_MLKEM512:
          x-field-uid: 20
        P256_MLKEM768:
          x-field-uid: 19
        P384_KYBER768:
          x-field-uid: 14
        P384_MLKEM1024:
          x-field-uid: 16
        P384_MLKEM768:
          x-field-uid: 18
        X25519_KYBER512:
          x-field-uid: 5
        X25519_KYBER768:
          x-field-uid: 4
        X25519_MLKEM512:
          x-field-uid: 6
        X25519_MLKEM768:
          x-field-uid: 7
        X448_MLKEM768:
          x-field-uid: 17
        v10:
          x-field-uid: 1
        v20:
          x-field-uid: 2
        v30:
          x-field-uid: 3
    Connection:
      properties:
        clientendpoint:
          description: |-
            The client endpoint of the connection.
          type: string
          x-field-uid: 1
        clientport:
          description: |-
            The client port of the connection (default: 80).
          format: int32
          type: integer
          x-field-uid: 2
        closingend:
          type: string
          x-field-uid: 3
        disableencryption:
          default: false
          description: |-
            If true, the connection will be unencrypted regardless of other TLS settings.
          type: boolean
          x-field-uid: 4
        hostname:
          default: generic.keysight.io
          description: |-
            The hostname associated with the connection. (default: generic.keysight.io).
          type: string
          x-field-uid: 5
        hostnameparam:
          $ref: '#/components/schemas/Params'
          description: |-
            The hostname associated with the connection. (default: generic.keysight.io).
          x-field-uid: 6
        httpforwardproxymode:
          default: INHERIT_DUT
          description: |-
            Deprecated. This is ignored and the proxy mode will be deduced from the connection type.
          type: string
          x-enum:
            INHERIT_DUT:
              x-field-uid: 1
            PROXY_MODE:
              x-field-uid: 2
            TUNNEL_MODE:
              x-field-uid: 3
          x-field-uid: 7
          enum:
          - INHERIT_DUT
          - PROXY_MODE
          - TUNNEL_MODE
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 19
        isdeprecated:
          default: false
          type: boolean
          x-field-uid: 8
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 20
        maxtransactions:
          description: |-
            The maximum number of transactions for this connection.
          format: int32
          type: integer
          x-field-uid: 9
        name:
          description: |-
            The name of the Connection.
          type: string
          x-field-uid: 10
        portsettings:
          $ref: '#/components/schemas/PortSettings'
          x-field-uid: 11
        readonly:
          default: false
          description: |-
            If true, the connection can't be modified by the user.
          type: boolean
          x-field-uid: 12
        readonlyhostname:
          default: false
          description: |-
            If true, the connection hostname will be readonly.
          type: boolean
          x-field-uid: 13
        readonlymaxtrans:
          description: |-
            If true, MaxTransactions will be readonly
          type: boolean
          x-field-uid: 14
        readonlytype:
          description: |-
            If true or missing, the type of the connection cannot be changed
          type: boolean
          x-field-uid: 15
        serverendpoint:
          description: |-
            The server endpoint of the connection.
          type: string
          x-field-uid: 16
        serverport:
          description: |-
            The server port of the connection (default: 80).
          format: int32
          type: integer
          x-field-uid: 17
        type:
          default: http
          type: string
          x-enum:
            http:
              x-field-uid: 1
            https:
              x-field-uid: 2
            ssl:
              x-field-uid: 6
            tcp:
              x-field-uid: 3
            tls:
              x-field-uid: 4
            udp:
              x-field-uid: 5
          x-field-uid: 18
          enum:
          - http
          - https
          - ssl
          - tcp
          - tls
          - udp
      required:
      - id
      - clientport
      - serverport
      - maxtransactions
      - clientendpoint
      type: object
    PortSettings:
      properties:
        automatic:
          type: boolean
          x-field-uid: 1
        automaticdestinationport:
          type: boolean
          x-field-uid: 2
        automaticforwardproxyport:
          type: boolean
          x-field-uid: 3
        destinationport:
          format: int32
          type: integer
          x-field-uid: 4
        effectiveports:
          $ref: '#/components/schemas/EffectivePorts'
          x-field-uid: 5
        forwardproxyport:
          format: int32
          type: integer
          x-field-uid: 6
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 9
        readonly:
          description: |-
            If true, the port can't be selected by the user
          type: boolean
          x-field-uid: 7
        serverlistenport:
          format: int32
          type: integer
          x-field-uid: 8
      required:
      - automatic
      - destinationport
      - automaticdestinationport
      - serverlistenport
      - automaticforwardproxyport
      - forwardproxyport
      type: object
    EffectivePorts:
      properties:
        effectivedestinationport:
          type: string
          x-field-uid: 1
        effectiveforwardproxyport:
          type: string
          x-field-uid: 2
        effectiveserverport:
          type: string
          x-field-uid: 3
      required:
      - effectivedestinationport
      - effectiveserverport
      type: object
    Endpoint:
      properties:
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        name:
          type: string
          x-field-uid: 1
        networkmapping:
          $ref: '#/components/schemas/NetworkMapping'
          description: |-
            The per-endpoint network mapping. Depending on Endpoint type, only ClientNetworkTags or ServerNetworkTags will be used.
          x-field-uid: 2
        type:
          type: string
          x-enum:
            Client:
              x-field-uid: 1
            Server:
              x-field-uid: 2
          x-field-uid: 3
          enum:
          - Client
          - Server
      required:
      - id
      - name
      - type
      type: object
    NetworkMapping:
      properties:
        clientnetworktags:
          description: |-
            A list of tags of Network Segments which serve as clients. (default: Client)
          items:
            type: string
          type: array
          x-field-uid: 1
        excludeddutlist:
          description: |-
            A list of DUTs that are excluded from client-server network connections.
          items:
            type: string
          type: array
          x-field-uid: 2
        servernetworktags:
          description: |-
            A list of tags of Network Segments which serve as servers. (default: Server)
          items:
            type: string
          type: array
          x-field-uid: 3
      required:
      - clientnetworktags
      - servernetworktags
      type: object
    IpPreference:
      type: string
      x-enum:
        BOTH_IPV4_FIRST:
          x-field-uid: 3
        BOTH_IPV6_FIRST:
          x-field-uid: 4
        IPV4_ONLY:
          x-field-uid: 1
        IPV6_ONLY:
          x-field-uid: 2
        IP_PREF_MAX:
          x-field-uid: 5
    UpdateNetworkMapping:
      properties:
        clientnetworktags:
          items:
            type: string
          type: array
          x-field-uid: 1
        excludeddutlist:
          items:
            type: string
          type: array
          x-field-uid: 2
        selecttags:
          type: boolean
          x-field-uid: 3
        servernetworktags:
          items:
            type: string
          type: array
          x-field-uid: 4
      type: object
    Name:
      pattern: ^$|^[^"\\]+$
      type: string
    AttackTrack:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/AttackAction'
          type: array
          x-field-uid: 1
        add_actions:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 2
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
      required:
      - id
      type: object
    AttackAction:
      items:
        $ref: '#/components/schemas/ActionBase'
      type: object
    ActionBase:
      properties:
        dsthost:
          $ref: '#/components/schemas/Host'
          description: |-
            The destination host of the action.
          x-field-uid: 1
        exchanges:
          items:
            $ref: '#/components/schemas/Exchange'
          type: array
          x-field-uid: 2
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 13
        index:
          description: |-
            The index of the action.
          format: int32
          type: integer
          x-field-uid: 3
        isbanner:
          description: |-
            Indicates if this is a required action, can only be add once and also must be the first
          type: boolean
          x-field-uid: 4
        isdeprecated:
          description: |-
            A value that indicates if the action is deprecated.
          type: boolean
          x-field-uid: 5
        ishostname:
          format: int32
          type: integer
          x-field-uid: 6
        isstrike:
          description: |-
            A value that indicates if the action is a strike.
          type: boolean
          x-field-uid: 7
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 14
        name:
          description: |-
            The name of the action.
          type: string
          x-field-uid: 8
        params:
          items:
            $ref: '#/components/schemas/Params'
          type: array
          x-field-uid: 9
        port:
          description: |-
            The port of the destination host.
          format: int32
          type: integer
          x-field-uid: 10
        protocolid:
          type: string
          x-field-uid: 11
        requiresuniqueness:
          description: |-
            If true, for applications with the same protocol id, application/attack must have been uniquely identified in previous commands.
          type: boolean
          x-field-uid: 12
      type: object
    Host:
      pattern: ^$|^(([a-zA-Z0-9\-]*[a-zA-Z0-9])\.)+([A-Za-z|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$
      type: string
    Exchange:
      properties:
        clientendpoint:
          description: |-
            The client's endpoint for exchange.
          type: string
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 4
        name:
          description: |-
            The name of the exchange.
          type: string
          x-field-uid: 2
        serverendpoint:
          description: |-
            The server's endpoint for exchange.
          type: string
          x-field-uid: 3
      required:
      - id
      type: object
    AttackObjectivesAndTimeline:
      properties:
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 2
        timelinesegments:
          default: items(1)
          items:
            $ref: '#/components/schemas/AttackTimelineSegment'
          type: array
          x-field-uid: 1
      type: object
    AttackTimelineSegment:
      properties:
        attackrate:
          description: |-
            The attack rate of the attack (default: 1).
          format: int64
          type: integer
          x-field-uid: 1
        connectiongracefulstoptimeout:
          default: 120
          description: |-
            The time the test will wait all connections to be graceful stopped (default: 15 seconds).
          format: int64
          type: integer
          x-field-uid: 2
        duration:
          x-field-uid: 5
          description: |-
            The duration of the timeline segment (default: 600).
          format: int64
          type: integer
        id:
          x-field-uid: 8
          $ref: '#/components/schemas/ID'
        iterationcount:
          default: 1
          description: |-
            The number of iterations to run (default: 1).
          format: int64
          type: integer
          x-field-uid: 3
        maxconcurrentattack:
          description: |-
            The maximum number of concurrent attacks (default: 1).
          format: int64
          type: integer
          x-field-uid: 4
        segmenttype:
          x-field-uid: 6
          $ref: '#/components/schemas/SegmentType'
          description: |-
            The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
        warmupperiod:
          x-field-uid: 7
          default: 0
          description: |-
            Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need to warm up, when clients should wait (default: 0 seconds).
          format: int64
          type: integer
      required:
      - maxconcurrentattack
      - attackrate
      type: object
    SegmentType:
      description: |-
        The type of timeline segment. Empty, NormalSegment, RampDownSegment and IdleSegment are deprecated.
      type: string
      x-enum:
        IdleSegment:
          x-field-uid: 6
        NormalSegment:
          x-field-uid: 4
        RampDownSegment:
          x-field-uid: 5
        SteadySegment:
          x-field-uid: 1
        StepDownSegment:
          x-field-uid: 3
        StepUpSegment:
          x-field-uid: 2
    TrafficSettings:
      properties:
        defaulttransportprofile:
          $ref: '#/components/schemas/TransportProfile'
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 2
      type: object
    TransportProfile:
      properties:
        clienthttpprofile:
          x-field-uid: 2
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The client HTTP profile used in the Scenario.
        clienttcpprofile:
          x-field-uid: 4
          $ref: '#/components/schemas/TcpProfile'
        clienttlsprofile:
          x-field-uid: 3
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfile)
        iptos:
          x-field-uid: 5
          default: 0
          format: int32
          type: integer
        l4profilename:
          type: string
          x-field-uid: 1
        links:
          x-field-uid: 12
          items:
            $ref: '#/components/schemas/APILink'
          type: array
        rtpprofile:
          x-field-uid: 6
          $ref: '#/components/schemas/RTPProfile'
          default: method(GetDefaultRTPProfile)
        serverhttpprofile:
          x-field-uid: 7
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The server HTTP profile used in the Scenario.
        servertcpprofile:
          x-field-uid: 9
          $ref: '#/components/schemas/TcpProfile'
        servertlsprofile:
          x-field-uid: 8
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultServerTlsProfile)
        udpprofile:
          x-field-uid: 10
          $ref: '#/components/schemas/UdpProfile'
        vlanprio:
          x-field-uid: 11
          default: 0
          format: int32
          type: integer
      required:
      - l4profilename
      type: object
    TcpProfile:
      properties:
        closewithreset:
          default: false
          type: boolean
          x-field-uid: 1
        deferaccept:
          default: true
          type: boolean
          x-field-uid: 2
        ecnenabled:
          default: false
          type: boolean
          x-field-uid: 3
        maxrto:
          format: int32
          type: integer
          x-field-uid: 4
        maxsrcport:
          format: int32
          type: integer
          x-field-uid: 5
        minrto:
          format: int32
          type: integer
          x-field-uid: 6
        minsrcport:
          format: int32
          type: integer
          x-field-uid: 7
        pingpong:
          default: true
          type: boolean
          x-field-uid: 8
        pmtudiscdisabled:
          default: false
          type: boolean
          x-field-uid: 9
        recycletwenabled:
          default: true
          type: boolean
          x-field-uid: 10
        reordering:
          default: false
          type: boolean
          x-field-uid: 11
        reusetwenabled:
          default: true
          type: boolean
          x-field-uid: 12
        rxbuffer:
          format: int32
          type: integer
          x-field-uid: 13
        sackenabled:
          default: false
          type: boolean
          x-field-uid: 14
        sockgroup:
          default: appsim_group
          type: string
          x-field-uid: 15
        timestamphdrenabled:
          default: true
          type: boolean
          x-field-uid: 16
        txbuffer:
          format: int32
          type: integer
          x-field-uid: 17
        usermss:
          default: 1460
          format: int32
          type: integer
          x-field-uid: 18
        wscaleenabled:
          default: false
          type: boolean
          x-field-uid: 19
      required:
      - txbuffer
      - rxbuffer
      - minsrcport
      - maxsrcport
      - minrto
      - maxrto
    RTPProfile:
      properties:
        encryptionmode:
          $ref: '#/components/schemas/RTPEncryptionMode'
          x-field-uid: 1
        mosmode:
          $ref: '#/components/schemas/MosMode'
          x-field-uid: 2
        profileid:
          description: |-
            The ID of the RTP profile (default: VoiceProfile).
          type: string
          x-field-uid: 3
      required:
      - profileid
      - mosmode
      - encryptionmode
    RTPEncryptionMode:
      type: string
      x-enum:
        PLAINTEXT:
          x-field-uid: 2
        ZOOM:
          x-field-uid: 1
    MosMode:
      type: string
      x-enum:
        DISABLED:
          x-field-uid: 1
        PER_CALL:
          x-field-uid: 3
        PER_INTERVAL:
          x-field-uid: 2
    UdpProfile:
      properties:
        maxsrcport:
          default: 65535
          format: int32
          type: integer
          x-field-uid: 1
        minsrcport:
          default: 1024
          format: int32
          type: integer
          x-field-uid: 2
        recvbuffsizeini:
          default: 32768
          format: int32
          type: integer
          x-field-uid: 3
        recvbuffsizeres:
          default: 32768
          format: int32
          type: integer
          x-field-uid: 4
        rxbuffer:
          default: 32768
          format: int32
          type: integer
          x-field-uid: 5
        sockgroup:
          default: appsim_group
          type: string
          x-field-uid: 6
        txbuffer:
          default: 32768
          format: int32
          type: integer
          x-field-uid: 7
    ConfigValidation:
      properties:
        isvalidated:
          type: boolean
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
        validationmessages:
          items:
            $ref: '#/components/schemas/ValidationMessage'
          type: array
          x-field-uid: 2
      required:
      - isvalidated
      type: object
    ValidationMessage:
      properties:
        message:
          type: string
          x-field-uid: 1
        severity:
          type: string
          x-enum:
            ERROR:
              x-field-uid: 2
            WARNING:
              x-field-uid: 1
          x-field-uid: 2
          enum:
          - ERROR
          - WARNING
      required:
      - message
      - severity
      type: object
    CustomDashboards:
      properties:
        active:
          description: |-
            Indicates whether the custom dashboards are enabled or not.
          type: boolean
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
      required:
      - active
      type: object
    NetworkProfile:
      description: |-
        The networks assigned to the current test configuration
      properties:
        dutnetworksegment:
          items:
            $ref: '#/components/schemas/DUTNetwork'
          type: array
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 3
        ipnetworksegment:
          items:
            $ref: '#/components/schemas/IPNetwork'
          type: array
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
      required:
      - id
      type: object
    DUTNetwork:
      description: |-
        The configuration for DUT
      properties:
        active:
          default: false
          description: |-
            A flag indicating if the server DUT is an active device. If it is, the simulated clients or client DUT(if active) will send traffic to the DUT 'host'; and the simulated servers will use the healtcheck configurations. (default: false)
          type: boolean
          x-field-uid: 21
        clientdutactive:
          default: false
          type: boolean
          x-description: 'A flag indicating if the client DUT is an active device.
            If it is, the simulated clients will send traffic to the client DUT ''host''.
            (default: false)'
          x-field-uid: 1
        clientduthost:
          $ref: '#/components/schemas/Host'
          x-description: The hostname where the traffic goes if client DUT is active.
          x-field-uid: 2
        clientdutport:
          default: 80
          description: |-
            The listen port for client-side DUT (default: 80).
          format: int32
          type: integer
          x-field-uid: 3
        configsettings:
          default: SIMPLE_MODE
          type: string
          x-enum:
            ADVANCED_MODE:
              x-field-uid: 2
            SIMPLE_MODE:
              x-field-uid: 1
          x-field-uid: 4
          enum:
          - ADVANCED_MODE
          - SIMPLE_MODE
        forwardproxypepdut:
          $ref: '#/components/schemas/PepDUT'
          default: method(GetDefaultPEPDut)
          x-field-uid: 5
        forwardproxypepdutactive:
          default: false
          description: |-
            A flag indicating if the PEP device is an active device. If active, the simulated clients will send traffic to the PEP device host. (default: false)
          type: boolean
          x-field-uid: 6
        host:
          $ref: '#/components/schemas/Host'
          description: |-
            The hostname where the traffic goes if server DUT is active.
          x-field-uid: 22
        hostnamesuffix:
          $ref: '#/components/schemas/Host'
          description: |-
            A suffix to be added to the Host header of all Apps/Attacks running through the forward proxy DUT (default: empty string).
          x-field-uid: 9
        httpforwardproxymode:
          default: PROXY_MODE
          description: |-
            Deprecated. This is ignored and the proxy mode will be deduced from the connection type.
          type: string
          x-enum:
            PROXY_MODE:
              x-field-uid: 1
            TUNNEL_MODE:
              x-field-uid: 2
          x-field-uid: 10
          enum:
          - PROXY_MODE
          - TUNNEL_MODE
        httphealthcheck:
          $ref: '#/components/schemas/HealthCheckConfig'
          description: |-
            The HTTP HealthCheck configuration for DUT
          x-field-uid: 7
        httpshealthcheck:
          $ref: '#/components/schemas/HealthCheckConfig'
          description: |-
            The HTTPS HealthCheck configuration for DUT
          x-field-uid: 8
        id:
          x-field-uid: 25
          $ref: '#/components/schemas/ID'
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 23
        name:
          x-field-uid: 24
          $ref: '#/components/schemas/Name'
        networktags:
          x-field-uid: 26
          $ref: '#/components/schemas/TagList'
        nonproxiedhosts:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultNonProxiedHosts)
          x-field-uid: 11
        pepdut:
          $ref: '#/components/schemas/PepDUT'
          default: method(GetDefaultPEPDut)
          x-field-uid: 12
        pepdutactive:
          default: false
          description: |-
            A flag indicating if the PEP device is an active device. If active, the simulated clients will send traffic to the PEP device host. (default: false)
          type: boolean
          x-field-uid: 13
        reverseproxypepdut:
          $ref: '#/components/schemas/PepDUT'
          default: method(GetDefaultPEPDut)
          x-field-uid: 14
        reverseproxypepdutactive:
          default: false
          description: |-
            A flag indicating if the PEP device is an active device. If active, the simulated clients will send traffic to the PEP device host. (default: false)
          type: boolean
          x-field-uid: 15
        serverdutactive:
          default: false
          description: |-
            A flag indicating if the server DUT is an active device. If it is, the simulated clients or client DUT(if active) will send traffic to the server DUT 'host'; and the simulated servers will use the healtcheck configurations. (default: false)
          type: boolean
          x-field-uid: 16
        serverduthost:
          $ref: '#/components/schemas/Host'
          description: |-
            The hostname where the traffic goes if server DUT is active.
          x-field-uid: 17
        serverdutport:
          description: |-
            The listen port for server-side DUT
          format: int32
          type: integer
          x-field-uid: 18
        tcphealthcheck:
          $ref: '#/components/schemas/HealthCheckConfig'
          description: |-
            The TCP HealthCheck configuration for DUT
          x-field-uid: 19
        userealhost:
          default: false
          description: |-
            A flag indicating if tunneled hostname should use real domain names.
          type: boolean
          x-field-uid: 20
      type: object
    PepDUT:
      description: |-
        The Policy Enforcement Point (PEP) device under test (also known as Zero Trust device)
      properties:
        authmethod:
          $ref: '#/components/schemas/Params'
          x-field-uid: 1
        authprofileparams:
          items:
            $ref: '#/components/schemas/Params'
          type: array
          x-field-uid: 2
        authprofiletype:
          type: string
          x-field-uid: 3
        hostnamesuffix:
          $ref: '#/components/schemas/Host'
          description: |-
            A suffix to be added to the Host header of all Apps/Attacks running through the DUT (default: empty string).
          x-field-uid: 4
        idptype:
          $ref: '#/components/schemas/Params'
          x-field-uid: 5
        isexplicitproxy:
          description: |-
            A flag indicating if PEP for the selected authentication profile is an explicit proxy
          type: boolean
          x-field-uid: 6
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 10
        pephost:
          $ref: '#/components/schemas/Host'
          description: |-
            The hostname where the traffic goes if PEP device is active.
          x-field-uid: 7
        pepport:
          default: 443
          description: |-
            The listen port for PEP DUT (default: 443).
          format: int32
          type: integer
          x-field-uid: 8
        simulatedidp:
          $ref: '#/components/schemas/SimulatedIdP'
          default: method(GetDefaultSimulatedIDP)
          x-field-uid: 9
      type: object
    SimulatedIdP:
      properties:
        assertionsignature:
          type: boolean
          x-default: default(true)
          x-field-uid: 1
        audienceuri:
          type: string
          x-field-uid: 2
        certconfig:
          $ref: '#/components/schemas/CertConfig'
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 9
        nameidformat:
          $ref: '#/components/schemas/NameIdFormat'
          x-field-uid: 4
        responsesignature:
          type: boolean
          x-default: default(true)
          x-field-uid: 5
        signaturealgorithm:
          $ref: '#/components/schemas/IdPSignatureAlgo'
          x-field-uid: 6
        singlesignonurl:
          type: string
          x-field-uid: 7
        xmlmetadata:
          format: binary
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 8
      required:
      - singlesignonurl
      - audienceuri
      - nameidformat
      - responsesignature
      - assertionsignature
      type: object
    NameIdFormat:
      type: string
      x-default: default(emailAddress)
      x-enum:
        emailAddress:
          x-field-uid: 1
    IdPSignatureAlgo:
      type: string
      x-default: default(SHA256_SIGN)
      x-enum:
        SHA1_SIGN:
          x-field-uid: 2
        SHA256_SIGN:
          x-field-uid: 1
    HealthCheckConfig:
      description: |-
        The HealthCheck configuration for DUT
      properties:
        enabled:
          default: true
          description: |-
            A flag indicating if the servers should listen for HealthCheck requests (default: true).
          type: boolean
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
        params:
          description: |-
            A list of additional parameters for the HealthCheck.
          items:
            $ref: '#/components/schemas/Params'
          type: array
          x-field-uid: 2
        port:
          default: 80
          description: |-
            The port that the DUT will send HealthCheck requests to the simulated servers. (default: 80)
          format: int32
          type: integer
          x-field-uid: 3
      type: object
    TagList:
      description: |-
        A list of tags.
      items:
        type: string
      type: array
    IPNetwork:
      description: |-
        The IP network configuration
      properties:
        active:
          default: true
          description: |-
            A flag indicating if the network segment is active.(default: true)
          type: boolean
          x-field-uid: 10
        agentassignments:
          $ref: '#/components/schemas/AgentAssignments'
          x-field-uid: 11
        dnsresolver:
          $ref: '#/components/schemas/DNSResolver'
          x-field-uid: 1
        dnsserver:
          $ref: '#/components/schemas/DNSServer'
          default: method(GetDefaultDNSServer)
          description: |-
            The DNS Server configuration for Network Segment
          x-field-uid: 2
        dutconnections:
          description: |-
            The connected DUT network segments.
          items:
            type: string
          type: array
          x-field-uid: 3
        emulatedrouter:
          $ref: '#/components/schemas/EmulatedRouter'
          x-field-uid: 4
        ethrange:
          $ref: '#/components/schemas/EthRange'
          default: method(GetDefaultEthRange)
          x-field-uid: 5
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 12
        ipranges:
          default: items(1)
          items:
            $ref: '#/components/schemas/IPRange'
          type: array
          x-field-uid: 6
        ipsecstacks:
          default: items(0)
          items:
            $ref: '#/components/schemas/IPSecStack'
          type: array
          x-field-uid: 7
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 13
        macdtlsstacks:
          default: items(0)
          items:
            $ref: '#/components/schemas/MacDtlsStack'
          type: array
          x-field-uid: 8
        minagents:
          default: 1
          description: |-
            The minimum number of agents that should be assigned to this network segment in a valid test (default: 1).
          format: int32
          type: integer
          x-field-uid: 14
        name:
          x-field-uid: 15
          $ref: '#/components/schemas/Name'
        networktags:
          x-field-uid: 16
          $ref: '#/components/schemas/TagList'
        tunnelstacks:
          default: items(0)
          items:
            $ref: '#/components/schemas/TunnelStack'
          type: array
          x-field-uid: 9
      type: object
    AgentAssignments:
      description: |-
        The agents assigned to the current test configuration
      properties:
        byid:
          description: |-
            The agents statically assigned to the current test configuration.
          items:
            $ref: '#/components/schemas/AgentAssignmentDetails'
          type: array
          x-field-uid: 1
        byport:
          description: |-
            The ports assigned to the current test configuration.
          items:
            $ref: '#/components/schemas/AgentAssignmentByPort'
          type: array
          x-field-uid: 2
        bytag:
          description: |-
            The tags according to which the agents are dynamically assigned.
          items:
            type: string
          type: array
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
      required:
      - bytag
      type: object
    AgentAssignmentDetails:
      description: |-
        Details of an agent assignment by ID
      properties:
        agentid:
          description: |-
            The id of the agent that is assigned.
          type: string
          x-field-uid: 1
        capturesettings:
          $ref: '#/components/schemas/CaptureSettings'
          description: |-
            The capture settings of the agent that is assigned.
          x-field-uid: 2
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 3
        interfaces:
          description: |-
            The names of the assigned test interfaces for the agent.
          items:
            type: string
          type: array
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
      required:
      - id
      - agentid
      type: object
    CaptureSettings:
      description: |-
        The capture settings for an agent
      properties:
        captureenabled:
          description: |-
            The enable status of the capture configuration (default: false).
          type: boolean
          x-field-uid: 1
        capturelatestpackets:
          default: true
          description: |-
            Capture first or latest packets (true to enable latest packets capture).
          type: boolean
          x-field-uid: 2
        loglevel:
          $ref: '#/components/schemas/LogLevel'
          description: |-
            Log level options: NONE, ERROR, WARN, INFO, DEBUG, TRACE (default: INFO)
          x-field-uid: 3
        maxcapturesize:
          default: 104857600
          description: |-
            The maximum capture size in bytes (default: 104857600).
          format: int64
          type: integer
          x-field-uid: 4
      required:
      - captureenabled
      - loglevel
      type: object
    LogLevel:
      type: string
      x-enum:
        INFO:
          x-field-uid: 2
        TRACE:
          x-field-uid: 3
        v10:
          x-field-uid: 1
    AgentAssignmentByPort:
      description: |-
        Details of an agent assignment by port
      properties:
        capturesettings:
          $ref: '#/components/schemas/CaptureSettings'
          description: |-
            The capture settings of the port that is assigned.
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
        portid:
          description: |-
            The id of the port that is assigned.
          type: string
          x-field-uid: 4
      required:
      - id
      type: object
    DNSResolver:
      properties:
        cachetimeout:
          description: |-
            The cached timeout for the DNS Resolver
          format: int32
          type: integer
          x-field-uid: 1
        enableperconnect:
          description: |-
            The enable perconnection value.
          type: boolean
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
        nameservers:
          description: |-
            A list of name servers.
          items:
            $ref: '#/components/schemas/NameServer'
          type: array
          x-field-uid: 4
      type: object
    NameServer:
      properties:
        name:
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
          type: string
          x-field-uid: 1
      type: object
    DNSServer:
      properties:
        automatic:
          default: true
          description: |-
            A flag indicating if the DNS server should respond automatically with the test interface IP.
          type: boolean
          x-field-uid: 1
        enabled:
          description: |-
            A flag indicating if the servers should listen for DNS requests (default: false).
          type: boolean
          x-field-uid: 2
        iptoresolveto:
          description: |-
            The IP that will be returned for all queries
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 3
        port:
          description: |-
            The port that the DNS server should listen on. (default: 53)
          format: int32
          type: integer
          x-field-uid: 4
      required:
      - enabled
      - port
      type: object
    EmulatedRouter:
      properties:
        emulatedrouterranges:
          default: items(2)
          items:
            $ref: '#/components/schemas/EmulatedRouterRange'
          type: array
          x-field-uid: 1
        enabled:
          type: boolean
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
      required:
      - enabled
    EmulatedRouterRange:
      properties:
        automaticiptype:
          x-field-uid: 3
          $ref: '#/components/schemas/AutomaticIpType'
          default: ONLY_IPV4
          description: |-
            The automatic IP types, either 'ONLY_IPV4', 'ONLY_IPV6' or 'BOTH_IPV4_IPV6'.
        count:
          x-field-uid: 4
          default: 1
          description: |-
            The number of IPs generated (default: 1).
          format: int32
          type: integer
        gwauto:
          x-field-uid: 5
          description: |-
            A flag indicating if the gateway settings for the IPRange should be determined automatically (default: true).
          type: boolean
        gwstart:
          x-field-uid: 6
          default: 10.0.0.1
          description: |-
            The gateway start IP for the IPRange (default: 10.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
        hostcount:
          x-field-uid: 7
          default: 1
          description: |-
            The number of Host IPs generated (default: 1).
          format: int32
          type: integer
        id:
          x-field-uid: 17
          $ref: '#/components/schemas/ID'
        innervlanrange:
          x-field-uid: 8
          $ref: '#/components/schemas/VLANRange'
          default: method(GetDefaultVlanRange)
          description: |-
            The inner VLAN range assigned to the current IP range configuration
        ipauto:
          x-field-uid: 9
          description: |-
            A flag indicating if IP settings for the IPRange should be determined automatically (default: true).
          type: boolean
        ipincr:
          x-field-uid: 10
          default: 0.0.0.1
          description: |-
            The IP incrementation rule (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
        iprangename:
          x-field-uid: 11
          $ref: '#/components/schemas/Name'
        ipstart:
          x-field-uid: 12
          default: 10.0.0.10
          description: |-
            The start IP for the IPRange (default: 10.0.0.10).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
        ipver:
          x-field-uid: 13
          $ref: '#/components/schemas/IpVer'
          description: |-
            The type of the IP. 'IPV4' and 'IPV6' are both supported currently.
        isemulatedrouter:
          x-field-uid: 14
          default: false
          type: boolean
        links:
          x-field-uid: 18
          items:
            $ref: '#/components/schemas/APILink'
          type: array
        maxcountperagent:
          x-field-uid: 19
          default: 1
          description: |-
            The maximum number of IPs that should be assigned to each traffic agent for this IP range segment in a valid test (default: 1).
          format: int32
          type: integer
        mss:
          description: |-
            The maximum segment size of the TCP header.
          format: int32
          type: integer
          x-field-uid: 1
        mssauto:
          description: |-
            A flag indicating if Mss settings for the IPRange should be determined automatically (default: false).
          type: boolean
          x-field-uid: 2
        netmask:
          x-field-uid: 15
          default: 16
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
        netmaskauto:
          x-field-uid: 16
          description: |-
            A flag indicating if the network mask of the IPRange should be determined automatically (default: true).
          type: boolean
        networktags:
          x-field-uid: 20
          $ref: '#/components/schemas/TagList'
      required:
      - netmaskauto
      - mssauto
      - mss
      type: object
    AutomaticIpType:
      type: string
      x-enum:
        BOTH_IPV4_IPV6:
          x-field-uid: 1
        ONLY_IPV4:
          x-field-uid: 2
        ONLY_IPV6:
          x-field-uid: 3
    VLANRange:
      description: |-
        The VLAN range assigned to an IP range configuration
      properties:
        count:
          default: 1
          description: |-
            The number of VLANs generated (default: 1).
          format: int32
          type: integer
          x-field-uid: 1
        countperagent:
          default: 1
          description: |-
            The number of VLANs that should be assigned to each traffic agent for this VLAN range segment in a valid test (default: 1).
          format: int32
          type: integer
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 11
        maxcountperagent:
          default: 1
          description: |-
            The maximum number of VLANs that should be assigned to each traffic agent for this VLAN range segment in a valid test (default: 1).
          format: int32
          type: integer
          x-field-uid: 3
        priority:
          default: 0
          description: |-
            The priority code point value (default: 0).
          format: int32
          type: integer
          x-field-uid: 4
        staticarptable:
          items:
            $ref: '#/components/schemas/StaticARPEntry'
          type: array
          x-field-uid: 5
        tagprotocolid:
          default: 33024
          description: |-
            The tag protocol identifier (default: 33024).
          format: int32
          type: integer
          x-enum:
            '33024':
              x-field-uid: 1
          x-field-uid: 6
        vlanauto:
          description: |-
            A flag indicating if VLAN settings for the VLANRange should be determined automatically (default: false).
          type: boolean
          x-field-uid: 7
        vlanenabled:
          default: false
          description: |-
            The enable status of the VLAN configuration, if not determined automatically (default: false).
          type: boolean
          x-field-uid: 8
        vlanid:
          default: 1
          description: |-
            The VLAN identifier (default: 1).
          format: int32
          type: integer
          x-field-uid: 9
        vlanincr:
          default: 1
          description: |-
            The VLAN incrementation rule (default: 1).
          format: int32
          type: integer
          x-field-uid: 10
      required:
      - vlanauto
      type: object
    StaticARPEntry:
      properties:
        count:
          default: 1
          format: int32
          type: integer
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 7
        remoteip:
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        remoteipincr:
          default: 0.0.0.1
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 3
        remotemac:
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 4
        remotemacincr:
          default: 00:00:00:00:00:01
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 5
        staticarpentryname:
          $ref: '#/components/schemas/Name'
          x-field-uid: 6
      required:
      - id
      - staticarpentryname
      type: object
    IpVer:
      type: string
      x-enum:
        IPV4:
          x-field-uid: 1
        IPV6:
          x-field-uid: 2
    EthRange:
      description: |-
        The Ethernet Ranges assigned to the current test configuration
      properties:
        count:
          default: 10
          format: int32
          type: integer
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 7
        macauto:
          description: |-
            A flag indicating if the MAC address for the EthRange should be determined automatically (default: true).
          type: boolean
          x-field-uid: 2
        macincr:
          default: 00:00:00:00:00:01
          description: |-
            The MAC address increment rule for the EthRange (default: 00:00:00:00:00:01).
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 3
        macstart:
          default: 00:11:01:00:00:01
          description: |-
            The MAC start address for the EthRange (default: 00:11:01:00:00:01).
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 4
        maxcountperagent:
          description: |-
            The maximum number of MACs that should be assigned to each traffic agent for this Ethernet range segment in a valid test (default: 0, split equally between agents).
          format: int32
          type: integer
          x-field-uid: 8
        onemacperip:
          default: true
          description: |-
            A flag indicating if there is only one MAC address for the EthRange per IPRange (default: true).
          type: boolean
          x-field-uid: 5
        staticarptable:
          default: items(0)
          items:
            $ref: '#/components/schemas/StaticARPEntry'
          type: array
          x-field-uid: 6
      required:
      - macauto
    IPRange:
      description: |-
        The IP Ranges assigned to the current test configuration
      properties:
        automaticiptype:
          $ref: '#/components/schemas/AutomaticIpType'
          default: ONLY_IPV4
          description: |-
            The automatic IP types, either 'ONLY_IPV4', 'ONLY_IPV6' or 'BOTH_IPV4_IPV6'.
          x-field-uid: 1
        count:
          default: 1
          description: |-
            The number of IPs generated (default: 1).
          format: int32
          type: integer
          x-field-uid: 2
        gwauto:
          description: |-
            A flag indicating if the gateway settings for the IPRange should be determined automatically (default: true).
          type: boolean
          x-field-uid: 3
        gwstart:
          default: 10.0.0.1
          description: |-
            The gateway start IP for the IPRange (default: 10.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 4
        hostcount:
          default: 1
          description: |-
            The number of Host IPs generated (default: 1).
          format: int32
          type: integer
          x-field-uid: 5
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 17
        innervlanrange:
          $ref: '#/components/schemas/VLANRange'
          default: method(GetDefaultVlanRange)
          description: |-
            The inner VLAN range assigned to the current IP range configuration
          x-field-uid: 6
        ipauto:
          description: |-
            A flag indicating if IP settings for the IPRange should be determined automatically (default: true).
          type: boolean
          x-field-uid: 7
        ipincr:
          default: 0.0.0.1
          description: |-
            The IP incrementation rule (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 8
        iprangename:
          $ref: '#/components/schemas/Name'
          x-field-uid: 9
        ipstart:
          default: 10.0.0.10
          description: |-
            The start IP for the IPRange (default: 10.0.0.10).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 10
        ipver:
          $ref: '#/components/schemas/IpVer'
          description: |-
            The type of the IP. 'IPV4' and 'IPV6' are both supported currently.
          x-field-uid: 11
        isemulatedrouter:
          default: false
          type: boolean
          x-field-uid: 12
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 18
        maxcountperagent:
          default: 1
          description: |-
            The maximum number of IPs that should be assigned to each traffic agent for this IP range segment in a valid test (default: 1).
          format: int32
          type: integer
          x-field-uid: 19
        mss:
          default: 1460
          description: |-
            The maximum segment size of the TCP header.
          format: int32
          type: integer
          x-field-uid: 13
        mssauto:
          description: |-
            A flag indicating if Mss settings for the IPRange should be determined automatically (default: false).
          type: boolean
          x-field-uid: 14
        netmask:
          default: 16
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
          x-field-uid: 15
        netmaskauto:
          description: |-
            A flag indicating if the network mask of the IPRange should be determined automatically (default: true).
          type: boolean
          x-field-uid: 16
        networktags:
          $ref: '#/components/schemas/TagList'
          x-field-uid: 20
      required:
      - iprangename
      - ipauto
      - gwauto
      - netmaskauto
      - ipver
      - mssauto
      type: object
    IPSecStack:
      properties:
        cacertificatefile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultCACertificateFile)
          description: |-
            The authentication CA certificate file of the IPsec tunnel(s).
          x-field-uid: 1
        emulatedsubconfig:
          $ref: '#/components/schemas/EmulatedSubnetConfig'
          description: |-
            Deeprecated. Use LocalSubConfig instead.
          x-field-uid: 2
        enablerekey:
          type: boolean
          x-field-uid: 3
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 19
        ipsecrange:
          $ref: '#/components/schemas/IPSecRange'
          x-field-uid: 4
        ipsecstackname:
          $ref: '#/components/schemas/Name'
          x-field-uid: 5
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 20
        localsubconfig:
          $ref: '#/components/schemas/LocalSubnetConfig'
          x-field-uid: 6
        logkeys:
          type: boolean
          x-field-uid: 7
        maxinitiationrate:
          format: int32
          type: integer
          x-field-uid: 8
        maxpending:
          format: int32
          type: integer
          x-field-uid: 9
        outeriprange:
          $ref: '#/components/schemas/IPRange'
          x-field-uid: 10
        rekeymargin:
          format: int32
          type: integer
          x-field-uid: 11
        rekeyretrycount:
          format: int32
          type: integer
          x-field-uid: 12
        retransmissiontimeout:
          format: int32
          type: integer
          x-field-uid: 13
        retrycount:
          format: int32
          type: integer
          x-field-uid: 14
        retryinterval:
          default: 10
          format: int32
          type: integer
          x-field-uid: 15
        retryintervalincrement:
          default: 0
          format: int32
          type: integer
          x-field-uid: 16
        setuptimeout:
          format: int32
          type: integer
          x-field-uid: 17
        stackrole:
          type: string
          x-enum:
            INITIATOR:
              x-field-uid: 1
            RESPONDER:
              x-field-uid: 2
          x-field-uid: 18
          enum:
          - INITIATOR
          - RESPONDER
      required:
      - id
      - ipsecstackname
      - stackrole
      - maxinitiationrate
      - maxpending
      - enablerekey
      - rekeyretrycount
      - rekeymargin
      - logkeys
      - setuptimeout
      - retransmissiontimeout
      - retrycount
      type: object
    EmulatedSubnetConfig:
      description: |-
        The Inner IP Range assigned to the current test configuration
      properties:
        hostcountpertunnel:
          format: int32
          type: integer
          x-field-uid: 1
        hostsincrement:
          description: |-
            The IP incrementation rule (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        hostsprefix:
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
          x-field-uid: 3
        increment:
          description: |-
            The IP incrementation rule (default: 0.0.1.0).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 4
        networktags:
          $ref: '#/components/schemas/TagList'
          x-field-uid: 8
        prefix:
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
          x-field-uid: 5
        start:
          description: |-
            The start IP for the IPRange (default: 10.0.0.10).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 6
        totalhostcount:
          type: string
          x-field-uid: 7
      required:
      - start
      - increment
      - prefix
      - hostsprefix
      - hostsincrement
      - hostcountpertunnel
      - totalhostcount
      - networktags
      type: object
    IPSecRange:
      properties:
        authsettings:
          $ref: '#/components/schemas/AuthenticationSettings'
          x-field-uid: 1
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 14
        ikephase1config:
          $ref: '#/components/schemas/P1Config'
          x-field-uid: 2
        ikephase2config:
          $ref: '#/components/schemas/P2Config'
          x-field-uid: 3
        ipsecrangename:
          $ref: '#/components/schemas/Name'
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 15
        multip2overp1:
          default: false
          type: boolean
          x-field-uid: 5
        protectedsubconfig:
          $ref: '#/components/schemas/ProtectedSubnetConfig'
          description: |-
            Deeprecated. Use RemoteSubConfig instead.
          x-field-uid: 6
        publicpeer:
          pattern: ^$|(^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$)
          type: string
          x-field-uid: 7
        publicpeerincrement:
          pattern: ^$|(^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$)
          type: string
          x-field-uid: 8
        remoteaccess:
          $ref: '#/components/schemas/RemoteAccess'
          x-field-uid: 9
        remotesubconfig:
          $ref: '#/components/schemas/RemoteSubnetConfig'
          x-field-uid: 10
        testscenario:
          type: string
          x-enum:
            v10:
              x-field-uid: 1
            v20:
              x-field-uid: 2
          x-field-uid: 11
          enum:
          - v10
          - v20
        timers:
          $ref: '#/components/schemas/Timers'
          x-field-uid: 12
        tunnelcountperouterip:
          format: int32
          type: integer
          x-field-uid: 13
      required:
      - id
      - ipsecrangename
      - testscenario
      - publicpeer
      - publicpeerincrement
      - tunnelcountperouterip
      type: object
    AuthenticationSettings:
      properties:
        authmethod:
          default: PRE-SHARED-KEY
          type: string
          x-enum:
            CERTIFICATES:
              x-field-uid: 2
            v10:
              x-field-uid: 1
          x-field-uid: 1
          enum:
          - CERTIFICATES
          - v10
        certificatefile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultCertificateFile)
          description: |-
            The authentication certificate file of the IPsec tunnel(s).
          x-field-uid: 2
        keyfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultKeyFile)
          description: |-
            The authentication key file of the IPsec tunnel(s).
          x-field-uid: 3
        keyfilepassword:
          description: |-
            The key file password of the IPsec authentication.
          type: string
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        sharedkey:
          default: ipsec
          type: string
          x-field-uid: 5
      type: object
    P1Config:
      properties:
        dhgroup:
          $ref: '#/components/schemas/DhP1Group'
          x-field-uid: 1
        encalgorithm:
          $ref: '#/components/schemas/EncP1Algorithm'
          x-field-uid: 2
        hashalgorithm:
          $ref: '#/components/schemas/HashP1Algorithm'
          x-field-uid: 3
        initialcontact:
          type: boolean
          x-field-uid: 4
        lifetime:
          format: int32
          type: integer
          x-field-uid: 5
        prfalgorithm:
          $ref: '#/components/schemas/PrfP1Algorithm'
          x-field-uid: 6
      required:
      - lifetime
      - encalgorithm
      - hashalgorithm
      - dhgroup
      - prfalgorithm
      - initialcontact
      type: object
    DhP1Group:
      type: string
      x-enum:
        ECP 192:
          x-field-uid: 12
        ECP 224:
          x-field-uid: 13
        ECP 224 BP:
          x-field-uid: 17
        ECP 256:
          x-field-uid: 14
        ECP 256 BP:
          x-field-uid: 18
        ECP 384:
          x-field-uid: 15
        ECP 384 BP:
          x-field-uid: 19
        ECP 512 BP:
          x-field-uid: 20
        ECP 521:
          x-field-uid: 16
        MODP 1024:
          x-field-uid: 2
        MODP 1024 S160:
          x-field-uid: 9
        MODP 1536:
          x-field-uid: 3
        MODP 2048:
          x-field-uid: 4
        MODP 2048 S224:
          x-field-uid: 10
        MODP 2048 S256:
          x-field-uid: 11
        MODP 3072:
          x-field-uid: 5
        MODP 4096:
          x-field-uid: 6
        MODP 6144:
          x-field-uid: 7
        MODP 768:
          x-field-uid: 1
        MODP 8192:
          x-field-uid: 8
        v10:
          x-field-uid: 21
        v100:
          x-field-uid: 30
        v110:
          x-field-uid: 31
        v120:
          x-field-uid: 32
        v130:
          x-field-uid: 33
        v140:
          x-field-uid: 34
        v150:
          x-field-uid: 35
        v160:
          x-field-uid: 36
        v170:
          x-field-uid: 37
        v180:
          x-field-uid: 38
        v190:
          x-field-uid: 39
        v20:
          x-field-uid: 22
        v200:
          x-field-uid: 40
        v30:
          x-field-uid: 23
        v40:
          x-field-uid: 24
        v50:
          x-field-uid: 25
        v60:
          x-field-uid: 26
        v70:
          x-field-uid: 27
        v80:
          x-field-uid: 28
        v90:
          x-field-uid: 29
    EncP1Algorithm:
      type: string
      x-enum:
        AES128 CBC:
          x-field-uid: 3
        AES128 GCM ICV12:
          x-field-uid: 9
        AES128 GCM ICV16:
          x-field-uid: 12
        AES128 GCM ICV8:
          x-field-uid: 6
        AES192 CBC:
          x-field-uid: 4
        AES192 GCM ICV12:
          x-field-uid: 10
        AES192 GCM ICV16:
          x-field-uid: 13
        AES192 GCM ICV8:
          x-field-uid: 7
        AES256 CBC:
          x-field-uid: 5
        AES256 GCM ICV12:
          x-field-uid: 11
        AES256 GCM ICV16:
          x-field-uid: 14
        AES256 GCM ICV8:
          x-field-uid: 8
        DES CBC:
          x-field-uid: 1
        DES CBC3:
          x-field-uid: 2
        v10:
          x-field-uid: 15
        v100:
          x-field-uid: 24
        v110:
          x-field-uid: 25
        v120:
          x-field-uid: 26
        v130:
          x-field-uid: 27
        v140:
          x-field-uid: 28
        v20:
          x-field-uid: 16
        v30:
          x-field-uid: 17
        v40:
          x-field-uid: 18
        v50:
          x-field-uid: 19
        v60:
          x-field-uid: 20
        v70:
          x-field-uid: 21
        v80:
          x-field-uid: 22
        v90:
          x-field-uid: 23
    HashP1Algorithm:
      type: string
      x-enum:
        AES XCBC:
          x-field-uid: 3
        HMAC MD5:
          x-field-uid: 1
        HMAC SHA1:
          x-field-uid: 2
        HMAC SHA256:
          x-field-uid: 4
        HMAC SHA384:
          x-field-uid: 5
        HMAC SHA512:
          x-field-uid: 6
        v10:
          x-field-uid: 7
        v20:
          x-field-uid: 8
        v30:
          x-field-uid: 9
        v40:
          x-field-uid: 10
        v50:
          x-field-uid: 11
        v60:
          x-field-uid: 12
    PrfP1Algorithm:
      type: string
      x-enum:
        AES XCBC:
          x-field-uid: 3
        HMAC MD5:
          x-field-uid: 1
        HMAC SHA1:
          x-field-uid: 2
        HMAC SHA256:
          x-field-uid: 4
        HMAC SHA384:
          x-field-uid: 5
        HMAC SHA512:
          x-field-uid: 6
        v10:
          x-field-uid: 7
        v20:
          x-field-uid: 8
        v30:
          x-field-uid: 9
        v40:
          x-field-uid: 10
        v50:
          x-field-uid: 11
        v60:
          x-field-uid: 12
    P2Config:
      properties:
        encalgorithm:
          $ref: '#/components/schemas/EncP2Algorithm'
          x-field-uid: 1
        hashalgorithm:
          $ref: '#/components/schemas/HashP2Algorithm'
          x-field-uid: 2
        lifetime:
          format: int32
          type: integer
          x-field-uid: 3
        natenabled:
          type: boolean
          x-field-uid: 4
        pfsenabled:
          type: boolean
          x-field-uid: 5
        pfsgroup:
          $ref: '#/components/schemas/PfsP2Group'
          x-field-uid: 6
      required:
      - lifetime
      - encalgorithm
      - hashalgorithm
      - pfsenabled
      - pfsgroup
      - natenabled
      type: object
    EncP2Algorithm:
      type: string
      x-enum:
        AES128 CBC:
          x-field-uid: 2
        AES128 GCM ICV12:
          x-field-uid: 8
        AES128 GCM ICV16:
          x-field-uid: 11
        AES128 GCM ICV8:
          x-field-uid: 5
        AES192 CBC:
          x-field-uid: 3
        AES192 GCM ICV12:
          x-field-uid: 9
        AES192 GCM ICV16:
          x-field-uid: 12
        AES192 GCM ICV8:
          x-field-uid: 6
        AES256 CBC:
          x-field-uid: 4
        AES256 GCM ICV12:
          x-field-uid: 10
        AES256 GCM ICV16:
          x-field-uid: 13
        AES256 GCM ICV8:
          x-field-uid: 7
        v10:
          x-field-uid: 1
        v100:
          x-field-uid: 22
        v110:
          x-field-uid: 23
        v120:
          x-field-uid: 24
        v130:
          x-field-uid: 25
        v140:
          x-field-uid: 26
        v20:
          x-field-uid: 14
        v30:
          x-field-uid: 15
        v40:
          x-field-uid: 16
        v50:
          x-field-uid: 17
        v60:
          x-field-uid: 18
        v70:
          x-field-uid: 19
        v80:
          x-field-uid: 20
        v90:
          x-field-uid: 21
    HashP2Algorithm:
      type: string
      x-enum:
        HMAC MD5 96:
          x-field-uid: 1
        HMAC SHA1 96:
          x-field-uid: 2
        HMAC SHA256 128:
          x-field-uid: 3
        HMAC SHA384 192:
          x-field-uid: 4
        HMAC SHA512 256:
          x-field-uid: 5
        v10:
          x-field-uid: 6
        v20:
          x-field-uid: 7
        v30:
          x-field-uid: 8
        v40:
          x-field-uid: 9
        v50:
          x-field-uid: 10
    PfsP2Group:
      type: string
      x-enum:
        ECP 192:
          x-field-uid: 12
        ECP 224:
          x-field-uid: 13
        ECP 224 BP:
          x-field-uid: 17
        ECP 256:
          x-field-uid: 14
        ECP 256 BP:
          x-field-uid: 18
        ECP 384:
          x-field-uid: 15
        ECP 384 BP:
          x-field-uid: 19
        ECP 512 BP:
          x-field-uid: 20
        ECP 521:
          x-field-uid: 16
        MODP 1024:
          x-field-uid: 2
        MODP 1024 S160:
          x-field-uid: 9
        MODP 1536:
          x-field-uid: 3
        MODP 2048:
          x-field-uid: 4
        MODP 2048 S224:
          x-field-uid: 10
        MODP 2048 S256:
          x-field-uid: 11
        MODP 3072:
          x-field-uid: 5
        MODP 4096:
          x-field-uid: 6
        MODP 6144:
          x-field-uid: 7
        MODP 768:
          x-field-uid: 1
        MODP 8192:
          x-field-uid: 8
        v10:
          x-field-uid: 21
        v100:
          x-field-uid: 30
        v110:
          x-field-uid: 31
        v120:
          x-field-uid: 32
        v130:
          x-field-uid: 33
        v140:
          x-field-uid: 34
        v150:
          x-field-uid: 35
        v160:
          x-field-uid: 36
        v170:
          x-field-uid: 37
        v180:
          x-field-uid: 38
        v190:
          x-field-uid: 39
        v20:
          x-field-uid: 22
        v200:
          x-field-uid: 40
        v30:
          x-field-uid: 23
        v40:
          x-field-uid: 24
        v50:
          x-field-uid: 25
        v60:
          x-field-uid: 26
        v70:
          x-field-uid: 27
        v80:
          x-field-uid: 28
        v90:
          x-field-uid: 29
    ProtectedSubnetConfig:
      properties:
        automatic:
          type: boolean
          x-field-uid: 1
        hostsincrement:
          description: |-
            The increment to be used for enumerating all the emulated subnets of the phase 2 tunnels that belong to each phase 1 (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        hostsprefix:
          description: |-
            The Prefix specifies the length (in bits) of the subnet mask to be applied to all the addresses created in the range
          format: int32
          type: integer
          x-field-uid: 3
        increment:
          description: |-
            The increment to be used for enumerating all the emulated subnets in the range (default: 0.0.0.0).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 4
        prefix:
          description: |-
            The length (in bits) of the subnet mask to be applied to all the addresses created in the range.
          format: int32
          type: integer
          x-field-uid: 5
        singleprotectedsubnet:
          type: boolean
          x-field-uid: 6
        start:
          description: |-
            The base address for enumerating all the emulated subnets in the range
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 7
      required:
      - automatic
      - start
      - prefix
      - increment
      - hostsprefix
      - hostsincrement
      - singleprotectedsubnet
      type: object
    RemoteAccess:
      properties:
        modecfgincrement:
          description: |-
            The increment value for the ModeCfg address pool (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 1
        modecfgstart:
          description: |-
            The base address to be used for the ModeCfg address pool
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        modecfgsuffix:
          description: |-
            The IP address suffix for the ModeCfg address pool(default: 0.0.0.1).
          format: int32
          type: integer
          x-field-uid: 3
      required:
      - modecfgincrement
      - modecfgsuffix
      type: object
    RemoteSubnetConfig:
      properties:
        automatic:
          type: boolean
          x-field-uid: 1
        hostsincrement:
          description: |-
            The increment to be used for enumerating all the local subnets of the phase 2 tunnels that belong to each phase 1 (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        hostsprefix:
          description: |-
            The Prefix specifies the length (in bits) of the subnet mask to be applied to all the addresses created in the range
          format: int32
          type: integer
          x-field-uid: 3
        increment:
          description: |-
            The increment to be used for enumerating all the local subnets in the range (default: 0.0.0.0).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 4
        prefix:
          description: |-
            The length (in bits) of the subnet mask to be applied to all the addresses created in the range.
          format: int32
          type: integer
          x-field-uid: 5
        singleremotesubnet:
          type: boolean
          x-field-uid: 6
        start:
          description: |-
            The base address for enumerating all the local subnets in the range
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 7
      required:
      - automatic
      - start
      - prefix
      - increment
      - hostsprefix
      - hostsincrement
      - singleremotesubnet
      type: object
    Timers:
      properties:
        dpdenabled:
          type: boolean
          x-field-uid: 1
        dpdidleperiod:
          format: int32
          type: integer
          x-field-uid: 2
        dpdtimeout:
          format: int32
          type: integer
          x-field-uid: 3
      required:
      - dpdenabled
      - dpdidleperiod
      - dpdtimeout
      type: object
    LocalSubnetConfig:
      description: |-
        The Inner IP Range assigned to the current test configuration
      properties:
        hostcountpertunnel:
          format: int32
          type: integer
          x-field-uid: 1
        hostsincrement:
          description: |-
            The IP incrementation rule (default: 0.0.0.1).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 2
        hostsprefix:
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
          x-field-uid: 3
        increment:
          description: |-
            The IP incrementation rule (default: 0.0.1.0).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 4
        networktags:
          $ref: '#/components/schemas/TagList'
          x-field-uid: 8
        prefix:
          description: |-
            The network mask of the IP Range (default: 16).
          format: int32
          type: integer
          x-field-uid: 5
        start:
          description: |-
            The start IP for the IPRange (default: 10.0.0.10).
          pattern: ^(((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])))$
          type: string
          x-field-uid: 6
        totalhostcount:
          type: string
          x-field-uid: 7
      required:
      - start
      - increment
      - prefix
      - hostsprefix
      - hostsincrement
      - hostcountpertunnel
      - totalhostcount
      - networktags
      type: object
    MacDtlsStack:
      properties:
        dtlsenabled:
          default: true
          type: boolean
          x-field-uid: 1
        dtlsrangename:
          $ref: '#/components/schemas/Name'
          x-field-uid: 2
        epoch:
          format: int32
          type: integer
          x-field-uid: 3
        epochincr:
          default: 1
          format: int32
          type: integer
          x-field-uid: 4
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 19
        iniv:
          description: |-
            The in IV start for the DTLSRange (default: 0x22222222).
          pattern: ^0x[A-Fa-f0-9]{8}$
          type: string
          x-field-uid: 6
        inivincr:
          description: |-
            The in IV increment for the DTLSRange (default: 0x00000001).
          pattern: ^0x[A-Fa-f0-9]{8}$
          type: string
          x-field-uid: 7
        inkey:
          description: |-
            The in key start for the DTLSRange (default: 0xBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB).
          pattern: ^0x[A-Fa-f0-9]{64}$
          type: string
          x-field-uid: 8
        inkeyincr:
          description: |-
            The in key increment for the DTLSRange (default: 0x0000000000000000000000000000000000000000000000000000000000000001).
          pattern: ^0x[A-Fa-f0-9]{64}$
          type: string
          x-field-uid: 9
        iprange:
          $ref: '#/components/schemas/IPRange'
          default: method(GetDefaultIPRangeForDTLS)
          x-field-uid: 5
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 20
        networkmeshing:
          $ref: '#/components/schemas/NetworkMeshing'
          default: method(GetDefaultNetworkMeshing)
          x-field-uid: 10
        outiv:
          description: |-
            The out IV start for the DTLSRange (default: 0x11111111).
          pattern: ^0x[A-Fa-f0-9]{8}$
          type: string
          x-field-uid: 11
        outivincr:
          description: |-
            The out IV increment for the DTLSRange (default: 0x00000001).
          pattern: ^0x[A-Fa-f0-9]{8}$
          type: string
          x-field-uid: 12
        outkey:
          description: |-
            The out key start for the DTLSRange (default: 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA).
          pattern: ^0x[A-Fa-f0-9]{64}$
          type: string
          x-field-uid: 13
        outkeyincr:
          description: |-
            The out key start for the DTLSRange (default: 0x0000000000000000000000000000000000000000000000000000000000000001).
          pattern: ^0x[A-Fa-f0-9]{64}$
          type: string
          x-field-uid: 14
        tunnelcount:
          format: int32
          type: integer
          x-field-uid: 15
        tunneldestinationmacincr:
          description: |-
            The MAC address increment rule for the DTLSRange (default: 00:00:00:00:00:01).
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 16
        tunneldestinationmacstart:
          description: |-
            The MAC start address for the DTLSRange (default: AA:BB:CC:DD:EE:FF).
          pattern: ^$|(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
          type: string
          x-field-uid: 17
        vlanrange:
          $ref: '#/components/schemas/VLANRange'
          description: |-
            The inner VLAN range assigned to the current DTLS Range configuration
          x-field-uid: 18
      required:
      - id
      - dtlsrangename
      - tunneldestinationmacstart
      - tunneldestinationmacincr
      - tunnelcount
      - inkey
      - inkeyincr
      - outkey
      - outkeyincr
      - iniv
      - inivincr
      - outiv
      - outivincr
      - epoch
      type: object
    NetworkMeshing:
      properties:
        dstipspergroup:
          default: 1
          description: |-
            The number of destination IPs to use for each meshing group.
          format: int32
          type: integer
          x-field-uid: 1
        mappingtype:
          $ref: '#/components/schemas/MappingType'
          x-field-uid: 2
        srcvlanspergroup:
          default: 1
          description: |-
            The number of source VLANs to use for each meshing group.
          format: int32
          type: integer
          x-field-uid: 3
      type: object
    MappingType:
      description: |-
        Use this property to switch between different meshing types (default: FULL_MESH).
      type: string
      x-enum:
        FULL_MESH:
          x-field-uid: 1
        VLAN_TO_IP_CUSTOM_MESH:
          x-field-uid: 2
    TunnelStack:
      description: |-
        The tunnel stack assigned to the current test configuration
      properties:
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 5
        inneriprange:
          $ref: '#/components/schemas/InnerIPRange'
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        outeriprange:
          $ref: '#/components/schemas/IPRange'
          x-field-uid: 2
        tunnelrange:
          $ref: '#/components/schemas/TunnelRange'
          x-field-uid: 3
        tunnelstackname:
          $ref: '#/components/schemas/Name'
          x-field-uid: 4
      required:
      - id
      - tunnelstackname
      type: object
    InnerIPRange:
      description: |-
        The Inner IP Range assigned to the current test configuration
      properties:
        networktags:
          $ref: '#/components/schemas/TagList'
          x-field-uid: 1
      type: object
    TunnelRange:
      description: |-
        The Tunnel Range assigned to the current test configuration
      properties:
        ciscoanyconnectsettings:
          $ref: '#/components/schemas/CiscoAnyConnectSettings'
          x-field-uid: 1
        dcprequesttimeout:
          default: 120
          format: int32
          type: integer
          x-field-uid: 2
        dnsresolver:
          $ref: '#/components/schemas/DNSResolver'
          x-field-uid: 3
        f5settings:
          $ref: '#/components/schemas/F5Settings'
          x-field-uid: 4
        fortinetsettings:
          $ref: '#/components/schemas/FortinetSettings'
          x-field-uid: 5
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 11
        pangpsettings:
          $ref: '#/components/schemas/PANGPSettings'
          x-field-uid: 6
        tcpdstport:
          format: int32
          type: integer
          x-field-uid: 7
        tunnelcountperouterip:
          format: int32
          type: integer
          x-field-uid: 8
        tunnelestablishmenttimeout:
          default: 120
          format: int32
          type: integer
          x-field-uid: 9
        vendortype:
          type: string
          x-enum:
            CISCO_ANY_CONNECT:
              x-field-uid: 1
            F5:
              x-field-uid: 4
            FORTINET:
              x-field-uid: 3
            PAN_GP:
              x-field-uid: 2
          x-field-uid: 10
          enum:
          - CISCO_ANY_CONNECT
          - F5
          - FORTINET
          - PAN_GP
      required:
      - vendortype
      - tunnelcountperouterip
      - tcpdstport
      type: object
    CiscoAnyConnectSettings:
      properties:
        authsettings:
          x-field-uid: 8
          $ref: '#/components/schemas/AuthSettings'
        ciscoencapsulation:
          $ref: '#/components/schemas/CiscoEncapsulation'
          x-field-uid: 1
        connectionprofiles:
          items:
            type: string
          type: array
          x-field-uid: 2
        espproberetrytimeout:
          default: 60
          format: int32
          type: integer
          x-field-uid: 3
        espprobetimeout:
          default: 65
          format: int32
          type: integer
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 7
        outertcpprofile:
          x-field-uid: 9
          $ref: '#/components/schemas/TcpProfile'
        outertlsclientprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileCiscoSettings)
          x-field-uid: 5
        vpngateway:
          pattern: ^$|(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-\_]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-\_]*[A-Za-z0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$)
          type: string
          x-field-uid: 6
      required:
      - vpngateway
      type: object
    AuthSettings:
      properties:
        authmethod:
          $ref: '#/components/schemas/AuthMethodType'
          default: AAA
          x-field-uid: 1
        authparam:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultAuthParam)
          x-field-uid: 2
        certificatefile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultCertificateFile)
          description: |-
            The authentication certificate file of the VPN tunnel.
          x-field-uid: 3
        keyfile:
          $ref: '#/components/schemas/Params'
          default: method(GetDefaultKeyFile)
          description: |-
            The authentication key file of the VPN tunnel.
          x-field-uid: 4
        keyfilepassword:
          description: |-
            The key file password of the TLS VPN authentication.
          type: string
          x-field-uid: 5
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 10
        passwords:
          items:
            type: string
          type: array
          x-field-uid: 6
        passwordsparam:
          $ref: '#/components/schemas/Params'
          x-field-uid: 7
        usernames:
          items:
            type: string
          type: array
          x-field-uid: 8
        usernamesparam:
          $ref: '#/components/schemas/Params'
          x-field-uid: 9
      type: object
    AuthMethodType:
      description: |-
        The authentication method for TLS VPN tunnels.
      type: string
      x-enum:
        AAA:
          x-field-uid: 1
        CERTIFICATE:
          x-field-uid: 3
        v10:
          x-field-uid: 2
    CiscoEncapsulation:
      properties:
        dtlsenabled:
          type: boolean
          x-field-uid: 1
        dtlssettings:
          $ref: '#/components/schemas/DTLSSettings'
          x-field-uid: 2
        encapsulationmode:
          description: |-
            The encapsulation mode for inner traffic.
          type: string
          x-enum:
            DTLS:
              x-field-uid: 1
            TLS:
              x-field-uid: 2
          x-field-uid: 3
          enum:
          - DTLS
          - TLS
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        udpport:
          format: int32
          type: integer
          x-field-uid: 4
      required:
      - dtlsenabled
      - udpport
      - encapsulationmode
      type: object
    DTLSSettings:
      properties:
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 3
        tlsclientprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileDTLSSettings)
          x-field-uid: 1
        udpprofile:
          $ref: '#/components/schemas/UdpProfile'
          x-field-uid: 2
      type: object
    F5Settings:
      properties:
        authsettings:
          x-field-uid: 5
          $ref: '#/components/schemas/AuthSettings'
        f5encapsulation:
          $ref: '#/components/schemas/F5Encapsulation'
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
        outertcpprofile:
          x-field-uid: 6
          $ref: '#/components/schemas/TcpProfile'
        outertlsclientprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileF5Settings)
          x-field-uid: 2
        vpngateway:
          pattern: ^$|(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-\_]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-\_]*[A-Za-z0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$)
          type: string
          x-field-uid: 3
      type: object
    F5Encapsulation:
      properties:
        encapsulationmode:
          description: |-
            The encapsulation mode for inner traffic.
          type: string
          x-enum:
            PPP_OVER_DTLS:
              x-field-uid: 1
            TLS:
              x-field-uid: 2
          x-field-uid: 1
          enum:
          - PPP_OVER_DTLS
          - TLS
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        pppoverdtlsenabled:
          type: boolean
          x-field-uid: 2
        pppoverdtlssettings:
          $ref: '#/components/schemas/DTLSSettings'
          x-field-uid: 3
        udpport:
          format: int32
          type: integer
          x-field-uid: 4
      required:
      - pppoverdtlsenabled
      - udpport
      - encapsulationmode
      type: object
    FortinetSettings:
      properties:
        authsettings:
          x-field-uid: 5
          $ref: '#/components/schemas/AuthSettings'
        fortinetencapsulation:
          $ref: '#/components/schemas/FortinetEncapsulation'
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
        outertcpprofile:
          x-field-uid: 6
          $ref: '#/components/schemas/TcpProfile'
        outertlsclientprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileFortinetSettings)
          x-field-uid: 2
        vpngateway:
          pattern: ^$|(^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-\_]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-\_]*[A-Za-z0-9])$|^(?:(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){6})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:::(?:(?:(?:[0-9a-fA-F]{1,4})):){5})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){4})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,1}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){3})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,2}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:(?:[0-9a-fA-F]{1,4})):){2})(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,3}(?:(?:[0-9a-fA-F]{1,4})))?::(?:(?:[0-9a-fA-F]{1,4})):)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,4}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9]))\.){3}(?:(?:25[0-5]|(?:[1-9]|1[0-9]|2[0-4])?[0-9])))))))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,5}(?:(?:[0-9a-fA-F]{1,4})))?::)(?:(?:[0-9a-fA-F]{1,4})))|(?:(?:(?:(?:(?:(?:[0-9a-fA-F]{1,4})):){0,6}(?:(?:[0-9a-fA-F]{1,4})))?::))))$)
          type: string
          x-field-uid: 3
      type: object
    FortinetEncapsulation:
      properties:
        encapsulationmode:
          description: |-
            The encapsulation mode for inner traffic.
          type: string
          x-enum:
            PPP_OVER_DTLS:
              x-field-uid: 1
            TLS:
              x-field-uid: 2
          x-field-uid: 1
          enum:
          - PPP_OVER_DTLS
          - TLS
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        pppoverdtlsenabled:
          type: boolean
          x-field-uid: 2
        pppoverdtlssettings:
          $ref: '#/components/schemas/DTLSSettings'
          x-field-uid: 3
        udpport:
          format: int32
          type: integer
          x-field-uid: 4
      required:
      - pppoverdtlsenabled
      - udpport
      - encapsulationmode
      type: object
    PANGPSettings:
      properties:
        authsettings:
          x-field-uid: 11
          $ref: '#/components/schemas/AuthSettings'
        espproberetrytimeout:
          default: 60
          format: int32
          type: integer
          x-field-uid: 1
        espprobetimeout:
          default: 65
          format: int32
          type: integer
          x-field-uid: 2
        gpclientversion:
          default: 5.1.5-8
          description: |-
            GP Client Version
          type: string
          x-field-uid: 3
        isportal:
          default: true
          description: |-
            A flag indicating if the tunnel is connected to PAN Portal instead of a direct connection to the PAN GP VPN Gateway (default: true).
          type: boolean
          x-field-uid: 4
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 10
        outertcpprofile:
          x-field-uid: 12
          $ref: '#/components/schemas/TcpProfile'
        outertlsclientprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfilePangpSettings)
          x-field-uid: 5
        pangpencapsulation:
          $ref: '#/components/schemas/PANGPEncapsulation'
          x-field-uid: 6
        portalhostname:
          pattern: (^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)+([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9]))|(^$)|^((((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))|(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|(([0-9a-fA-F]{1,4}:){5,5}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}|([0-9a-fA-F]{1,4}:){1,4}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){2,2}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){3,3}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){4,4})|:(:[0-9a-fA-F]{1,4}){1,5}):((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))))$
          type: string
          x-field-uid: 7
        vpngateway:
          type: string
          x-field-uid: 8
        vpngateways:
          items:
            type: string
          type: array
          x-field-uid: 9
      required:
      - vpngateways
      - portalhostname
      type: object
    PANGPEncapsulation:
      properties:
        encapsulationmode:
          description: |-
            The encapsulation mode for inner traffic.
          type: string
          x-enum:
            ESP_OVER_UDP:
              x-field-uid: 1
            TLS:
              x-field-uid: 2
          x-field-uid: 3
          enum:
          - ESP_OVER_UDP
          - TLS
        espoverudpenabled:
          type: boolean
          x-field-uid: 1
        espoverudpsettings:
          $ref: '#/components/schemas/ESPOverUDPSettings'
          x-field-uid: 2
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        udpport:
          format: int32
          type: integer
          x-field-uid: 4
      required:
      - espoverudpenabled
      - udpport
      - encapsulationmode
      type: object
    ESPOverUDPSettings:
      properties:
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 2
        udpprofile:
          $ref: '#/components/schemas/UdpProfile'
          x-field-uid: 1
      type: object
    ApplicationProfile:
      description: |-
        The configuration for DUT
      properties:
        active:
          x-field-uid: 10
          default: true
          description: |-
            Indicates whether the profile is enabled or not.
          type: boolean
        add_applications:
          items:
            $ref: '#/components/schemas/ExternalResourceInfo'
          type: array
          x-field-uid: 5
        applications:
          items:
            $ref: '#/components/schemas/Application'
          type: array
          x-field-uid: 1
        defaultnetworkmapping:
          $ref: '#/components/schemas/NetworkMapping'
          x-field-uid: 2
        id:
          x-field-uid: 12
          $ref: '#/components/schemas/ID'
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        modify_excluded_dut_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 7
        modify_tags_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 8
        name:
          type: string
          x-field-uid: 3
        objectivesandtimeline:
          $ref: '#/components/schemas/ObjectivesAndTimeline'
          default: method(GetDefaultObjectivesAndTimeline)
          x-field-uid: 4
        reset_tags_to_default:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 9
        trafficsettings:
          x-field-uid: 11
          $ref: '#/components/schemas/TrafficSettings'
      required:
      - name
      type: object
    Application:
      properties:
        actiontimeout:
          x-field-uid: 17
          default: 30
          description: |-
            The action timeout value of the Scenario.
          format: int32
          type: integer
        active:
          x-field-uid: 18
          default: true
          description: |-
            Indicates whether the scenario is enabled or not.
          type: boolean
        clienthttpprofile:
          x-field-uid: 19
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The client HTTP profile used in the Scenario.
        clienttlsprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultClientTlsProfileForApplication)
          x-field-uid: 1
        connections:
          x-field-uid: 20
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        connectionsmaxtransactions:
          x-field-uid: 21
          description: |-
            The maximum number of transactions for all scenario connections.
          format: int32
          type: integer
        datatypes:
          items:
            $ref: '#/components/schemas/DataType'
          type: array
          x-field-uid: 2
        description:
          x-field-uid: 22
          description: |-
            The description of the Scenario.
          type: string
        destinationhostname:
          x-field-uid: 23
          type: string
        dnnid:
          x-field-uid: 24
          type: string
        endpointid:
          x-field-uid: 25
          description: |-
            The endpoint ID of the Scenario.
          format: int32
          type: integer
        endpoints:
          x-field-uid: 26
          items:
            $ref: '#/components/schemas/Endpoint'
          type: array
        externalresourceurl:
          x-field-uid: 27
          description: |-
            The external resource URL of the Scenario.
          type: string
        id:
          x-field-uid: 44
          $ref: '#/components/schemas/ID'
        index:
          x-field-uid: 28
          description: |-
            The index of the scenario.
          format: int32
          type: integer
        inherithttpprofile:
          x-field-uid: 29
          type: boolean
        inherittls:
          default: true
          type: boolean
          x-field-uid: 3
        ippreference:
          x-field-uid: 30
          $ref: '#/components/schemas/IpPreference'
          description: |-
            The Ip Preference. Must be one of: IPV4_ONLY, IPV6_ONLY, BOTH_IPV4_FIRST, BOTH_IPV6_FIRST or IP_PREF_MAX.
        isdeprecated:
          x-field-uid: 31
          description: |-
            A value that indicates if the action is deprecated.
          type: boolean
        isstatelessstream:
          type: boolean
          x-field-uid: 4
        iterationcount:
          x-field-uid: 32
          description: |-
            The iteration counter of the Scenario.
          format: int32
          type: integer
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 14
        maxactivelimit:
          x-field-uid: 33
          description: |-
            The maximum active limit of the Scenario.
          format: int32
          type: integer
        modify_excluded_dut_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 15
        modify_tags_recursively:
          items:
            $ref: '#/components/schemas/UpdateNetworkMapping'
          type: array
          x-field-uid: 16
        name:
          x-field-uid: 34
          $ref: '#/components/schemas/Name'
        networkmapping:
          x-field-uid: 35
          $ref: '#/components/schemas/NetworkMapping'
        objectiveweight:
          description: |-
            The objective weight of the application.
          format: int64
          type: integer
          x-field-uid: 5
        params:
          x-field-uid: 36
          items:
            $ref: '#/components/schemas/Params'
          type: array
        protocolid:
          x-field-uid: 37
          description: |-
            The protocol ID of the Scenario.
          type: string
        qosflowid:
          x-field-uid: 38
          type: string
        readonlymaxtrans:
          x-field-uid: 39
          description: |-
            If true, ConnectionsMaxTransactions will be readonly.
          type: boolean
        serverhttpprofile:
          x-field-uid: 40
          $ref: '#/components/schemas/HTTPProfile'
          description: |-
            The server HTTP profile used in the Scenario.
        servertlsprofile:
          $ref: '#/components/schemas/TLSProfile'
          default: method(GetDefaultServerTlsProfileForApplication)
          x-field-uid: 6
        statelessstream:
          $ref: '#/components/schemas/StatelessStream'
          x-field-uid: 7
        static:
          default: false
          type: boolean
          x-field-uid: 8
        supportedapps:
          items:
            type: string
          type: array
          x-field-uid: 9
        supportscalibration:
          default: false
          type: boolean
          x-field-uid: 10
        supportsclienthttpprofile:
          x-field-uid: 41
          description: |-
            Indicates if the scenario supports Client HTTP profile.
          type: boolean
        supportshttpprofiles:
          x-field-uid: 42
          description: |-
            Indicates if the scenario supports HTTP profiles.
          type: boolean
        supportsserverhttpprofile:
          x-field-uid: 43
          description: |-
            Indicates if the scenario supports Server HTTP profile.
          type: boolean
        supportsstrikes:
          default: true
          type: boolean
          x-field-uid: 11
        supportstls:
          default: true
          type: boolean
          x-field-uid: 12
        tracks:
          default: items(1)
          items:
            $ref: '#/components/schemas/Track'
          type: array
          x-field-uid: 13
      required:
      - objectiveweight
      type: object
    DataType:
      properties:
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 2
        values:
          description: |-
            A list of parameters for this data type.
          items:
            $ref: '#/components/schemas/DataType.Values'
          type: array
          x-field-uid: 1
      type: object
    DataType.Values:
      properties:
        id:
          description: |-
            The name of the parameter.
          type: string
          x-field-uid: 1
        valuetype:
          description: |-
            The default value of the parameter.
          type: string
          x-field-uid: 2
      type: object
    StatelessStream:
      properties:
        clientstreamprofile:
          $ref: '#/components/schemas/StreamProfile'
          x-field-uid: 1
        direction:
          $ref: '#/components/schemas/StreamDirection'
          x-field-uid: 2
        isfloodstream:
          default: false
          type: boolean
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 5
        serverstreamprofile:
          $ref: '#/components/schemas/StreamProfile'
          x-field-uid: 4
      type: object
    StreamProfile:
      properties:
        packetrate:
          type: integer
          x-field-uid: 1
        payloadsize:
          type: integer
          x-field-uid: 2
        payloadtype:
          $ref: '#/components/schemas/StreamPayloadType'
          x-field-uid: 3
        totalestimatedthroughput:
          type: string
          x-field-uid: 4
        totalestimatedthroughputpersimulateduser:
          type: string
          x-field-uid: 5
        uniquepoolsize:
          type: integer
          x-field-uid: 6
      required:
      - packetrate
      - payloadsize
      - payloadtype
      type: object
    StreamPayloadType:
      type: string
      x-enum:
        <nil>:
          x-field-uid: 3
        PSEUDORANDOM:
          x-field-uid: 2
        RANDOM:
          x-field-uid: 1
    StreamDirection:
      type: string
      x-enum:
        Bidirectional:
          x-field-uid: 3
        ClientToServer:
          x-field-uid: 1
        ServerToClient:
          x-field-uid: 2
    Track:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-field-uid: 1
        add_actions:
          items:
            format: byte
            type: string
          type: array
          x-field-uid: 2
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 3
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 4
      required:
      - id
      type: object
    Action:
      items:
        $ref: '#/components/schemas/ActionBase'
      type: object
    ObjectivesAndTimeline:
      properties:
        advancedsettings:
          $ref: '#/components/schemas/AdvancedSettings'
          default: AgentOptimizationMode:BALANCED_MODE, WarmUpPeriod:0
          x-field-uid: 1
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        primaryobjective:
          $ref: '#/components/schemas/SpecificObjective'
          default: Type:Throughput,Id:0,Unit:bps
          x-field-uid: 2
        secondaryobjective:
          $ref: '#/components/schemas/SecondaryObjective'
          x-field-uid: 3
        secondaryobjectives:
          default: items(1)
          description: |-
            Deprecated. Use SecondaryObjective instead.
          items:
            $ref: '#/components/schemas/SpecificObjective'
          type: array
          x-field-uid: 4
        timelinesegments:
          default: items(1)
          description: |-
            Deprecated. Use PrimaryObjective.Timeline instead.
          items:
            $ref: '#/components/schemas/TimelineSegment'
          type: array
          x-field-uid: 5
      type: object
    AdvancedSettings:
      properties:
        agentoptimizationmode:
          $ref: '#/components/schemas/AgentOptimizationMode'
          x-field-uid: 1
        agentstreamingpurposecpupercent:
          default: 25
          description: |-
            The CPU percentage reserved for streaming purpose use (default: 0).
          format: int32
          type: integer
          x-field-uid: 2
        automaticcpupercent:
          default: true
          description: |-
            Deprecated. Use the calibration operation to find the best value for AgentStreamingPurposeCPUPercent for the current assigned agents.
          type: boolean
          x-field-uid: 3
        connectiongracefulstoptimeout:
          default: 120
          description: |-
            The time the test will wait all connections to be graceful stopped (default: 15 seconds).
          format: int64
          type: integer
          x-field-uid: 4
        warmupperiod:
          description: |-
            The time that servers may need to warm up, when clients should wait (default: 0 seconds).
          format: int64
          type: integer
          x-field-uid: 5
      required:
      - warmupperiod
      type: object
    AgentOptimizationMode:
      description: |-
        Use this property to switch between different agent optimization strategies (default: BALANCED_MODE)
      type: string
      x-enum:
        BALANCED_MODE:
          x-field-uid: 1
        RATE_MODE:
          x-field-uid: 2
    SpecificObjective:
      properties:
        id:
          $ref: '#/components/schemas/ID'
          x-field-uid: 6
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 7
        maxpendingsimulatedusers:
          description: |-
            Only applies if Type is SimulatedUsers. The maximum number or percentage of users that can be in the pending state (not yet connected and sending traffic) at any time. You can either specify a number or a percentage using the % sign.
          pattern: $|^[0-9]+%?$
          type: string
          x-field-uid: 1
        maxsimulatedusersperinterval:
          default: 0
          description: |-
            Only applies if Type is SimulatedUsers. The maximum number of simulated users at which new users are initiated and teardown per interval(1 second). Default value is 0 (no limit)
          format: int64
          type: integer
          x-field-uid: 2
        timeline:
          default: items(3)
          description: |-
            The timeline of this objective.
          items:
            $ref: '#/components/schemas/TimelineSegmentUnion'
          type: array
          x-field-uid: 3
        type:
          $ref: '#/components/schemas/ObjectiveType'
          description: |-
            The objective's type (default: Throughput).
          x-field-uid: 4
        unit:
          $ref: '#/components/schemas/ObjectiveUnit'
          description: |-
            The objective's unit. Must be one of: bps or ''.
          x-field-uid: 5
      required:
      - id
      - type
      - unit
      - maxpendingsimulatedusers
    TimelineSegmentUnion:
      items:
        $ref: '#/components/schemas/SteadySegment'
    SteadySegment:
      properties:
        duration:
          x-field-uid: 3
          description: |-
            The duration of the timeline segment (default: 600).
          format: int64
          type: integer
        id:
          x-field-uid: 6
          $ref: '#/components/schemas/ID'
        objectiveunit:
          type: string
          x-enum:
            Gbps:
              x-field-uid: 4
            Kbps:
              x-field-uid: 2
            Mbps:
              x-field-uid: 3
            bps:
              x-field-uid: 1
          x-field-uid: 1
          enum:
          - Gbps
          - Kbps
          - Mbps
          - bps
        objectivevalue:
          format: float
          type: number
          x-field-uid: 2
        segmenttype:
          x-field-uid: 4
          $ref: '#/components/schemas/SegmentType'
          description: |-
            The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
        warmupperiod:
          x-field-uid: 5
          default: 0
          description: |-
            Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need to warm up, when clients should wait (default: 0 seconds).
          format: int64
          type: integer
      required:
      - objectivevalue
      - objectiveunit
      type: object
    ObjectiveType:
      type: string
      x-enum:
        Concurrent connections:
          x-field-uid: 5
        Connections per second:
          x-field-uid: 3
        Flow rate:
          x-field-uid: 4
        Simulated users:
          x-field-uid: 1
        Throughput:
          x-field-uid: 2
    ObjectiveUnit:
      type: string
      x-enum:
        bps:
          x-field-uid: 1
    SecondaryObjective:
      properties:
        enabled:
          description: |-
            If false, the values of this objective will be ignored.
          type: boolean
          x-field-uid: 1
        maxpendingsimulatedusers:
          description: |-
            Only applies if Type is SimulatedUsers. The maximum number or percentage of users that can be in the pending state (not yet connected and sending traffic) at any time. You can either specify a number or a percentage using the % sign.
          pattern: ^[0-9]+%?$
          type: string
          x-field-uid: 2
        maxsimulatedusersperinterval:
          default: 0
          description: |-
            Only applies if Type is SimulatedUsers. The maximum number of simulated users at which new users are initiated and teardown per interval(1 second). Default value is 0 (no limit)
          format: int64
          type: integer
          x-field-uid: 3
        objectiveunit:
          description: |-
            The objective's unit.
          type: string
          x-enum:
            Gbps:
              x-field-uid: 4
            Kbps:
              x-field-uid: 2
            Mbps:
              x-field-uid: 3
            bps:
              x-field-uid: 1
          x-field-uid: 4
          enum:
          - Gbps
          - Kbps
          - Mbps
          - bps
        objectivevalue:
          description: |-
            The value of the secondary objective. This value will be used for the whole duration of the test.
          format: float
          type: number
          x-field-uid: 5
        type:
          $ref: '#/components/schemas/ObjectiveType'
          description: |-
            The objective's type (default: SimulatedUsers).
          x-field-uid: 6
      required:
      - type
      - enabled
      - objectivevalue
      - objectiveunit
      - maxpendingsimulatedusers
    TimelineSegment:
      properties:
        duration:
          x-field-uid: 7
          description: |-
            The duration of the timeline segment (default: 600).
          format: int64
          type: integer
        id:
          x-field-uid: 10
          $ref: '#/components/schemas/ID'
        links:
          items:
            $ref: '#/components/schemas/APILink'
          type: array
          x-field-uid: 6
        objectiveunit:
          default: Gbps
          description: |-
            The measurement unit for the objective value. Only applicable for Throughput objectives.
          type: string
          x-enum:
            Gbps:
              x-field-uid: 4
            Kbps:
              x-field-uid: 2
            Mbps:
              x-field-uid: 3
            bps:
              x-field-uid: 1
          x-field-uid: 1
          enum:
          - Gbps
          - Kbps
          - Mbps
          - bps
        objectivevalue:
          default: 1
          description: |-
            The objective value for this timeline segment.
          format: float
          type: number
          x-field-uid: 2
        primaryobjectiveunit:
          description: |-
            Deprecated. Use PrimaryObjective.Timeline[].ObjectiveUnit instead. The primary objective unit. (default: Gbps)
          type: string
          x-enum:
            Gbps:
              x-field-uid: 4
            Kbps:
              x-field-uid: 2
            Mbps:
              x-field-uid: 3
            bps:
              x-field-uid: 1
          x-field-uid: 3
          enum:
          - Gbps
          - Kbps
          - Mbps
          - bps
        primaryobjectivevalue:
          description: |-
            Deprecated. Use PrimaryObjective.Timeline[].ObjectiveValue instead. The primary objective value (default: 1).
          format: float
          type: number
          x-field-uid: 4
        secondaryobjectivevalues:
          description: |-
            Deprecated. Use SecondaryObjective.ObjectiveValue/ObjectiveUnit instead. The secondary objectives values.
          items:
            $ref: '#/components/schemas/ObjectiveValueEntry'
          type: array
          x-field-uid: 5
        segmenttype:
          x-field-uid: 8
          $ref: '#/components/schemas/SegmentType'
          description: |-
            The segment's type. Must be one of: SteadySegment, StepUpSegment, StepDownSegment.
        warmupperiod:
          x-field-uid: 9
          default: 0
          description: |-
            Deprecated. Use ObjectivesAndTimeline.WarmUp instead. The time that servers may need to warm up, when clients should wait (default: 0 seconds).
          format: int64
          type: integer
      required:
      - primaryobjectivevalue
      - primaryobjectiveunit
      type: object
    ObjectiveValueEntry:
      properties:
        id:
          description: |-
            The ID of the objective.
          type: string
          x-field-uid: 3
        unit:
          description: |-
            The unit of the Objective.
          type: string
          x-field-uid: 1
        value:
          description: |-
            The value of the Objective.
          format: float
          type: number
          x-field-uid: 2
      required:
      - id
      - value
      type: object
    Error:
      description: |-
        Error response generated while serving API request.
      type: object
      required:
      - code
      - errors
      properties:
        code:
          description: |-
            Numeric status code based on the underlying transport being used.
            The API server MUST set this code explicitly based on following references:
              - HTTP 4xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.5
              - HTTP 5xx errors: https://datatracker.ietf.org/doc/html/rfc9110#section-15.6
              - gRPC errors: https://grpc.github.io/grpc/core/md_doc_statuscodes.html
          type: integer
          format: int32
          x-field-uid: 1
        kind:
          description: |-
            Classification of error originating from within API server that may not be mapped to the value in `code`.
            Absence of this field may indicate that the error did not originate from within API server.
          type: string
          x-enum:
            validation:
              x-field-uid: 1
            internal:
              x-field-uid: 2
          x-field-uid: 2
          enum:
          - validation
          - internal
        errors:
          description: |-
            List of error messages generated while executing the request.
          type: array
          items:
            type: string
          x-field-uid: 3
    Warning:
      description: |-
        A list of warnings that have occurred while executing the request.
      type: object
      properties:
        warnings:
          description: "A list of any system specific warnings that have occurred\
            \ while \nexecuting the request."
          type: array
          items:
            type: string
          x-field-uid: 1
    Version:
      description: |-
        Version details
      type: object
      properties:
        api_spec_version:
          description: |-
            Version of API specification
          type: string
          default: ''
          x-field-uid: 1
        sdk_version:
          description: |-
            Version of SDK generated from API specification
          type: string
          default: ''
          x-field-uid: 2
        app_version:
          description: |-
            Version of application consuming or serving the API
          type: string
          default: ''
          x-field-uid: 3
