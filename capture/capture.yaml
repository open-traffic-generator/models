components:
  schemas:
    Capture:
      x-status:
        status: under-review
        additional_information: Capture schema is under review
      description: >-
        Configuration for capture settings.
      type: object
      required: [port_names, name]
      properties:
        port_names:
          description: >-
            The unique names of ports that the capture settings will apply to.
            Port_names cannot be duplicated between capture objects.
          type: array
          items:
            type: string
          x-constraint:
          - '/components/schemas/Port/properties/name'
          x-field-uid: 1
        filters:
          description: >-
            A list of filters to apply to the capturing ports.
            If no filters are specified then all packets will be captured.
            A capture can have multiple filters. The number of filters supported
            is determined by the implementation which can be retrieved using
            the capabilities API.

            When multiple filters are specified the capture implementation  must &&
            (and) all the filters.
          type: array
          items:
            $ref: '#/components/schemas/Capture.Filter'
          x-field-uid: 2
        overwrite:
          description: >-
            Overwrite the capture buffer.
          type: boolean
          default: true
          x-field-uid: 3
        packet_size:
          description: >-
            The maximum size of each captured packet.
            If no value is specified or it is null then the entire packet will
            be captured.
          type: integer
          x-field-uid: 4
        format:
          description: >-
            The format of the capture file.
          type: string
          default: pcap
          x-field-uid: 5
          x-enum:
            pcap:
              x-field-uid: 1
            pcapng:
              x-field-uid: 2
        name:
          x-include: ../common/common.yaml#/components/schemas/Named.Object/properties/name
          x-field-uid: 6
    Capture.Filter:
      description: >-
        Configuration for capture filters
      type: object
      properties:
        choice:
          description: |-
            The type of capture filter.
          type: string
          default: custom
          x-field-uid: 1
          x-enum:
            custom:
              x-field-uid: 1
            ethernet:
              x-field-uid: 2
            vlan:
              x-field-uid: 3
            ipv4:
              x-field-uid: 4
            ipv6:
              x-field-uid: 5
        custom:
          description: >-
            Offset from last filter in the list.
            If no filters are present it is offset from position 0.
            Multiple custom filters can be present, the length of each custom
            filter is the length of the value being filtered.
          $ref: '#/components/schemas/Capture.Custom'
          x-field-uid: 2
        ethernet:
          $ref: '#/components/schemas/Capture.Ethernet'
          x-field-uid: 3
        vlan:
          $ref: '#/components/schemas/Capture.Vlan'
          x-field-uid: 4
        ipv4:
          $ref: '#/components/schemas/Capture.Ipv4'
          x-field-uid: 5
        ipv6:
          $ref: '#/components/schemas/Capture.Ipv6'
          x-field-uid: 6
    Capture.Custom:
      properties:
        offset:
          description: >-
            The bit offset of field to filter on
          type: integer
          default: 0
          x-field-uid: 1
        bit_length:
          description: >-
            The bit length of field to filter on
          type: integer
          default: 8
          x-field-uid: 2
        value:
          x-include: '#/components/schemas/Capture.Field/properties/value'
          x-field-uid: 3
        mask:
          x-include: '#/components/schemas/Capture.Field/properties/mask'
          x-field-uid: 4
        negate:
          x-include: '#/components/schemas/Capture.Field/properties/negate'
          x-field-uid: 5
      type: object
    Capture.Field:
      type: object
      properties:
        value:
          type: string
          format: hex
          default: "00"
          x-field-uid: 1
        mask:
          type: string
          format: hex
          default: "00"
          x-field-uid: 2
        negate:
          type: boolean
          default: false
          x-field-uid: 3
    Capture.Ethernet:
      type: object
      properties:
        src:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 1
        dst:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 2
        ether_type:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 3
        pfc_queue:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 4
    Capture.Vlan:
      type: object
      properties:
        priority:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 1
        cfi:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 2
        id:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 3
        protocol:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 4
    Capture.Ipv4:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 1
        header_length:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 2
        priority:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 3
        total_length:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 4
        identification:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 5
        reserved:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 6
        dont_fragment:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 7
        more_fragments:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 8
        fragment_offset:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 9
        time_to_live:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 10
        protocol:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 11
        header_checksum:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 12
        src:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 13
        dst:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 14
    Capture.Ipv6:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 1
        traffic_class:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 2
        flow_label:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 3
        payload_length:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 4
        next_header:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 5
        hop_limit:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 6
        src:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 7
        dst:
          $ref: '#/components/schemas/Capture.Field'
          x-field-uid: 8
