// Open Traffic Generator API 0.4.13
// License: https://opensource.org/licenses/MIT

syntax = "proto3";

package otg;

import "google/protobuf/descriptor.proto";
import "google/protobuf/empty.proto";

message OpenApiMsgOpt {
  string description = 10;
}
extend google.protobuf.MessageOptions {
  optional OpenApiMsgOpt msg_meta = 50001;
}

message OpenApiFldOpt {
  string default = 10;
  string description = 20;
}
extend google.protobuf.FieldOptions {
  optional OpenApiFldOpt fld_meta = 50002;
}

message OpenApiSvcOpt {
  string description = 10;
}
extend google.protobuf.ServiceOptions {
  optional OpenApiSvcOpt svc_meta = 50003;
}

message OpenApiRpcOpt {
  string description = 10;
}
extend google.protobuf.MethodOptions {
  optional OpenApiRpcOpt rpc_meta = 50004;
}

message Config {
  option (msg_meta).description = "A container for all models that are part of the configuration.";

  repeated Port ports = 1 [
    (fld_meta).description = "The ports that will be configured on the traffic generator."
  ];

  repeated Lag lags = 2 [
    (fld_meta).description = "The lags that will be configured on the traffic generator."
  ];

  repeated Layer1 layer1 = 3 [
    (fld_meta).description = "The layer1 settings that will be configured on the traffic generator."
  ];

  repeated Capture captures = 4 [
    (fld_meta).description = "The capture settings that will be configured on the traffic generator."
  ];

  repeated Device devices = 5 [
    (fld_meta).description = "The emulated device settings that will be configured on the traffic generator."
  ];

  repeated Flow flows = 6 [
    (fld_meta).description = "The flows that will be configured on the traffic generator."
  ];

  optional Event events = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional ConfigOptions options = 8 [
    (fld_meta).description = "Description missing in models"
  ];
}

message ConfigOptions {
  option (msg_meta).description = "Global configuration options.";

  optional PortOptions port_options = 1 [
    (fld_meta).description = "Description missing in models"
  ];
}

message Port {
  option (msg_meta).description = "An abstract test port.";

  optional string location = 1 [
    (fld_meta).description = "The location of a test port.  It is the endpoint where packets will emit from.\nTest port locations can be the following:\n  - physical appliance with multiple ports\n  - physical chassis with multiple cards and ports\n  - local interface\n  - virtual machine, docker container, kubernetes cluster\n\nThe test port location format is implementation specific. Use the /results/capabilities API to determine what formats an  implementation supports for the location property.\nGet the configured location state by using the /results/port API."
  ];

  string name = 2 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message PortOptions {
  option (msg_meta).description = "Common port options that apply to all configured Port objects. ";

  optional bool location_preemption = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "Preempt all the test port locations as defined by the  Port.Port.properties.location. If the test ports defined by their location values are in use and  this value is true, the test ports will be preempted."
  ];
}

message Lag {
  option (msg_meta).description = "The container for multiple LAG ports";

  repeated LagPort ports = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 2 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message LagPort {
  option (msg_meta).description = "The container for a port's ethernet interface and LAG protocol settings";

  string port_name = 1 [
    (fld_meta).description = "The name of a port object that will be part of the LAG. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  LagProtocol protocol = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  DeviceEthernetBase ethernet = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message LagProtocol {
  option (msg_meta).description = "Description missing in models";

  message Choice {
    enum Enum {
      unspecified = 0;
      lacp = 1;
      static = 2;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.lacp",
    (fld_meta).description = "The type of LAG protocol."
  ];

  optional LagLacp lacp = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional LagStatic static = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message LagStatic {
  option (msg_meta).description = "The container for static link aggregation protocol settings.";

  optional int32 lag_id = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The static lag id"
  ];
}

message LagLacp {
  option (msg_meta).description = "The container for link aggregation control protocol settings.";

  optional int32 actor_key = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The actor key"
  ];

  optional int32 actor_port_number = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "The actor port number"
  ];

  optional int32 actor_port_priority = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "The actor port priority"
  ];

  optional string actor_system_id = 4 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "The actor system id"
  ];

  optional int32 actor_system_priority = 5 [
    (fld_meta).default = "0",
    (fld_meta).description = "The actor system priority"
  ];

  optional int32 lacpdu_periodic_time_interval = 6 [
    (fld_meta).default = "0",
    (fld_meta).description = "This field defines how frequently LACPDUs are sent to the link partner"
  ];

  optional int32 lacpdu_timeout = 7 [
    (fld_meta).default = "0",
    (fld_meta).description = "This timer is used to detect whether received protocol information has expired"
  ];

  message ActorActivity {
    enum Enum {
      unspecified = 0;
      passive = 1;
      active = 2;
    }
  }
  optional ActorActivity.Enum actor_activity = 8 [
    (fld_meta).default = "ActorActivity.Enum.active",
    (fld_meta).description = "Sets the value of LACP actor activity as either passive or active\nPassive indicates the port's preference for not transmitting  LACPDUs unless its partner's control is Active\nActive indicates the port's preference to participate in the  protocol regardless of the partner's control value"
  ];
}

message DeviceEthernetBase {
  option (msg_meta).description = "Base ethernet interface";

  string mac = 1 [
    (fld_meta).description = "Media access control address"
  ];

  optional int32 mtu = 2 [
    (fld_meta).default = "1500",
    (fld_meta).description = "Maximum transmission unit"
  ];

  repeated DeviceVlan vlans = 3 [
    (fld_meta).description = "List of VLANs"
  ];

  string name = 4 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceEthernet {
  option (msg_meta).description = "An ethernet interface with an IPv4 and IPv6 interface stack\nBase ethernet interface";

  optional DeviceIpv4 ipv4 = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceIpv6 ipv6 = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  string mac = 3 [
    (fld_meta).description = "Media access control address"
  ];

  optional int32 mtu = 4 [
    (fld_meta).default = "1500",
    (fld_meta).description = "Maximum transmission unit"
  ];

  repeated DeviceVlan vlans = 5 [
    (fld_meta).description = "List of VLANs"
  ];

  string name = 6 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceVlan {
  option (msg_meta).description = "Emulated VLAN protocol";

  message Tpid {
    enum Enum {
      unspecified = 0;
      x8100 = 1;
      x88a8 = 2;
      x9100 = 3;
      x9200 = 4;
      x9300 = 5;
    }
  }
  optional Tpid.Enum tpid = 1 [
    (fld_meta).default = "Tpid.Enum.x8100",
    (fld_meta).description = "Tag protocol identifier"
  ];

  optional int32 priority = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Priority code point"
  ];

  optional int32 id = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "VLAN identifier"
  ];

  string name = 4 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceIpv4 {
  option (msg_meta).description = "An IPv4 interface with gateway\nA base IPv4 interface";

  string gateway = 1 [
    (fld_meta).description = "The IPv4 address of the gateway"
  ];

  string address = 2 [
    (fld_meta).description = "The IPv4 address"
  ];

  optional int32 prefix = 3 [
    (fld_meta).default = "24",
    (fld_meta).description = "The prefix of the IPv4 address"
  ];

  optional DeviceBgpv4 bgpv4 = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 5 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv4 {
  option (msg_meta).description = "Container for emulated BGPv4 peers and routes.\nContainer for basic emulated BGP peer settings.";

  string local_address = 1 [
    (fld_meta).description = "Local IPv4 address of the emulated router"
  ];

  string dut_address = 2 [
    (fld_meta).description = "IPv4 address of the BGP peer for the session"
  ];

  optional string router_id = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address."
  ];

  message AsType {
    enum Enum {
      unspecified = 0;
      ibgp = 1;
      ebgp = 2;
    }
  }
  AsType.Enum as_type = 4 [
    (fld_meta).description = "The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer."
  ];

  int32 as_number = 5 [
    (fld_meta).description = "Autonomous System Number (AS number or ASN)"
  ];

  message AsNumberWidth {
    enum Enum {
      unspecified = 0;
      two = 1;
      four = 2;
    }
  }
  optional AsNumberWidth.Enum as_number_width = 6 [
    (fld_meta).default = "AsNumberWidth.Enum.four",
    (fld_meta).description = "The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error"
  ];

  message AsNumberSetMode {
    enum Enum {
      unspecified = 0;
      do_not_include_as = 1;
      include_as_seq = 2;
      include_as_set = 3;
      include_as_seq_confed = 4;
      include_as_set_confed = 5;
      prepend_as_to_first_segment = 6;
    }
  }
  optional AsNumberSetMode.Enum as_number_set_mode = 7 [
    (fld_meta).default = "AsNumberSetMode.Enum.do_not_include_as",
    (fld_meta).description = "The AS number set mode"
  ];

  optional DeviceBgpAdvanced advanced = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpCapability capability = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpSrTePolicy sr_te_policies = 10 [
    (fld_meta).description = "Segment routing/traffic engineering policies"
  ];

  repeated DeviceBgpv4Route bgpv4_routes = 11 [
    (fld_meta).description = "Emulated BGPv4 routes"
  ];

  repeated DeviceBgpv6Route bgpv6_routes = 12 [
    (fld_meta).description = "Emulated BGPv6 routes"
  ];

  string name = 13 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];

  optional bool active = 14 [
    (fld_meta).default = "True",
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpAdvanced {
  option (msg_meta).description = "Container for BGP advanced settings.";

  optional int32 hold_time_interval = 1 [
    (fld_meta).default = "90",
    (fld_meta).description = "Number of seconds the sender proposes for the value of the Hold Timer"
  ];

  optional int32 keep_alive_interval = 2 [
    (fld_meta).default = "30",
    (fld_meta).description = "Number of seconds between transmissions of Keep Alive messages by router"
  ];

  optional int32 update_interval = 3 [
    (fld_meta).default = "0",
    (fld_meta).description = "The time interval at which UPDATE messages are sent to the DUT, expressed as the number of milliseconds between UPDATE messages."
  ];

  optional int32 time_to_live = 4 [
    (fld_meta).default = "64",
    (fld_meta).description = "The limited number of iterations that a unit of data can experience before the data is discarded. This is placed in the TTL field in the IP header of the  transmitted packets."
  ];

  optional string md5_key = 5 [
    (fld_meta).default = "",
    (fld_meta).description = "The value to be used as a secret MD5 key for authentication. If null or an empty string then authentication will not be enabled."
  ];
}

message DeviceBgpCapability {
  option (msg_meta).description = "Container for BGP capability settings.";

  optional bool vpls = 1 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool route_refresh = 2 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool route_constraint = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool link_state_non_vpn = 4 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool link_state_vpn = 5 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool evpn = 6 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool extended_next_hop_encoding = 7 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_unicast = 8 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_multicast = 9 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_multicast_vpn = 10 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_mpls_vpn = 11 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_mdt = 12 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_multicast_mpls_vpn = 13 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_unicast_flow_spec = 14 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_sr_te_policy = 15 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv4_unicast_add_path = 16 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_unicast = 17 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_multicast = 18 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_multicast_vpn = 19 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_mpls_vpn = 20 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_mdt = 21 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_multicast_mpls_vpn = 22 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_unicast_flow_spec = 23 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_sr_te_policy = 24 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool ipv6_unicast_add_path = 25 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpSrTePolicy {
  option (msg_meta).description = "Container for BGP basic segment routing traffic engineering policy \nsettings.\n";

  message PolicyType {
    enum Enum {
      unspecified = 0;
      ipv4 = 1;
      ipv6 = 2;
    }
  }
  optional PolicyType.Enum policy_type = 1 [
    (fld_meta).default = "PolicyType.Enum.ipv4",
    (fld_meta).description = "Address family indicator (AFI)."
  ];

  optional int32 distinguisher = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Identifies the policy in the context of (color and endpoint) tuple.  It is used by the SR Policy originator to make unique multiple  occurrences of the same SR Policy."
  ];

  optional int32 color = 3 [
    (fld_meta).default = "100",
    (fld_meta).description = "Identifies the policy. It is used to match the color of the  destination prefixes to steer traffic into the SR Policy. "
  ];

  optional string ipv4_endpoint = 4 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI)."
  ];

  optional string ipv6_endpoint = 5 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Specifies a single node or a set of nodes. It is selected on the basis of the policy_type (AFI)."
  ];

  optional DeviceBgpSrTePolicyNextHop next_hop = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpAddPath add_path = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpAsPath as_path = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpTunnelTlv tunnel_tlvs = 9 [
    (fld_meta).description = "Optional tunnel TLV settings"
  ];

  repeated DeviceBgpCommunity communities = 10 [
    (fld_meta).description = "Optional community settings"
  ];
}

message DeviceBgpSrTePolicyNextHop {
  option (msg_meta).description = "Optional container for BGP SR TE Policy next hop settings.";

  message NextHopMode {
    enum Enum {
      unspecified = 0;
      local_ip = 1;
      manual = 2;
    }
  }
  optional NextHopMode.Enum next_hop_mode = 1 [
    (fld_meta).default = "NextHopMode.Enum.local_ip",
    (fld_meta).description = "TBD"
  ];

  message NextHopAddressType {
    enum Enum {
      unspecified = 0;
      ipv4 = 1;
      ipv6 = 2;
    }
  }
  optional NextHopAddressType.Enum next_hop_address_type = 2 [
    (fld_meta).default = "NextHopAddressType.Enum.ipv4",
    (fld_meta).description = "TBD"
  ];

  optional string ipv4_address = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "The IPv4 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv4."
  ];

  optional string ipv6_address = 4 [
    (fld_meta).default = "::0",
    (fld_meta).description = "The IPv6 address of the next hop if the next_hop_mode is manual and the next_hop_address_type is IPv6."
  ];
}

message DeviceBgpAddPath {
  option (msg_meta).description = "The BGP Additional Paths feature is a BGP extension that allows the  advertisement of multiple paths for the same prefix without the new  paths implicitly replacing any previous paths.";

  optional int32 path_id = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "The id of the additional path."
  ];
}

message DeviceBgpAsPath {
  option (msg_meta).description = "Autonomous Systems (AS) numbers that a route passes through to reach  the destination";

  optional bool override_peer_as_set_mode = 1 [
    (fld_meta).default = "True",
    (fld_meta).description = "TBD"
  ];

  message AsSetMode {
    enum Enum {
      unspecified = 0;
      do_not_include_local_as = 1;
      include_as_seq = 2;
      include_as_set = 3;
      include_as_confed_seq = 4;
      include_as_confed_set = 5;
      prepend_to_first_segment = 6;
    }
  }
  optional AsSetMode.Enum as_set_mode = 2 [
    (fld_meta).default = "AsSetMode.Enum.do_not_include_local_as",
    (fld_meta).description = "TBD"
  ];

  repeated DeviceBgpAsPathSegment as_path_segments = 3 [
    (fld_meta).description = "The AS path segments (non random) per route range"
  ];
}

message DeviceBgpAsPathSegment {
  option (msg_meta).description = "Container for a single BGP AS path segment";

  message SegmentType {
    enum Enum {
      unspecified = 0;
      as_seq = 1;
      as_set = 2;
      as_confed_seq = 3;
      as_confed_set = 4;
    }
  }
  optional SegmentType.Enum segment_type = 1 [
    (fld_meta).default = "SegmentType.Enum.as_seq",
    (fld_meta).description = "AS sequence is the most common type of AS_PATH, it contains the  list of ASNs starting with the most recent ASN being added read  from left to right.\nThe other three AS_PATH types are used for Confederations - AS_SET is the type of AS_PATH attribute that summarizes routes using using the aggregate-address command, allowing AS_PATHs to be  summarized in the update as well. - AS_CONFED_SEQ gives the list of ASNs in the path starting with the  most recent ASN to be added reading left to right - AS_CONFED_SET will allow summarization of multiple AS PATHs to be  sent in BGP Updates."
  ];

  repeated int32 as_numbers = 2 [
    (fld_meta).description = "The AS numbers in this AS path segment."
  ];
}

message DeviceBgpTunnelTlv {
  option (msg_meta).description = "Container for BGP tunnel TLV settings.";

  repeated DeviceBgpSegmentList segment_lists = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpRemoteEndpointSubTlv remote_endpoint_sub_tlv = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpPreferenceSubTlv preference_sub_tlv = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpBindingSubTlv binding_sub_tlv = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpExplicitNullLabelPolicySubTlv explicit_null_label_policy_sub_tlv = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional bool active = 6 [
    (fld_meta).default = "True",
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpSegmentList {
  option (msg_meta).description = "Optional container for BGP SR TE Policy segment list settings.";

  optional int32 segment_weight = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The weight associated with a given path."
  ];

  repeated DeviceBgpSegment segments = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional bool active = 3 [
    (fld_meta).default = "True",
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpSegment {
  option (msg_meta).description = "Optional container for BGP SR TE Policy segment settings.";

  message SegmentType {
    enum Enum {
      unspecified = 0;
      mpls_sid = 1;
      ipv6_sid = 2;
    }
  }
  optional SegmentType.Enum segment_type = 1 [
    (fld_meta).default = "SegmentType.Enum.mpls_sid",
    (fld_meta).description = "TBD"
  ];

  optional int32 mpls_label = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "MPLS label"
  ];

  optional int32 mpls_tc = 3 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional int32 mpls_ttl = 4 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional bool v_flag = 5 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional string ipv6_sid = 6 [
    (fld_meta).default = "::0",
    (fld_meta).description = "TBD"
  ];

  optional int32 remaining_flag_bits = 7 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional bool active = 8 [
    (fld_meta).default = "True",
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpRemoteEndpointSubTlv {
  option (msg_meta).description = "Container for BGP remote endpoint sub TLV settings.";

  optional int32 as_number = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Autonomous system (AS) number"
  ];

  message AddressFamily {
    enum Enum {
      unspecified = 0;
      ipv4 = 1;
      ipv6 = 2;
    }
  }
  optional AddressFamily.Enum address_family = 2 [
    (fld_meta).default = "AddressFamily.Enum.ipv4",
    (fld_meta).description = "Determines the address type"
  ];

  optional string ipv4_address = 3 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "The IPv4 address"
  ];

  optional string ipv6_address = 4 [
    (fld_meta).default = "::0",
    (fld_meta).description = "The IPv6 address"
  ];
}

message DeviceBgpPreferenceSubTlv {
  option (msg_meta).description = "Container for BGP preference sub TLV settings.";

  optional int32 preference = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpBindingSubTlv {
  option (msg_meta).description = "Container for BGP binding sub TLV settings.";

  message BindingSidType {
    enum Enum {
      unspecified = 0;
      no_binding = 1;
      four_octet_sid = 2;
      ipv6_sid = 3;
    }
  }
  optional BindingSidType.Enum binding_sid_type = 1 [
    (fld_meta).default = "BindingSidType.Enum.no_binding",
    (fld_meta).description = "TBD"
  ];

  optional int32 four_octet_sid = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional bool bsid_as_mpls_label = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "Only valid if binding_sid_type is four_octet_sid"
  ];

  optional string ipv6_sid = 4 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Only valid if binding_sid_type is ipv6_sid"
  ];

  optional bool s_flag = 5 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool i_flag = 6 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional int32 remaining_flag_bits = 7 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];
}

message DeviceBgpExplicitNullLabelPolicySubTlv {
  option (msg_meta).description = "Container for BGP explicit null label policy sub TLV settings.";

  message ExplicitNullLabelPolicy {
    enum Enum {
      unspecified = 0;
      reserved_enlp = 1;
      push_ipv4_enlp = 2;
      push_ipv6_enlp = 3;
      push_ipv4_ipv6_enlp = 4;
      do_not_push_enlp = 5;
    }
  }
  optional ExplicitNullLabelPolicy.Enum explicit_null_label_policy = 1 [
    (fld_meta).default = "ExplicitNullLabelPolicy.Enum.do_not_push_enlp",
    (fld_meta).description = "The value of the explicit null label policy "
  ];
}

message DeviceBgpCommunity {
  option (msg_meta).description = "BGP communities provide additional capability for tagging routes and  for modifying BGP routing policy on upstream and downstream routers BGP community is a 32-bit number which broken into 16-bit AS number and  a 16-bit custom value";

  message CommunityType {
    enum Enum {
      unspecified = 0;
      manual_as_number = 1;
      no_export = 2;
      no_advertised = 3;
      no_export_subconfed = 4;
      llgr_stale = 5;
      no_llgr = 6;
    }
  }
  optional CommunityType.Enum community_type = 1 [
    (fld_meta).description = "The type of community AS number."
  ];

  optional int32 as_number = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "First two octets of 32 bit community AS number"
  ];

  optional int32 as_custom = 3 [
    (fld_meta).default = "0",
    (fld_meta).description = "Last two octets of the community AS number "
  ];
}

message DeviceBgpv4Route {
  option (msg_meta).description = "Emulated BGPv4 route\nContainer for BGP route ranges.";

  repeated DeviceBgpv4RouteAddress addresses = 1 [
    (fld_meta).description = "A list of symmetrical or asymmetrical route addresses"
  ];

  optional string next_hop_address = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "IP Address of next router to forward a packet to its final destination"
  ];

  optional DeviceBgpRouteAdvanced advanced = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpCommunity communities = 4 [
    (fld_meta).description = "Optional community settings."
  ];

  optional DeviceBgpAsPath as_path = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpAddPath add_path = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 7 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv4RouteAddress {
  option (msg_meta).description = "A container for BGPv4 route addresses";

  string address = 1 [
    (fld_meta).description = "The starting address of the network"
  ];

  optional int32 prefix = 2 [
    (fld_meta).default = "24",
    (fld_meta).description = "The IPv4 network prefix to be applied to the address. "
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "The total number of addresses in the range"
  ];

  optional int32 step = 4 [
    (fld_meta).default = "1",
    (fld_meta).description = "The amount to increase each address by"
  ];
}

message DeviceBgpRouteAdvanced {
  option (msg_meta).description = "Container for advanced BGP route range settings";

  optional int32 multi_exit_discriminator = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The multi exit discriminator (MED) value.  A null value means the MED feature is not enabled."
  ];

  message Origin {
    enum Enum {
      unspecified = 0;
      igp = 1;
      egp = 2;
    }
  }
  optional Origin.Enum origin = 2 [
    (fld_meta).default = "Origin.Enum.igp",
    (fld_meta).description = "The origin value.  A null value means the origin feature is not enabled."
  ];
}

message DeviceBgpv6Route {
  option (msg_meta).description = "Emulated BGPv6 route\nContainer for BGP route ranges.";

  repeated DeviceBgpv6RouteAddress addresses = 1 [
    (fld_meta).description = "A list of symmetrical or asymmetrical route addresses"
  ];

  optional string next_hop_address = 2 [
    (fld_meta).default = "::0",
    (fld_meta).description = "IP Address of next router to forward a packet to its final destination"
  ];

  optional DeviceBgpRouteAdvanced advanced = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpCommunity communities = 4 [
    (fld_meta).description = "Optional community settings."
  ];

  optional DeviceBgpAsPath as_path = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpAddPath add_path = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 7 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv6RouteAddress {
  option (msg_meta).description = "A container for BGPv6 route addressses";

  string address = 1 [
    (fld_meta).description = "The starting address of the network"
  ];

  optional int32 prefix = 2 [
    (fld_meta).default = "64",
    (fld_meta).description = "The IPv6 network prefix to be applied to the address"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "The total number of addresses in the range"
  ];

  optional int32 step = 4 [
    (fld_meta).default = "1",
    (fld_meta).description = "The amount to increase each address by"
  ];
}

message DeviceIpv6 {
  option (msg_meta).description = "An IPv6 interface with gateway\nA base IPv6 interface";

  string gateway = 1 [
    (fld_meta).description = "The IPv6 gateway address"
  ];

  string address = 2 [
    (fld_meta).description = "The IPv6 address."
  ];

  optional int32 prefix = 3 [
    (fld_meta).default = "64",
    (fld_meta).description = "The network prefix."
  ];

  optional DeviceBgpv6 bgpv6 = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 5 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message DeviceBgpv6 {
  option (msg_meta).description = "Container for BGPv6 peer settings and routes.\nContainer for basic emulated BGP peer settings.";

  string local_address = 1 [
    (fld_meta).description = "Local IPv6 address of the emulated router"
  ];

  string dut_address = 2 [
    (fld_meta).description = "IPv6 address of the BGP peer for the session"
  ];

  optional DeviceBgpv6SegmentRouting segment_routing = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional string router_id = 4 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "The BGP router ID is a unique identifier used by routing protocols. It is a 32-bit value that is often represented by an IPv4 address."
  ];

  message AsType {
    enum Enum {
      unspecified = 0;
      ibgp = 1;
      ebgp = 2;
    }
  }
  AsType.Enum as_type = 5 [
    (fld_meta).description = "The type of BGP autonomous system. External BGP is used for BGP links between two or more autonomous systems (ebgp) Internal BGP is used within a single autonomous system (ibgp). BGP property defaults are aligned with this object defined as an internal BGP peer. If the as_type is specified as ebgp then other properties will need to be specified according an external BGP peer."
  ];

  int32 as_number = 6 [
    (fld_meta).description = "Autonomous System Number (AS number or ASN)"
  ];

  message AsNumberWidth {
    enum Enum {
      unspecified = 0;
      two = 1;
      four = 2;
    }
  }
  optional AsNumberWidth.Enum as_number_width = 7 [
    (fld_meta).default = "AsNumberWidth.Enum.four",
    (fld_meta).description = "The width in bytes of the as_number values. Any as_number values that exceed the width MUST result in an error"
  ];

  message AsNumberSetMode {
    enum Enum {
      unspecified = 0;
      do_not_include_as = 1;
      include_as_seq = 2;
      include_as_set = 3;
      include_as_seq_confed = 4;
      include_as_set_confed = 5;
      prepend_as_to_first_segment = 6;
    }
  }
  optional AsNumberSetMode.Enum as_number_set_mode = 8 [
    (fld_meta).default = "AsNumberSetMode.Enum.do_not_include_as",
    (fld_meta).description = "The AS number set mode"
  ];

  optional DeviceBgpAdvanced advanced = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional DeviceBgpCapability capability = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated DeviceBgpSrTePolicy sr_te_policies = 11 [
    (fld_meta).description = "Segment routing/traffic engineering policies"
  ];

  repeated DeviceBgpv4Route bgpv4_routes = 12 [
    (fld_meta).description = "Emulated BGPv4 routes"
  ];

  repeated DeviceBgpv6Route bgpv6_routes = 13 [
    (fld_meta).description = "Emulated BGPv6 routes"
  ];

  string name = 14 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];

  optional bool active = 15 [
    (fld_meta).default = "True",
    (fld_meta).description = "If enabled means that this part of the configuration including any active 'children' nodes will be advertised to peer.  If disabled, this means that though config is present, it is not taking any part of the test but can be activated at run-time to advertise just this part of the configuration to the peer."
  ];
}

message DeviceBgpv6SegmentRouting {
  option (msg_meta).description = "Container for BGPv6 segment routing settings.";

  optional bool ingress_supports_vpn = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool reduced_encapsulation = 2 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional bool copy_time_to_live = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional int32 time_to_live = 4 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional int32 max_sids_per_srh = 5 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional bool auto_generate_segment_left_value = 6 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];

  optional int32 segment_left_value = 7 [
    (fld_meta).default = "0",
    (fld_meta).description = "TBD"
  ];

  optional bool advertise_sr_te_policy = 8 [
    (fld_meta).default = "False",
    (fld_meta).description = "TBD"
  ];
}

message Layer1 {
  option (msg_meta).description = "A container for layer1 settings.";

  repeated string port_names = 1 [
    (fld_meta).description = "A list of unique names of port objects that will share the\nchoice settings. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message Speed {
    enum Enum {
      unspecified = 0;
      speed_10_fd_mbps = 1;
      speed_10_hd_mbps = 2;
      speed_100_fd_mbps = 3;
      speed_100_hd_mbps = 4;
      speed_1_gbps = 5;
      speed_10_gbps = 6;
      speed_25_gbps = 7;
      speed_40_gbps = 8;
      speed_100_gbps = 9;
      speed_200_gbps = 10;
      speed_400_gbps = 11;
    }
  }
  optional Speed.Enum speed = 2 [
    (fld_meta).default = "Speed.Enum.speed_10_gbps",
    (fld_meta).description = "Set the speed if supported."
  ];

  message Media {
    enum Enum {
      unspecified = 0;
      copper = 1;
      fiber = 2;
      sgmii = 3;
    }
  }
  optional Media.Enum media = 3 [
    (fld_meta).description = "Set the type of media interface if supported."
  ];

  optional bool promiscuous = 4 [
    (fld_meta).default = "True",
    (fld_meta).description = "Enable promiscuous mode if supported."
  ];

  optional int32 mtu = 5 [
    (fld_meta).default = "1500",
    (fld_meta).description = "Set the maximum transmission unit size if supported."
  ];

  optional bool ieee_media_defaults = 6 [
    (fld_meta).default = "True",
    (fld_meta).description = "Set to true to override the auto_negotiate, link_training\nand rs_fec settings for gigabit ethernet interfaces."
  ];

  optional bool auto_negotiate = 7 [
    (fld_meta).default = "True",
    (fld_meta).description = "Enable/disable auto negotiation."
  ];

  optional Layer1AutoNegotiation auto_negotiation = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional Layer1FlowControl flow_control = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  string name = 10 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message Layer1AutoNegotiation {
  option (msg_meta).description = "Container for auto negotiation settings";

  optional bool advertise_1000_mbps = 1 [
    (fld_meta).default = "True",
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option\nthen this speed will be advertised."
  ];

  optional bool advertise_100_fd_mbps = 2 [
    (fld_meta).default = "True",
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option\nthen this speed will be advertised."
  ];

  optional bool advertise_100_hd_mbps = 3 [
    (fld_meta).default = "True",
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option\nthen this speed will be advertised."
  ];

  optional bool advertise_10_fd_mbps = 4 [
    (fld_meta).default = "True",
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option\nthen this speed will be advertised."
  ];

  optional bool advertise_10_hd_mbps = 5 [
    (fld_meta).default = "True",
    (fld_meta).description = "If auto_negotiate is true and the interface supports this option\nthen this speed will be advertised."
  ];

  optional bool link_training = 6 [
    (fld_meta).default = "False",
    (fld_meta).description = "Enable/disable gigabit ethernet link training."
  ];

  optional bool rs_fec = 7 [
    (fld_meta).default = "False",
    (fld_meta).description = "Enable/disable gigabit ethernet reed solomon forward error correction (RS FEC)."
  ];
}

message Layer1FlowControl {
  option (msg_meta).description = "A container for layer1 receive flow control settings.\nTo enable flow control settings on ports this object must be a valid\nobject not a null value.";

  optional string directed_address = 1 [
    (fld_meta).default = "01:80:C2:00:00:01",
    (fld_meta).description = "The 48bit mac address that the layer1 port names will listen on\nfor a directed pause."
  ];

  message Choice {
    enum Enum {
      unspecified = 0;
      ieee_802_1qbb = 1;
      ieee_802_3x = 2;
    }
  }
  optional Choice.Enum choice = 2 [
    (fld_meta).default = "Choice.Enum.ieee_802_1qbb",
    (fld_meta).description = "The type of priority flow control."
  ];

  optional Layer1Ieee8021qbb ieee_802_1qbb = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional Layer1Ieee8023x ieee_802_3x = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message Layer1Ieee8023x {
  option (msg_meta).description = "A container for ieee 802.3x rx pause settings";
}

message Layer1Ieee8021qbb {
  option (msg_meta).description = "These settings enhance the existing 802.3x pause priority capabilities \nto enable flow control based on 802.1p priorities (classes of service). ";

  optional int32 pfc_delay = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The upper limit on the transmit time of a queue after receiving a \nmessage to pause a specified priority.\nA value of 0 or null indicates that pfc delay will not be enabled. "
  ];

  optional int32 pfc_class_0 = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_1 = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_2 = 4 [
    (fld_meta).default = "2",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_3 = 5 [
    (fld_meta).default = "3",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_4 = 6 [
    (fld_meta).default = "4",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_5 = 7 [
    (fld_meta).default = "5",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_6 = 8 [
    (fld_meta).default = "6",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];

  optional int32 pfc_class_7 = 9 [
    (fld_meta).default = "7",
    (fld_meta).description = "The valid values are null, 0 - 7.\nA null value indicates there is no setting for this pfc class."
  ];
}

message Capture {
  option (msg_meta).description = "Container for capture settings.";

  repeated string port_names = 1 [
    (fld_meta).description = "The unique names of ports that the capture settings will apply to. Port_names cannot be duplicated between capture objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  repeated CaptureFilter filters = 2 [
    (fld_meta).description = "A list of filters to apply to the capturing ports. If no filters are specified then all packets will be captured. A capture can have multiple filters. The number of filters supported is determined by the implementation which can be retrieved using the capabilities API.\nWhen multiple filters are specified the capture implementation  must && (and) all the filters."
  ];

  optional bool overwrite = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "Overwrite the capture buffer."
  ];

  optional int32 packet_size = 4 [
    (fld_meta).description = "The maximum size of each captured packet. If no value is specified or it is null then the entire packet will be captured."
  ];

  message Format {
    enum Enum {
      unspecified = 0;
      pcap = 1;
      pcapng = 2;
    }
  }
  optional Format.Enum format = 5 [
    (fld_meta).default = "Format.Enum.pcap",
    (fld_meta).description = "The format of the capture file."
  ];

  string name = 6 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message CaptureFilter {
  option (msg_meta).description = "Container for capture filters";

  message Choice {
    enum Enum {
      unspecified = 0;
      custom = 1;
      ethernet = 2;
      vlan = 3;
      ipv4 = 4;
      ipv6 = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.custom",
    (fld_meta).description = "The type of capture filter."
  ];

  optional CaptureCustom custom = 2 [
    (fld_meta).description = "Offset from last filter in the list. If no filters are present it is offset from position 0. Multiple custom filters can be present, the length of each custom filter is the length of the value being filtered."
  ];

  optional CaptureEthernet ethernet = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureVlan vlan = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureIpv4 ipv4 = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureIpv6 ipv6 = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureCustom {
  option (msg_meta).description = "Description missing in models";

  optional int32 offset = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The bit offset of field to filter on"
  ];

  optional int32 bit_length = 2 [
    (fld_meta).default = "8",
    (fld_meta).description = "The bit length of field to filter on"
  ];

  optional string value = 3 [
    (fld_meta).default = "00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string mask = 4 [
    (fld_meta).default = "00",
    (fld_meta).description = "Description missing in models"
  ];

  optional bool negate = 5 [
    (fld_meta).default = "False",
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureField {
  option (msg_meta).description = "Description missing in models";

  optional string value = 1 [
    (fld_meta).default = "00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string mask = 2 [
    (fld_meta).default = "00",
    (fld_meta).description = "Description missing in models"
  ];

  optional bool negate = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureEthernet {
  option (msg_meta).description = "Description missing in models";

  optional CaptureField src = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField dst = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField ether_type = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField pfc_queue = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureVlan {
  option (msg_meta).description = "Description missing in models";

  optional CaptureField priority = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField cfi = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField id = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField protocol = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureIpv4 {
  option (msg_meta).description = "Description missing in models";

  optional CaptureField version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField header_length = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField priority = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField total_length = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField identification = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField reserved = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField dont_fragment = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField more_fragments = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField fragment_offset = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField time_to_live = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField protocol = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField header_checksum = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField src = 13 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField dst = 14 [
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureIpv6 {
  option (msg_meta).description = "Description missing in models";

  optional CaptureField version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField traffic_class = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField flow_label = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField payload_length = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField next_header = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField hop_limit = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField src = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional CaptureField dst = 8 [
    (fld_meta).description = "Description missing in models"
  ];
}

message Device {
  option (msg_meta).description = "A container for emulated interfaces and protocol devices.";

  string container_name = 1 [
    (fld_meta).description = "The unique name of a Port or Lag object that will contain the  emulated interfaces and/or protocol devices.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];

  DeviceEthernet ethernet = 2 [
    (fld_meta).description = "The ethernet stack."
  ];

  string name = 3 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message Flow {
  option (msg_meta).description = "A high level data plane traffic flow.";

  FlowTxRx tx_rx = 1 [
    (fld_meta).description = "The transmit and receive endpoints."
  ];

  repeated FlowHeader packet = 2 [
    (fld_meta).description = "The header is a list of traffic protocol headers.\n\nThe order of traffic protocol headers assigned to the list is the\norder they will appear on the wire.\n\nIn the case of an empty list the keyword/value of minItems: 1 \nindicates that an implementation MUST provide at least one \nFlow.Header object.\n\nThe default value for the Flow.Header choice property is ethernet \nwhich will result in an implementation by default providing at least \none ethernet packet header."
  ];

  optional FlowSize size = 3 [
    (fld_meta).description = "The size of the packets."
  ];

  optional FlowRate rate = 4 [
    (fld_meta).description = "The transmit rate of the packets."
  ];

  optional FlowDuration duration = 5 [
    (fld_meta).description = "The transmit duration of the packets."
  ];

  optional FlowMetrics metrics = 6 [
    (fld_meta).description = "Flow metrics. "
  ];

  string name = 7 [
    (fld_meta).description = "Globally unique name of an object. It also serves as the primary key for arrays of objects."
  ];
}

message FlowTxRx {
  option (msg_meta).description = "A container for different types of transmit and receive \nendpoint containers.";

  message Choice {
    enum Enum {
      unspecified = 0;
      port = 1;
      device = 2;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.port",
    (fld_meta).description = "The type of transmit and receive container used by the flow."
  ];

  optional FlowPort port = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowDevice device = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPort {
  option (msg_meta).description = "A container for a transmit port and 0..n intended receive ports.\nWhen assigning this container to a flow the flows's \npacket headers will not be populated with any address resolution \ninformation such as source and/or destination addresses. \nFor example Flow.Ethernet dst mac address values will be defaulted to 0. \nFor full control over the Flow.properties.packet header contents use this \ncontainer. ";

  string tx_name = 1 [
    (fld_meta).description = "The unique name of a port that is the transmit port.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];

  optional string rx_name = 2 [
    (fld_meta).description = "The unique name of a port that is the intended receive port.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Lag/properties/name\n"
  ];
}

message FlowDevice {
  option (msg_meta).description = "A container for declaring a map of 1..n transmit devices\nto 1..n receive devices. This allows for a single flow to have \ndifferent tx to rx device flows such as a single one to one map or a \nmany to many map.";

  message Mode {
    enum Enum {
      unspecified = 0;
      mesh = 1;
      one_to_one = 2;
    }
  }
  optional Mode.Enum mode = 1 [
    (fld_meta).default = "Mode.Enum.mesh",
    (fld_meta).description = "Determines the mapping of tx_names to rx_names.\n\nThe mesh mode creates traffic between each value in tx_names to\nevery value in rx_names except in the case where the individual \ntx_names value is equal to rx_names value which will be ignored.\nIdentical values in tx_names or rx_names MUST raise an error.\n\nThe one_to_one mode creates traffic between each value pair in \nof tx_names and rx_names by index.\nThe length of tx_names and rx_name MUST be the same.\nIdentical values in tx_names or rx_names MUST raise an error."
  ];

  repeated string tx_names = 2 [
    (fld_meta).description = "TBD\n\nx-constraint:\n- /components/schemas/Device.Ethernet/properties/name\n- /components/schemas/Device.Ipv4/properties/name\n- /components/schemas/Device.Ipv6/properties/name\n- /components/schemas/Device.Bgpv4RouteRange/properties/name\n- /components/schemas/Device.Bgpv6RouteRange/properties/name\n"
  ];

  repeated string rx_names = 3 [
    (fld_meta).description = "TBD\n\nx-constraint:\n- /components/schemas/Device.Ethernet/properties/name\n- /components/schemas/Device.Ipv4/properties/name\n- /components/schemas/Device.Ipv6/properties/name\n- /components/schemas/Device.Bgpv4RouteRange/properties/name\n- /components/schemas/Device.Bgpv6RouteRange/properties/name\n"
  ];
}

message FlowHeader {
  option (msg_meta).description = "Container for all traffic packet headers";

  message Choice {
    enum Enum {
      unspecified = 0;
      custom = 1;
      ethernet = 2;
      vlan = 3;
      vxlan = 4;
      ipv4 = 5;
      ipv6 = 6;
      pfcpause = 7;
      ethernetpause = 8;
      tcp = 9;
      udp = 10;
      gre = 11;
      gtpv1 = 12;
      gtpv2 = 13;
      arp = 14;
      icmp = 15;
      icmpv6 = 16;
      ppp = 17;
      igmpv1 = 18;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.ethernet",
    (fld_meta).description = "The available types of flow headers. If one is not provided the \ndefault ethernet packet header MUST be provided."
  ];

  optional FlowCustom custom = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowEthernet ethernet = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowVlan vlan = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowVxlan vxlan = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIpv4 ipv4 = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIpv6 ipv6 = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowPfcPause pfcpause = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowEthernetPause ethernetpause = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowTcp tcp = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowUdp udp = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowGre gre = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowGtpv1 gtpv1 = 13 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowGtpv2 gtpv2 = 14 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowArp arp = 15 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIcmp icmp = 16 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIcmpv6 icmpv6 = 17 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowPpp ppp = 18 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIgmpv1 igmpv1 = 19 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowCustom {
  option (msg_meta).description = "Custom packet header";

  string bytes = 1 [
    (fld_meta).description = "A custom packet header defined as a string of hex bytes. The string MUST contain sequence of valid hex bytes. Spaces or colons can be part of the bytes but will be discarded. This packet header can be used in multiple places in the packet."
  ];
}

message FlowEthernet {
  option (msg_meta).description = "Ethernet packet header";

  optional PatternFlowEthernetDst dst = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetSrc src = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetEtherType ether_type = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPfcQueue pfc_queue = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowVlan {
  option (msg_meta).description = "VLAN packet header";

  optional PatternFlowVlanPriority priority = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanCfi cfi = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanId id = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanTpid tpid = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowVxlan {
  option (msg_meta).description = "VXLAN packet header";

  optional PatternFlowVxlanFlags flags = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanReserved0 reserved0 = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanVni vni = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanReserved1 reserved1 = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4 {
  option (msg_meta).description = "IPv4 packet header";

  optional PatternFlowIpv4Version version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4HeaderLength header_length = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIpv4Priority priority = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TotalLength total_length = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4Identification identification = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4Reserved reserved = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DontFragment dont_fragment = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4MoreFragments more_fragments = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4FragmentOffset fragment_offset = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TimeToLive time_to_live = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4Protocol protocol = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4HeaderChecksum header_checksum = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4Src src = 13 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4Dst dst = 14 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Priority {
  option (msg_meta).description = "A container for ipv4 raw, tos, dscp ip priorities.";

  message Choice {
    enum Enum {
      unspecified = 0;
      raw = 1;
      tos = 2;
      dscp = 3;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.dscp",
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4PriorityRaw raw = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIpv4Tos tos = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIpv4Dscp dscp = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Dscp {
  option (msg_meta).description = "Differentiated services code point (DSCP) packet field.";

  optional PatternFlowIpv4DscpPhb phb = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DscpEcn ecn = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv4Tos {
  option (msg_meta).description = "Type of service (TOS) packet field.";

  optional PatternFlowIpv4TosPrecedence precedence = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosDelay delay = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosThroughput throughput = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosReliability reliability = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosMonetary monetary = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosUnused unused = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIpv6 {
  option (msg_meta).description = "IPv6 packet header";

  optional PatternFlowIpv6Version version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6TrafficClass traffic_class = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6FlowLabel flow_label = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6PayloadLength payload_length = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6NextHeader next_header = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6HopLimit hop_limit = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6Src src = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6Dst dst = 8 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPfcPause {
  option (msg_meta).description = "IEEE 802.1Qbb PFC Pause packet header.";

  optional PatternFlowPfcPauseDst dst = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseSrc src = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseEtherType ether_type = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseControlOpCode control_op_code = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseClassEnableVector class_enable_vector = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass0 pause_class_0 = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass1 pause_class_1 = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass2 pause_class_2 = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass3 pause_class_3 = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass4 pause_class_4 = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass5 pause_class_5 = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass6 pause_class_6 = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass7 pause_class_7 = 13 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowEthernetPause {
  option (msg_meta).description = "IEEE 802.3x global ethernet pause packet header";

  optional PatternFlowEthernetPauseDst dst = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseSrc src = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseEtherType ether_type = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseControlOpCode control_op_code = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseTime time = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowTcp {
  option (msg_meta).description = "TCP packet header";

  optional PatternFlowTcpSrcPort src_port = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpDstPort dst_port = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpSeqNum seq_num = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpAckNum ack_num = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpDataOffset data_offset = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnNs ecn_ns = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnCwr ecn_cwr = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnEcho ecn_echo = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlUrg ctl_urg = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlAck ctl_ack = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlPsh ctl_psh = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlRst ctl_rst = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlSyn ctl_syn = 13 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlFin ctl_fin = 14 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpWindow window = 15 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowUdp {
  option (msg_meta).description = "UDP packet header";

  optional PatternFlowUdpSrcPort src_port = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpDstPort dst_port = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpLength length = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpChecksum checksum = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGre {
  option (msg_meta).description = "Standard GRE packet header (RFC2784)";

  optional PatternFlowGreChecksumPresent checksum_present = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreReserved0 reserved0 = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreVersion version = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreProtocol protocol = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreChecksum checksum = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreReserved1 reserved1 = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGtpv1 {
  option (msg_meta).description = "GTPv1 packet header";

  optional PatternFlowGtpv1Version version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1ProtocolType protocol_type = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1Reserved reserved = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1EFlag e_flag = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1SFlag s_flag = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1PnFlag pn_flag = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1MessageType message_type = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1MessageLength message_length = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1Teid teid = 9 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1SquenceNumber squence_number = 10 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1NPduNumber n_pdu_number = 11 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1NextExtensionHeaderType next_extension_header_type = 12 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated FlowGtpExtension extension_headers = 13 [
    (fld_meta).description = "A list of optional extension headers."
  ];
}

message FlowGtpExtension {
  option (msg_meta).description = "Description missing in models";

  optional PatternFlowGtpExtensionExtensionLength extension_length = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpExtensionContents contents = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpExtensionNextExtensionHeader next_extension_header = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowGtpv2 {
  option (msg_meta).description = "GTPv2 packet header";

  optional PatternFlowGtpv2Version version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2PiggybackingFlag piggybacking_flag = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2TeidFlag teid_flag = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2Spare1 spare1 = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2MessageType message_type = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2MessageLength message_length = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2Teid teid = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2SequenceNumber sequence_number = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2Spare2 spare2 = 9 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowArp {
  option (msg_meta).description = "ARP packet header";

  optional PatternFlowArpHardwareType hardware_type = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpProtocolType protocol_type = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpHardwareLength hardware_length = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpProtocolLength protocol_length = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpOperation operation = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpSenderHardwareAddr sender_hardware_addr = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpSenderProtocolAddr sender_protocol_addr = 7 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpTargetHardwareAddr target_hardware_addr = 8 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpTargetProtocolAddr target_protocol_addr = 9 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmp {
  option (msg_meta).description = "ICMP packet header";

  message Choice {
    enum Enum {
      unspecified = 0;
      echo = 1;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.echo",
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIcmpEcho echo = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpEcho {
  option (msg_meta).description = "Packet Header for ICMP echo request\nCommon properties for ICMP packet headers that require checksum\nCommon properties for ICMP packet headers that require identifier and sequence number properties";

  optional PatternFlowIcmpEchoType type = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoCode code = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoChecksum checksum = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoIdentifier identifier = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoSequenceNumber sequence_number = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpv6 {
  option (msg_meta).description = "ICMPv6 packet header";

  message Choice {
    enum Enum {
      unspecified = 0;
      echo = 1;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.echo",
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowIcmpv6Echo echo = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIcmpv6Echo {
  option (msg_meta).description = "Packet Header for ICMPv6 Echo\nCommon properties for ICMPv6 packet headers that require checksum";

  optional PatternFlowIcmpv6EchoType type = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoCode code = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoIdentifier identifier = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoSequenceNumber sequence_number = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoChecksum checksum = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowPpp {
  option (msg_meta).description = "PPP packet header";

  optional PatternFlowPppAddress address = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPppControl control = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPppProtocolType protocol_type = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowIgmpv1 {
  option (msg_meta).description = "IGMPv1 packet header";

  optional PatternFlowIgmpv1Version version = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1Type type = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1Unused unused = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1Checksum checksum = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1GroupAddress group_address = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowSize {
  option (msg_meta).description = "The frame size which overrides the total length of the packet";

  message Choice {
    enum Enum {
      unspecified = 0;
      fixed = 1;
      increment = 2;
      random = 3;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.fixed",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 fixed = 2 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowSizeIncrement increment = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowSizeRandom random = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowSizeIncrement {
  option (msg_meta).description = "Frame size that increments from a starting size to \nan ending size incrementing by a step size.";

  optional int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).description = "Starting frame size in bytes"
  ];

  optional int32 end = 2 [
    (fld_meta).default = "1518",
    (fld_meta).description = "Ending frame size in bytes"
  ];

  optional int32 step = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Step frame size in bytes"
  ];
}

message FlowSizeRandom {
  option (msg_meta).description = "Random frame size from a min value to a max value.";

  optional int32 min = 1 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 max = 2 [
    (fld_meta).default = "1518",
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowRate {
  option (msg_meta).description = "The rate of packet transmission";

  message Choice {
    enum Enum {
      unspecified = 0;
      pps = 1;
      bps = 2;
      kbps = 3;
      mbps = 4;
      gbps = 5;
      percentage = 6;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.pps",
    (fld_meta).description = "The available types of flow rate."
  ];

  optional int32 pps = 2 [
    (fld_meta).default = "1000",
    (fld_meta).description = "Packets per second."
  ];

  optional int32 bps = 3 [
    (fld_meta).default = "1000000000",
    (fld_meta).description = "Bits per second."
  ];

  optional int32 kbps = 4 [
    (fld_meta).default = "1000000",
    (fld_meta).description = "Kilobits per second."
  ];

  optional int32 mbps = 5 [
    (fld_meta).default = "1000",
    (fld_meta).description = "Megabits per second. "
  ];

  optional int32 gbps = 6 [
    (fld_meta).default = "1",
    (fld_meta).description = "Gigabits per second."
  ];

  optional double percentage = 7 [
    (fld_meta).default = "100",
    (fld_meta).description = "The percentage of a port location's available bandwidth."
  ];
}

message FlowDuration {
  option (msg_meta).description = "A container for different transmit durations. ";

  message Choice {
    enum Enum {
      unspecified = 0;
      fixed_packets = 1;
      fixed_seconds = 2;
      burst = 3;
      continuous = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.continuous",
    (fld_meta).description = "A choice used to determine the type of duration."
  ];

  optional FlowFixedPackets fixed_packets = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowFixedSeconds fixed_seconds = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowBurst burst = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowContinuous continuous = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowContinuous {
  option (msg_meta).description = "Transmit will be continuous and will not stop automatically. ";

  optional int32 gap = 1 [
    (fld_meta).default = "12",
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  optional FlowDelay delay = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowDelay {
  option (msg_meta).description = "The optional container to specify the delay before starting \ntransmission of packets.";

  message Choice {
    enum Enum {
      unspecified = 0;
      bytes = 1;
      nanoseconds = 2;
      microseconds = 3;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.bytes",
    (fld_meta).description = "Description missing in models"
  ];

  optional double bytes = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "The delay before starting transmission of packets.\nA value of 0 indicates no delay."
  ];

  optional double nanoseconds = 3 [
    (fld_meta).default = "0",
    (fld_meta).description = "The delay before starting transmission of packets.\nA value of 0 indicates no delay."
  ];

  optional double microseconds = 4 [
    (fld_meta).default = "0",
    (fld_meta).description = "The delay before starting transmission of packets.\nA value of 0 indicates no delay."
  ];
}

message FlowFixedPackets {
  option (msg_meta).description = "Transmit a fixed number of packets after which the flow will stop.";

  optional int32 packets = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Stop transmit of the flow after this number of packets."
  ];

  optional int32 gap = 2 [
    (fld_meta).default = "12",
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  optional FlowDelay delay = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowFixedSeconds {
  option (msg_meta).description = "Transmit for a fixed number of seconds after which the flow will stop.";

  optional double seconds = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Stop transmit of the flow after this number of seconds."
  ];

  optional int32 gap = 2 [
    (fld_meta).default = "12",
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  optional FlowDelay delay = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowBurst {
  option (msg_meta).description = "Transmits continuous or fixed burst of packets. \nFor continuous burst of packets, it will not automatically stop.\nFor fixed burst of packets, it will stop after transmitting fixed number of bursts.      ";

  optional int32 bursts = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "The number of packet bursts transmitted per flow.\nA value of 0 implies continuous burst of packets."
  ];

  optional int32 packets = 2 [
    (fld_meta).description = "The number of packets transmitted per burst."
  ];

  optional int32 gap = 3 [
    (fld_meta).default = "12",
    (fld_meta).description = "The minimum gap between packets expressed as bytes."
  ];

  optional FlowDurationInterBurstGap inter_burst_gap = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowDurationInterBurstGap {
  option (msg_meta).description = "The optional container for specifying a gap between bursts.";

  message Choice {
    enum Enum {
      unspecified = 0;
      bytes = 1;
      nanoseconds = 2;
      microseconds = 3;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.bytes",
    (fld_meta).description = "The type of inter burst gap units."
  ];

  optional double bytes = 2 [
    (fld_meta).default = "12",
    (fld_meta).description = "The amount of time between bursts expressed in bytes.\nA value of 0 indicates no gap between bursts."
  ];

  optional double nanoseconds = 3 [
    (fld_meta).default = "96",
    (fld_meta).description = "The amount of time between bursts expressed in nanoseconds.\nA value of 0 indicates no gap between bursts."
  ];

  optional double microseconds = 4 [
    (fld_meta).default = "0.096",
    (fld_meta).description = "The amount of time between bursts expressed in microseconds.\nA value of 0 indicates no gap between bursts."
  ];
}

message FlowMetrics {
  option (msg_meta).description = "The optional container for configuring flow metrics.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "Enables flow metrics.\nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  optional bool loss = 2 [
    (fld_meta).default = "False",
    (fld_meta).description = "Enables additional flow metric loss calculation."
  ];

  optional bool timestamps = 3 [
    (fld_meta).default = "False",
    (fld_meta).description = "Enables additional flow metric first and last timestamps."
  ];

  optional FlowLatencyMetrics latency = 4 [
    (fld_meta).description = "Latency metrics."
  ];
}

message FlowLatencyMetrics {
  option (msg_meta).description = "The optional container for per flow latency metric configuration.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "True to enable latency metrics using timestamps.\n\nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  message Mode {
    enum Enum {
      unspecified = 0;
      store_forward = 1;
      cut_through = 2;
    }
  }
  optional Mode.Enum mode = 2 [
    (fld_meta).default = "Mode.Enum.store_forward",
    (fld_meta).description = "Select the type of latency measurement. The different types of \nlatency measurements are:\n\n\nstore_forward:\nThe time interval starting when the last bit of the frame leaves the\nsending port and ending when the first bit of the frame is seen on\nthe receiving port (LIFO).  This is based on the RFC 1242 standard.\n\n\ncut_through:\nThe time interval starting when the first bit of the frame leaves\nthe sending port and ending when the first bit of the frame is seen\non the receiving port (FIFO).  This is based on the RFC 1242 \nstandard."
  ];
}

message Event {
  option (msg_meta).description = "The optional container for event configuration.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "True to enable all events. \nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  optional EventLink link = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional EventRxRateThreshold rx_rate_threshold = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional EventRouteAdvertiseWithdraw route_advertise_withdraw = 4 [
    (fld_meta).description = "Description missing in models"
  ];
}

message EventRxRateThreshold {
  option (msg_meta).description = "The optional container for rx rate threshold event configuration.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "True to enable the rx_rate_threshold event. \nEnabling this option may affect the resultant packet payload due to \nadditional instrumentation data."
  ];

  optional double threshold = 2 [
    (fld_meta).default = "95",
    (fld_meta).description = "True to enable notifications when the rx rate of a flow passes above \nor below the threshold value. "
  ];
}

message EventLink {
  option (msg_meta).description = "The optional container for link up/down event configuration.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "True to enable notifications when a link up/down event occurs. "
  ];
}

message EventRouteAdvertiseWithdraw {
  option (msg_meta).description = "The optional container for route advertise/withdraw event configuration.";

  optional bool enable = 1 [
    (fld_meta).default = "False",
    (fld_meta).description = "True to enable notifications when a route advertise/withdraw \nevent occurs. "
  ];
}

message EventRequest {
  option (msg_meta).description = "Description missing in models";

  message Type {
    enum Enum {
      unspecified = 0;
      link_down = 1;
      link_up = 2;
      route_withdraw = 3;
      route_advertise = 4;
      flow_rx_rate_above_threshold = 5;
      flow_rx_rate_below_threshold = 6;
    }
  }
  repeated Type.Enum type = 1 [
    (fld_meta).description = "Constrain the events being returned by specifying event types.\nIf the list is empty then all event types will be returned. "
  ];

  repeated string source = 2 [
    (fld_meta).description = "Constrain the events being returned by specifying event sources. \nIf the list is empty then all event sources will be returned. \n\nx-constraint:\n- /components/schemas/Port/properties/name\n- /components/schemas/Device.Bgpv4Route/name\n- /components/schemas/Device.Bgpv6Route/name\n"
  ];
}

message EventSubscription {
  option (msg_meta).description = "A container that describes what events a system should provide and \noptionally where to publish them.  ";

  optional EventRequest events = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional string callbackurl = 2 [
    (fld_meta).description = "Indicates where a client wants to be notified of the events set in\nthe events property.\nIf this property is empty or null then no event notifications will\nbe forwarded."
  ];
}

message ResponseError {
  option (msg_meta).description = "A list of errors that may have occurred while executing the request.";

  repeated string errors = 1 [
    (fld_meta).description = "A list of any system specific errors that have occurred while \nexecuting the request."
  ];
}

message ResponseWarning {
  option (msg_meta).description = "A list of warnings that have occurred while executing the request.";

  repeated string warnings = 1 [
    (fld_meta).description = "A list of any system specific warnings that have occurred while \nexecuting the request."
  ];
}

message LinkState {
  option (msg_meta).description = "Port link state.";

  repeated string port_names = 1 [
    (fld_meta).description = "The names of port objects to. An empty or null list will control all port objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message State {
    enum Enum {
      unspecified = 0;
      up = 1;
      down = 2;
    }
  }
  State.Enum state = 2 [
    (fld_meta).description = "The link state."
  ];
}

message TransmitState {
  option (msg_meta).description = "Control the transmit state of flows.";

  repeated string flow_names = 1 [
    (fld_meta).description = "The names of flows to which the transmit state will be applied to. If the list of flow_names is empty or null the state will be applied to all configured flows.\n\nx-constraint:\n- /components/schemas/Flow/properties/name\n"
  ];

  message State {
    enum Enum {
      unspecified = 0;
      start = 1;
      stop = 2;
      pause = 3;
    }
  }
  State.Enum state = 2 [
    (fld_meta).default = "State.Enum.start",
    (fld_meta).description = "The transmit state."
  ];
}

message CaptureState {
  option (msg_meta).description = "Control port capture state";

  repeated string port_names = 1 [
    (fld_meta).description = "The name of ports to start capturing packets on. An empty or null list will control all port objects.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message State {
    enum Enum {
      unspecified = 0;
      start = 1;
      stop = 2;
    }
  }
  State.Enum state = 2 [
    (fld_meta).description = "The capture state."
  ];
}

message RouteState {
  option (msg_meta).description = "Sets the device route state";

  repeated string names = 1 [
    (fld_meta).description = "The names of device route objects to control. If no names are specified then all route objects that match the x-constraint will be affected.\n\nx-constraint:\n- /components/schemas/Device.Bgpv4Route/properties/name\n- /components/schemas/Device.Bgpv6Route/properties/name\n"
  ];

  message State {
    enum Enum {
      unspecified = 0;
      withdraw = 1;
      advertise = 2;
    }
  }
  State.Enum state = 2 [
    (fld_meta).description = "Route specific states"
  ];
}

message ProtocolState {
  option (msg_meta).description = "Sets all configured protocols to intended state";

  message State {
    enum Enum {
      unspecified = 0;
      start = 1;
      stop = 2;
    }
  }
  State.Enum state = 1 [
    (fld_meta).description = "Protocol specific states"
  ];
}

message MetricsRequest {
  option (msg_meta).description = "Request to traffic generator for metrics of choice";

  message Choice {
    enum Enum {
      unspecified = 0;
      port = 1;
      flow = 2;
      bgpv4 = 3;
      bgpv6 = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.port",
    (fld_meta).description = "Description missing in models"
  ];

  optional PortMetricsRequest port = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional FlowMetricsRequest flow = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  optional Bgpv4MetricsRequest bgpv4 = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  optional Bgpv6MetricsRequest bgpv6 = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message MetricsResponse {
  option (msg_meta).description = "Response containing chosen traffic generator metrics";

  message Choice {
    enum Enum {
      unspecified = 0;
      flow_metrics = 1;
      port_metrics = 2;
      bgpv4_metrics = 3;
      bgpv6_metrics = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.port_metrics",
    (fld_meta).description = "Description missing in models"
  ];

  repeated PortMetric port_metrics = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated FlowMetric flow_metrics = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated Bgpv4Metric bgpv4_metrics = 4 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated Bgpv6Metric bgpv6_metrics = 5 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PortMetricsRequest {
  option (msg_meta).description = "The port result request to the traffic generator";

  repeated string port_names = 1 [
    (fld_meta).description = "The names of objects to return results for. An empty list will return all port row results.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  message ColumnNames {
    enum Enum {
      unspecified = 0;
      transmit = 1;
      location = 2;
      link = 3;
      capture = 4;
      frames_tx = 5;
      frames_rx = 6;
      bytes_tx = 7;
      bytes_rx = 8;
      frames_tx_rate = 9;
      frames_rx_rate = 10;
      bytes_tx_rate = 11;
      bytes_rx_rate = 12;
    }
  }
  repeated ColumnNames.Enum column_names = 2 [
    (fld_meta).description = "The list of column names that the returned result set will contain. If the list is empty then all columns will be returned. The name of the port cannot be excluded."
  ];
}

message PortMetric {
  option (msg_meta).description = "Description missing in models";

  optional string name = 1 [
    (fld_meta).description = "The name of a configured port\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];

  optional string location = 2 [
    (fld_meta).description = "The state of the connection to the test port location. The format should be the configured port location along with  any custom connection state message."
  ];

  message Link {
    enum Enum {
      unspecified = 0;
      up = 1;
      down = 2;
    }
  }
  optional Link.Enum link = 3 [
    (fld_meta).description = "The state of the test port link The string can be up, down or a custom error message."
  ];

  message Capture {
    enum Enum {
      unspecified = 0;
      started = 1;
      stopped = 2;
    }
  }
  optional Capture.Enum capture = 4 [
    (fld_meta).description = "The state of the test port capture infrastructure. The string can be started, stopped or a custom error message."
  ];

  optional int32 frames_tx = 5 [
    (fld_meta).description = "The current total number of frames transmitted"
  ];

  optional int32 frames_rx = 6 [
    (fld_meta).description = "The current total number of valid frames received"
  ];

  optional int32 bytes_tx = 7 [
    (fld_meta).description = "The current total number of bytes transmitted"
  ];

  optional int32 bytes_rx = 8 [
    (fld_meta).description = "The current total number of valid bytes received"
  ];

  optional double frames_tx_rate = 9 [
    (fld_meta).description = "The current rate of frames transmitted"
  ];

  optional double frames_rx_rate = 10 [
    (fld_meta).description = "The current rate of valid frames received"
  ];

  optional double bytes_tx_rate = 11 [
    (fld_meta).description = "The current rate of bytes transmitted"
  ];

  optional double bytes_rx_rate = 12 [
    (fld_meta).description = "The current rate of bytes received"
  ];
}

message FlowMetricsRequest {
  option (msg_meta).description = "The container for a flow metric request.";

  repeated string flow_names = 1 [
    (fld_meta).description = "Flow metrics will be retrieved for these flow names.\nIf no flow names are specified then all flows will be returned.\n\nx-constraint:\n- /components/schemas/Flow/properties/name\n"
  ];

  optional FlowMetricGroupRequest metric_groups = 2 [
    (fld_meta).description = "A list of metric groups used to disaggregate flows. A metric group that does not exist for a flow group MUST return an error."
  ];

  message MetricNames {
    enum Enum {
      unspecified = 0;
      transmit = 1;
      frames_tx = 2;
      frames_rx = 3;
      bytes_tx = 4;
      bytes_rx = 5;
      frames_tx_rate = 6;
      frames_rx_rate = 7;
    }
  }
  repeated MetricNames.Enum metric_names = 3 [
    (fld_meta).description = "The list of metric names that the returned result set will contain. If the list is empty then all metrics will be returned."
  ];
}

message FlowMetricGroupRequest {
  option (msg_meta).description = "Description missing in models";

  message Choice {
    enum Enum {
      unspecified = 0;
      ingress = 1;
      egress = 2;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.ingress",
    (fld_meta).description = "The type of disaggregation to be applied to the flow metrics."
  ];

  repeated string ingress = 2 [
    (fld_meta).default = "[]",
    (fld_meta).description = "Disaggregate the flow metrics by ingress packet header field names.\nIf the items is empty then no disaggregation will be done. \n\nx-constraint:\n- /components/schemas/Flow/properties/packet/../metric_group\n"
  ];

  repeated string egress = 3 [
    (fld_meta).default = "[]",
    (fld_meta).description = "Disaggregate the flow metrics by egress packet header field names \nIf the items is empty then no disaggregation will be done. \n\nx-constraint:\n- /components/schemas/Flow/properties/egress/../metric_group\n"
  ];
}

message FlowMetric {
  option (msg_meta).description = "A container for flow metrics.\nThe container is keyed by the name, port_tx, port_rx and metric_groups\nvalues.";

  optional string name = 1 [
    (fld_meta).description = "The name of the flow"
  ];

  optional string port_tx = 2 [
    (fld_meta).description = "The name of the transmit port"
  ];

  optional string port_rx = 3 [
    (fld_meta).description = "The name of the receive port"
  ];

  repeated FlowMetricGroup metric_groups = 4 [
    (fld_meta).description = "Flow disaggregation groups."
  ];

  message Transmit {
    enum Enum {
      unspecified = 0;
      started = 1;
      stopped = 2;
      paused = 3;
    }
  }
  optional Transmit.Enum transmit = 5 [
    (fld_meta).description = "The transmit state of the flow."
  ];

  optional int32 frames_tx = 6 [
    (fld_meta).description = "The current total number of frames transmitted"
  ];

  optional int32 frames_rx = 7 [
    (fld_meta).description = "The current total number of valid frames received"
  ];

  optional int32 bytes_tx = 8 [
    (fld_meta).description = "The current total number of bytes transmitted"
  ];

  optional int32 bytes_rx = 9 [
    (fld_meta).description = "The current total number of bytes received"
  ];

  optional double frames_tx_rate = 10 [
    (fld_meta).description = "The current rate of frames transmitted"
  ];

  optional double frames_rx_rate = 11 [
    (fld_meta).description = "The current rate of valid frames received"
  ];

  optional double loss = 12 [
    (fld_meta).description = "The percentage of lost frames"
  ];

  optional MetricTimestamp timestamps = 13 [
    (fld_meta).description = "Description missing in models"
  ];

  optional MetricLatency latency = 14 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowMetricGroup {
  option (msg_meta).description = "Description missing in models";

  optional string name = 1 [
    (fld_meta).description = "Name of packet field metric group"
  ];

  optional string value = 2 [
    (fld_meta).description = "Value of named packet field metric group"
  ];
}

message MetricTimestamp {
  option (msg_meta).description = "The container for timestamp metrics.\nThe container will be empty if the timestamp has not been configured for\nthe flow.";

  optional double first_timestamp_ns = 1 [
    (fld_meta).description = "First timestamp in nanoseconds"
  ];

  optional double last_timestamp_ns = 2 [
    (fld_meta).description = "Last timestamp in nanoseconds"
  ];
}

message MetricLatency {
  option (msg_meta).description = "The container for latency metrics. \nThe min/max/avg values are dependent on the type of latency measurement \nmode that is configured.\nThe container will be empty if the latency has not been configured for\nthe flow.";

  optional double minimum_ns = 1 [
    (fld_meta).description = "Minimum latency in nanoseconds"
  ];

  optional double maximum_ns = 2 [
    (fld_meta).description = "Maximum latency in nanoseconds"
  ];

  optional double average_ns = 3 [
    (fld_meta).description = "Average latency in nanoseconds"
  ];
}

message Bgpv4MetricsRequest {
  option (msg_meta).description = "The request to retrieve BGPv4 Router statistics and learned routing information";

  repeated string device_names = 1 [
    (fld_meta).description = "The names of BGPv4 device to return results for. An empty list will return results for all BGPv4 devices.\n\nx-constraint:\n- /components/schemas/Device.Bgpv4/properties/name\n"
  ];

  message ColumnNames {
    enum Enum {
      unspecified = 0;
      session_state = 1;
      routes_advertised = 2;
      routes_withdrawn = 3;
    }
  }
  repeated ColumnNames.Enum column_names = 2 [
    (fld_meta).description = "The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv4 device cannot be excluded."
  ];
}

message Bgpv4Metric {
  option (msg_meta).description = "BGPv4 Router statistics and learned routing information";

  optional string name = 1 [
    (fld_meta).description = "The name of a configured BGPv4 device."
  ];

  message SessionState {
    enum Enum {
      unspecified = 0;
      up = 1;
      down = 2;
    }
  }
  optional SessionState.Enum session_state = 2 [
    (fld_meta).description = "Session state as up or down"
  ];

  optional int32 routes_advertised = 3 [
    (fld_meta).description = "Number of advertised routes sent"
  ];

  optional int32 routes_withdrawn = 4 [
    (fld_meta).description = "Number of routes withdrawn"
  ];
}

message Bgpv6MetricsRequest {
  option (msg_meta).description = "The request to retrieve BGPv6 Router statistics and learned routing information";

  repeated string device_names = 1 [
    (fld_meta).description = "The names of BGPv6 device to return results for. An empty list will return results for all BGPv6 devices.\n\nx-constraint:\n- /components/schemas/Device.Bgpv6/properties/name\n"
  ];

  message ColumnNames {
    enum Enum {
      unspecified = 0;
      session_state = 1;
      routes_advertised = 2;
      routes_withdrawn = 3;
    }
  }
  repeated ColumnNames.Enum column_names = 2 [
    (fld_meta).description = "The list of column names that the returned result set will contain. If the list is empty then all columns will be returned except for any result_groups. The name of the BGPv6 device cannot be excluded."
  ];
}

message Bgpv6Metric {
  option (msg_meta).description = "BGPv6 Router statistics and learned routing information";

  optional string name = 1 [
    (fld_meta).description = "The name of a configured BGPv6 device."
  ];

  message SessionState {
    enum Enum {
      unspecified = 0;
      up = 1;
      down = 2;
    }
  }
  optional SessionState.Enum session_state = 2 [
    (fld_meta).description = "Session state as up or down"
  ];

  optional int32 routes_advertised = 3 [
    (fld_meta).description = "Number of advertised routes sent"
  ];

  optional int32 routes_withdrawn = 4 [
    (fld_meta).description = "Number of routes withdrawn"
  ];
}

message StateMetrics {
  option (msg_meta).description = "A container for the different types of states.";

  repeated PortState port_state = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated FlowState flow_state = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PortState {
  option (msg_meta).description = "Description missing in models";

  optional string name = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  message Link {
    enum Enum {
      unspecified = 0;
      up = 1;
      down = 2;
    }
  }
  optional Link.Enum link = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  message Capture {
    enum Enum {
      unspecified = 0;
      started = 1;
      stopped = 2;
    }
  }
  optional Capture.Enum capture = 3 [
    (fld_meta).description = "Description missing in models"
  ];
}

message FlowState {
  option (msg_meta).description = "Description missing in models";

  optional string name = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  message Transmit {
    enum Enum {
      unspecified = 0;
      started = 1;
      stopped = 2;
      paused = 3;
    }
  }
  optional Transmit.Enum transmit = 2 [
    (fld_meta).description = "Description missing in models"
  ];
}

message CaptureRequest {
  option (msg_meta).description = "The capture result request to the traffic generator. Stops the port capture on the port_name and returns the capture.";

  string port_name = 1 [
    (fld_meta).description = "The name of a port a capture is started on.\n\nx-constraint:\n- /components/schemas/Port/properties/name\n"
  ];
}

message PatternFlowEthernetDstCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetDstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetDstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetSrcCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetSrcCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "65535",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      auto = 3;
      increment = 4;
      decrement = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "65535",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[65535]",
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      unspecified = 0;
      auto = 1;
    }
  }
  optional Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 5 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetEtherTypeCounter increment = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetEtherTypeCounter decrement = 7 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPfcQueueCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPfcQueue {
  option (msg_meta).description = "Priority flow control queue";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPfcQueueCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPfcQueueCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanPriorityCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanPriority {
  option (msg_meta).description = "Priority code point";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVlanPriorityCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanPriorityCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanCfiCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanCfi {
  option (msg_meta).description = "Canonical format indicator or drop elegible indicator";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVlanCfiCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanCfiCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanIdCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanId {
  option (msg_meta).description = "Vlan identifier";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVlanIdCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanIdCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanTpidCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "33024",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVlanTpid {
  option (msg_meta).description = "Protocol identifier";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "33024",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[33024]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVlanTpidCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVlanTpidCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanFlagsCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "8",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanFlags {
  option (msg_meta).description = "Flags field with a bit format of RRRRIRRR. The I flag MUST be set to 1 for a valid vxlan network id (VNI).   The other 7 bits (designated R) are reserved fields and MUST be  set to zero on transmission and ignored on receipt.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "8",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[8]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVxlanFlagsCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanFlagsCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved0Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved0 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVxlanReserved0Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanReserved0Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanVniCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanVni {
  option (msg_meta).description = "VXLAN network id";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVxlanVniCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanVniCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved1Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowVxlanReserved1 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowVxlanReserved1Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowVxlanReserved1Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "4",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Version {
  option (msg_meta).description = "Version";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "4",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[4]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4VersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4VersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "5",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderLength {
  option (msg_meta).description = "Header length";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      auto = 3;
      increment = 4;
      decrement = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "5",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[5]",
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      unspecified = 0;
      auto = 1;
    }
  }
  optional Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 5 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4HeaderLengthCounter increment = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4HeaderLengthCounter decrement = 7 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TotalLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "46",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TotalLength {
  option (msg_meta).description = "Total length";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      auto = 3;
      increment = 4;
      decrement = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "46",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[46]",
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      unspecified = 0;
      auto = 1;
    }
  }
  optional Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 5 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TotalLengthCounter increment = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TotalLengthCounter decrement = 7 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4IdentificationCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Identification {
  option (msg_meta).description = "Identification";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4IdentificationCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4IdentificationCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4ReservedCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Reserved {
  option (msg_meta).description = "Reserved flag.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4ReservedCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4ReservedCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DontFragmentCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DontFragment {
  option (msg_meta).description = "Dont fragment flag If the dont_fragment flag is set and fragmentation is required to route the packet then the packet is dropped.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4DontFragmentCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DontFragmentCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4MoreFragmentsCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4MoreFragments {
  option (msg_meta).description = "More fragments flag";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4MoreFragmentsCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4MoreFragmentsCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4FragmentOffsetCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4FragmentOffset {
  option (msg_meta).description = "Fragment offset";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4FragmentOffsetCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4FragmentOffsetCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TimeToLiveCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TimeToLive {
  option (msg_meta).description = "Time to live";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[64]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TimeToLiveCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TimeToLiveCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4ProtocolCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "61",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Protocol {
  option (msg_meta).description = "Protocol, default is 61 any host internal protocol";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "61",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[61]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4ProtocolCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4ProtocolCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4HeaderChecksum {
  option (msg_meta).description = "Header checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIpv4SrcCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Src {
  option (msg_meta).description = "Source address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['0.0.0.0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4SrcCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4SrcCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DstCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4Dst {
  option (msg_meta).description = "Destination address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['0.0.0.0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4DstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4PriorityRawCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4PriorityRaw {
  option (msg_meta).description = "Raw priority";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4PriorityRawCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4PriorityRawCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpPhbCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpPhb {
  option (msg_meta).description = "Per hop behavior";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4DscpPhbCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DscpPhbCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpEcnCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4DscpEcn {
  option (msg_meta).description = "Explicit congestion notification";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4DscpEcnCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4DscpEcnCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosPrecedenceCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosPrecedence {
  option (msg_meta).description = "Precedence";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosPrecedenceCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosPrecedenceCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosDelayCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosDelay {
  option (msg_meta).description = "Delay";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosDelayCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosDelayCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosThroughputCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosThroughput {
  option (msg_meta).description = "Throughput";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosThroughputCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosThroughputCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosReliabilityCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosReliability {
  option (msg_meta).description = "Reliability";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosReliabilityCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosReliabilityCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosMonetaryCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosMonetary {
  option (msg_meta).description = "Monetary";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosMonetaryCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosMonetaryCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosUnusedCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv4TosUnused {
  option (msg_meta).description = "Unused";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv4TosUnusedCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv4TosUnusedCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "6",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "6",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[6]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6VersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6VersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6TrafficClassCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6TrafficClass {
  option (msg_meta).description = "Traffic class";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6TrafficClassCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6TrafficClassCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6FlowLabelCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6FlowLabel {
  option (msg_meta).description = "Flow label";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6FlowLabelCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6FlowLabelCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6PayloadLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6PayloadLength {
  option (msg_meta).description = "Payload length";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      auto = 3;
      increment = 4;
      decrement = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      unspecified = 0;
      auto = 1;
    }
  }
  optional Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 5 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6PayloadLengthCounter increment = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6PayloadLengthCounter decrement = 7 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6NextHeaderCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "59",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6NextHeader {
  option (msg_meta).description = "Next header";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "59",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[59]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6NextHeaderCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6NextHeaderCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6HopLimitCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6HopLimit {
  option (msg_meta).description = "Hop limit";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "64",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[64]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6HopLimitCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6HopLimitCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6SrcCounter {
  option (msg_meta).description = "ipv6 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "::1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Src {
  option (msg_meta).description = "Source address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['::0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6SrcCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6SrcCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6DstCounter {
  option (msg_meta).description = "ipv6 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "::1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIpv6Dst {
  option (msg_meta).description = "Destination address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "::0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['::0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIpv6DstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIpv6DstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseDstCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "01:80:c2:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "01:80:c2:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['01:80:c2:00:00:01']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPauseDstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseDstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPauseSrcCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseSrcCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "34824",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "34824",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[34824]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPauseEtherTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseEtherTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseControlOpCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "257",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseControlOpCode {
  option (msg_meta).description = "Control operation code";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "257",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[257]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPauseControlOpCodeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseControlOpCodeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseClassEnableVectorCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPauseClassEnableVector {
  option (msg_meta).description = "Destination";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPauseClassEnableVectorCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPauseClassEnableVectorCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass0Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass0 {
  option (msg_meta).description = "Pause class 0";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass0Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass0Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass1Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass1 {
  option (msg_meta).description = "Pause class 1";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass1Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass1Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass2Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass2 {
  option (msg_meta).description = "Pause class 2";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass2Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass2Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass3Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass3 {
  option (msg_meta).description = "Pause class 3";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass3Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass3Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass4Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass4 {
  option (msg_meta).description = "Pause class 4";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass4Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass4Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass5Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass5 {
  option (msg_meta).description = "Pause class 5";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass5Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass5Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass6Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass6 {
  option (msg_meta).description = "Pause class 6";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass6Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass6Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass7Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPfcPausePauseClass7 {
  option (msg_meta).description = "Pause class 7";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPfcPausePauseClass7Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPfcPausePauseClass7Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseDstCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "01:80:c2:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseDst {
  option (msg_meta).description = "Destination MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "01:80:c2:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['01:80:c2:00:00:01']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPauseDstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseDstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseSrcCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseSrc {
  option (msg_meta).description = "Source MAC address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPauseSrcCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseSrcCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseEtherTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "34824",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseEtherType {
  option (msg_meta).description = "Ethernet type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "34824",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[34824]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPauseEtherTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseEtherTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseControlOpCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseControlOpCode {
  option (msg_meta).description = "Control operation code";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPauseControlOpCodeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseControlOpCodeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseTimeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowEthernetPauseTime {
  option (msg_meta).description = "Time";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowEthernetPauseTimeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowEthernetPauseTimeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSrcPortCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSrcPort {
  option (msg_meta).description = "Source port";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpSrcPortCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpSrcPortCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDstPortCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDstPort {
  option (msg_meta).description = "Destination port";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpDstPortCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpDstPortCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSeqNumCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpSeqNum {
  option (msg_meta).description = "Sequence number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpSeqNumCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpSeqNumCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpAckNumCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpAckNum {
  option (msg_meta).description = "Acknowledgement number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpAckNumCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpAckNumCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDataOffsetCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpDataOffset {
  option (msg_meta).description = "The number of 32 bit words in the TCP header. This indicates where the data begins.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpDataOffsetCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpDataOffsetCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnNsCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnNs {
  option (msg_meta).description = "Explicit congestion notification, concealment protection.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpEcnNsCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnNsCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnCwrCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnCwr {
  option (msg_meta).description = "Explicit congestion notification, congestion window reduced.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpEcnCwrCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnCwrCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnEchoCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpEcnEcho {
  option (msg_meta).description = "Explicit congestion notification, echo. 1 indicates the peer is ecn capable. 0 indicates that a packet with ipv4.ecn = 11 in the ip header was  received during normal transmission.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpEcnEchoCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpEcnEchoCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlUrgCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlUrg {
  option (msg_meta).description = "A value of 1 indicates that the urgent pointer field is significant.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlUrgCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlUrgCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlAckCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlAck {
  option (msg_meta).description = "A value of 1 indicates that the ackknowledgment field is significant.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlAckCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlAckCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlPshCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlPsh {
  option (msg_meta).description = "Asks to push the buffered data to the receiving application. ";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlPshCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlPshCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlRstCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlRst {
  option (msg_meta).description = "Reset the connection. ";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlRstCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlRstCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlSynCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlSyn {
  option (msg_meta).description = "Synchronize sequenece numbers. ";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlSynCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlSynCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlFinCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpCtlFin {
  option (msg_meta).description = "Last packet from the sender. ";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpCtlFinCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpCtlFinCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpWindowCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowTcpWindow {
  option (msg_meta).description = "Tcp connection window.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowTcpWindowCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowTcpWindowCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpSrcPortCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpSrcPort {
  option (msg_meta).description = "Source port";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowUdpSrcPortCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpSrcPortCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpDstPortCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpDstPort {
  option (msg_meta).description = "Destination port";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowUdpDstPortCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpDstPortCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpLength {
  option (msg_meta).description = "Length";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowUdpLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowUdpLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowUdpChecksum {
  option (msg_meta).description = "UDP checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowGreChecksumPresentCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreChecksumPresent {
  option (msg_meta).description = "Checksum present bit";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGreChecksumPresentCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreChecksumPresentCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved0Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved0 {
  option (msg_meta).description = "Reserved bits";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGreReserved0Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreReserved0Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreVersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreVersion {
  option (msg_meta).description = "GRE version number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGreVersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreVersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreProtocolCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "2048",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreProtocol {
  option (msg_meta).description = "Protocol type of encapsulated payload";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "2048",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[2048]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGreProtocolCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreProtocolCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreChecksum {
  option (msg_meta).description = "Optional checksum of GRE header and payload. Only present if the checksum_present bit is set.";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowGreReserved1Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGreReserved1 {
  option (msg_meta).description = "Optional reserved field. Only present if the checksum_present bit is set.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGreReserved1Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGreReserved1Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Version {
  option (msg_meta).description = "GTPv1 version";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1VersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1VersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ProtocolType {
  option (msg_meta).description = "Protocol type, GTP is 1, GTP' is 0";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1ProtocolTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1ProtocolTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1ReservedCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Reserved {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1ReservedCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1ReservedCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1EFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1EFlag {
  option (msg_meta).description = "Extension header field present";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1EFlagCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1EFlagCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SFlag {
  option (msg_meta).description = "Sequence number field present";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1SFlagCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1SFlagCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1PnFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1PnFlag {
  option (msg_meta).description = "N-PDU field present";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1PnFlagCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1PnFlagCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageType {
  option (msg_meta).description = "The type of GTP message Different types of messages are defined in 3GPP TS 29.060 section 7.1";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1MessageTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1MessageTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1MessageLength {
  option (msg_meta).description = "The length of the payload (the bytes following the mandatory 8-byte GTP header) in bytes that includes any optional fields";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1MessageLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1MessageLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1TeidCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1Teid {
  option (msg_meta).description = "Tunnel endpoint identifier (TEID) used to multiplex connections in the same GTP tunnel";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1TeidCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1TeidCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SquenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1SquenceNumber {
  option (msg_meta).description = "Sequence number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the s_flag bit is on.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1SquenceNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1SquenceNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NPduNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NPduNumber {
  option (msg_meta).description = "N-PDU number. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the pn_flag bit is on.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1NPduNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1NPduNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NextExtensionHeaderTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv1NextExtensionHeaderType {
  option (msg_meta).description = "Next extension header. Exists if any of the e_flag, s_flag, or pn_flag bits are on.  Must be interpreted only if the e_flag bit is on.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv1NextExtensionHeaderTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv1NextExtensionHeaderTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionExtensionLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionExtensionLength {
  option (msg_meta).description = "This field states the length of this extension header,  including the length, the contents, and the next extension header field, in 4-octet units, so the length of the extension must  always be a multiple of 4.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpExtensionExtensionLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpExtensionExtensionLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionContentsCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionContents {
  option (msg_meta).description = "The extension header contents";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpExtensionContentsCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpExtensionContentsCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionNextExtensionHeaderCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpExtensionNextExtensionHeader {
  option (msg_meta).description = "It states the type of the next extension, or 0 if no next  extension exists.  This permits chaining several next extension headers.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpExtensionNextExtensionHeaderCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpExtensionNextExtensionHeaderCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "2",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "2",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[2]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2VersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2VersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2PiggybackingFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2PiggybackingFlag {
  option (msg_meta).description = "If piggybacking_flag is set to 1 then another GTP-C message with its own header shall be present at the end of the current message";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2PiggybackingFlagCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2PiggybackingFlagCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidFlagCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidFlag {
  option (msg_meta).description = "If teid_flag is set to 1 then the TEID field will be present  between the message length and the sequence number. All messages except Echo and Echo reply require TEID to be present";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2TeidFlagCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2TeidFlagCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare1Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare1 {
  option (msg_meta).description = "A 3-bit reserved field (must be 0).";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2Spare1Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2Spare1Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageType {
  option (msg_meta).description = "An 8-bit field that indicates the type of GTP message. Different types of messages are defined in 3GPP TS 29.060 section 7.1";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2MessageTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2MessageTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2MessageLength {
  option (msg_meta).description = "A 16-bit field that indicates the length of the payload in bytes, excluding the mandatory GTP-c header (first 4 bytes). Includes the TEID and sequence_number if they are present.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2MessageLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2MessageLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2TeidCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Teid {
  option (msg_meta).description = "Tunnel endpoint identifier. A 32-bit (4-octet) field used to multiplex different connections in the same GTP tunnel. Is present only if the teid_flag is set.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2TeidCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2TeidCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2SequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2SequenceNumber {
  option (msg_meta).description = "The sequence number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2SequenceNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2SequenceNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare2Counter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowGtpv2Spare2 {
  option (msg_meta).description = "Reserved field";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowGtpv2Spare2Counter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowGtpv2Spare2Counter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareType {
  option (msg_meta).description = "Network link protocol type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpHardwareTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpHardwareTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "2048",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolType {
  option (msg_meta).description = "The internetwork protocol for which the ARP request is intended";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "2048",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[2048]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpProtocolTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpProtocolTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "6",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpHardwareLength {
  option (msg_meta).description = "Length (in octets) of a hardware address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "6",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[6]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpHardwareLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpHardwareLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolLengthCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "4",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpProtocolLength {
  option (msg_meta).description = "Length (in octets) of internetwork addresses";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "4",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[4]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpProtocolLengthCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpProtocolLengthCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpOperationCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpOperation {
  option (msg_meta).description = "The operation that the sender is performing";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpOperationCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpOperationCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderHardwareAddrCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderHardwareAddr {
  option (msg_meta).description = "Media address of the sender";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpSenderHardwareAddrCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpSenderHardwareAddrCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderProtocolAddrCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpSenderProtocolAddr {
  option (msg_meta).description = "Internetwork address of the sender";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['0.0.0.0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpSenderProtocolAddrCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpSenderProtocolAddrCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetHardwareAddrCounter {
  option (msg_meta).description = "mac counter pattern";

  optional string start = 1 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "00:00:00:00:00:01",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetHardwareAddr {
  option (msg_meta).description = "Media address of the target";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "00:00:00:00:00:00",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['00:00:00:00:00:00']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpTargetHardwareAddrCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpTargetHardwareAddrCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetProtocolAddrCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowArpTargetProtocolAddr {
  option (msg_meta).description = "Internetwork address of the target";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['0.0.0.0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowArpTargetProtocolAddrCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowArpTargetProtocolAddrCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "8",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoType {
  option (msg_meta).description = "The type of ICMP echo packet";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "8",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[8]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpEchoTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoCode {
  option (msg_meta).description = "The ICMP subtype.  The default code for ICMP echo request and reply is 0.";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpEchoCodeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoCodeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoChecksum {
  option (msg_meta).description = "ICMP checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpEchoIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoIdentifier {
  option (msg_meta).description = "ICMP identifier";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpEchoIdentifierCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoIdentifierCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpEchoSequenceNumber {
  option (msg_meta).description = "ICMP sequence number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpEchoSequenceNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpEchoSequenceNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpCommonChecksum {
  option (msg_meta).description = "ICMP checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpNextFieldsIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsIdentifier {
  option (msg_meta).description = "ICMP identifier";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpNextFieldsIdentifierCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpNextFieldsIdentifierCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpNextFieldsSequenceNumber {
  option (msg_meta).description = "ICMP sequence number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpNextFieldsSequenceNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpNextFieldsSequenceNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "128",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoType {
  option (msg_meta).description = "ICMPv6 echo type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "128",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[128]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpv6EchoTypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoTypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoCodeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoCode {
  option (msg_meta).description = "ICMPv6 echo sub type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpv6EchoCodeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoCodeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoIdentifierCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoIdentifier {
  option (msg_meta).description = "ICMPv6 echo identifier";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpv6EchoIdentifierCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoIdentifierCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoSequenceNumberCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoSequenceNumber {
  option (msg_meta).description = "ICMPv6 echo sequence number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIcmpv6EchoSequenceNumberCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIcmpv6EchoSequenceNumberCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIcmpv6EchoChecksum {
  option (msg_meta).description = "ICMPv6 checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIcmpv6CommonChecksum {
  option (msg_meta).description = "ICMPv6 checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowPppAddressCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "255",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppAddress {
  option (msg_meta).description = "PPP address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "255",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[255]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPppAddressCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPppAddressCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppControlCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "3",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppControl {
  option (msg_meta).description = "PPP control";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "3",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[3]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPppControlCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPppControlCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppProtocolTypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowPppProtocolType {
  option (msg_meta).description = "PPP protocol type";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      auto = 3;
      increment = 4;
      decrement = 5;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).description = "Description missing in models"
  ];

  message Auto {
    enum Enum {
      unspecified = 0;
      auto = 1;
    }
  }
  optional Auto.Enum auto = 4 [
    (fld_meta).default = "Auto.Enum.auto",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 5 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowPppProtocolTypeCounter increment = 6 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowPppProtocolTypeCounter decrement = 7 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1VersionCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Version {
  option (msg_meta).description = "Version number";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[1]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIgmpv1VersionCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1VersionCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1TypeCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "17",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Type {
  option (msg_meta).description = "Type of message";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "17",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[17]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIgmpv1TypeCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1TypeCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1UnusedCounter {
  option (msg_meta).description = "integer counter pattern";

  optional int32 start = 1 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 step = 2 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Unused {
  option (msg_meta).description = "Unused";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 value = 2 [
    (fld_meta).default = "0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated int32 values = 3 [
    (fld_meta).default = "[0]",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIgmpv1UnusedCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1UnusedCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1Checksum {
  option (msg_meta).description = "Checksum";

  message Choice {
    enum Enum {
      unspecified = 0;
      generated = 1;
      custom = 2;
    }
  }
  Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.generated",
    (fld_meta).description = "The type of checksum"
  ];

  message Generated {
    enum Enum {
      unspecified = 0;
      good = 1;
      bad = 2;
    }
  }
  optional Generated.Enum generated = 2 [
    (fld_meta).default = "Generated.Enum.good",
    (fld_meta).description = "A system generated checksum value"
  ];

  optional int32 custom = 3 [
    (fld_meta).description = "A custom checksum value"
  ];
}

message PatternFlowIgmpv1GroupAddressCounter {
  option (msg_meta).description = "ipv4 counter pattern";

  optional string start = 1 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  optional string step = 2 [
    (fld_meta).default = "0.0.0.1",
    (fld_meta).description = "Description missing in models"
  ];

  optional int32 count = 3 [
    (fld_meta).default = "1",
    (fld_meta).description = "Description missing in models"
  ];
}

message PatternFlowIgmpv1GroupAddress {
  option (msg_meta).description = "Group address";

  message Choice {
    enum Enum {
      unspecified = 0;
      value = 1;
      values = 2;
      increment = 3;
      decrement = 4;
    }
  }
  optional Choice.Enum choice = 1 [
    (fld_meta).default = "Choice.Enum.value",
    (fld_meta).description = "Description missing in models"
  ];

  optional string value = 2 [
    (fld_meta).default = "0.0.0.0",
    (fld_meta).description = "Description missing in models"
  ];

  repeated string values = 3 [
    (fld_meta).default = "['0.0.0.0']",
    (fld_meta).description = "Description missing in models"
  ];

  optional string metric_group = 4 [
    (fld_meta).description = "A unique name is used to indicate to the system that the field may extend the metric row key and create an aggregate metric row for every unique value. To have metric group columns appear in the flow metric rows the flow metric request allows for the metric_group value to be specified as part of the request."
  ];

  optional PatternFlowIgmpv1GroupAddressCounter increment = 5 [
    (fld_meta).description = "Description missing in models"
  ];

  optional PatternFlowIgmpv1GroupAddressCounter decrement = 6 [
    (fld_meta).description = "Description missing in models"
  ];
}

message Success {
  option (msg_meta).description = "The request has succeeded with no application content but the server \nmay return a list of detailed warnings.";
  ResponseWarning response_warning = 1;
}

message BadRequest {
  option (msg_meta).description = "This indicates that the server cannot or will not process the request \ndue to something that is perceived to be a client error.\nAdditional details are in the errors.";
  ResponseError response_error = 1;
}

message InternalServerError {
  option (msg_meta).description = "This indicates that the server encountered an unexpected condition that \nprevented it from fulfilling the request.\nAdditional details are in the errors.";
  ResponseError response_error = 1;
}

message SetConfigRequest {
  Config config = 1;
}

message UpdateConfigRequest {
  Config config = 1;
}

message SetConfigResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message UpdateConfigResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message GetConfigResponse {
  message StatusCode200 {
    Config config = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message SetTransmitStateRequest {
  TransmitState transmit_state = 1;
}

message SetTransmitStateResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message SetLinkStateRequest {
  LinkState link_state = 1;
}

message SetLinkStateResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message SetCaptureStateRequest {
  CaptureState capture_state = 1;
}

message SetCaptureStateResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message SetRouteStateRequest {
  RouteState route_state = 1;
}

message SetRouteStateResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message SetProtocolStateRequest {
  ProtocolState protocol_state = 1;
}

message SetProtocolStateResponse {
  message StatusCode200 {
    Success success = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message GetMetricsRequest {
  MetricsRequest metrics_request = 1;
}

message GetMetricsResponse {
  message StatusCode200 {
    MetricsResponse metrics_response = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message GetStateMetricsResponse {
  message StatusCode200 {
    StateMetrics state_metrics = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

message GetCaptureRequest {
  CaptureRequest capture_request = 1;
}

message GetCaptureResponse {
  message StatusCode200 {
    bytes bytes = 1;
  }
  message StatusCode400 {
    BadRequest bad_request = 1;
  }
  message StatusCode500 {
    InternalServerError internal_server_error = 1;
  }
  oneof statuscode {
    StatusCode200 status_code_200 = 1;
    StatusCode400 status_code_400 = 2;
    StatusCode500 status_code_500 = 3;
  }
}

service Openapi {
  option (svc_meta).description = "Description missing in models";

  rpc SetConfig(SetConfigRequest) returns (SetConfigResponse) {
    option (rpc_meta).description = "Sets configuration resources on the traffic generator.";
  }
  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse) {
    option (rpc_meta).description = "Updates configuration resources on the traffic generator.";
  }
  rpc GetConfig(google.protobuf.Empty) returns (GetConfigResponse) {
    option (rpc_meta).description = "Description missing in models";
  }
  rpc SetTransmitState(SetTransmitStateRequest) returns (SetTransmitStateResponse) {
    option (rpc_meta).description = "Updates the state of configuration resources on the traffic generator.";
  }
  rpc SetLinkState(SetLinkStateRequest) returns (SetLinkStateResponse) {
    option (rpc_meta).description = "Updates the state of configuration resources on the traffic generator.";
  }
  rpc SetCaptureState(SetCaptureStateRequest) returns (SetCaptureStateResponse) {
    option (rpc_meta).description = "Updates the state of configuration resources on the traffic generator.";
  }
  rpc SetRouteState(SetRouteStateRequest) returns (SetRouteStateResponse) {
    option (rpc_meta).description = "Updates the state of configuration resources on the traffic generator.";
  }
  rpc SetProtocolState(SetProtocolStateRequest) returns (SetProtocolStateResponse) {
    option (rpc_meta).description = "Sets all configured protocols to intended state";
  }
  rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse) {
    option (rpc_meta).description = "Description missing in models";
  }
  rpc GetStateMetrics(google.protobuf.Empty) returns (GetStateMetricsResponse) {
    option (rpc_meta).description = "Description missing in models";
  }
  rpc GetCapture(GetCaptureRequest) returns (stream GetCaptureResponse) {
    option (rpc_meta).description = "Description missing in models";
  }
}
