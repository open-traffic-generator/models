components:
  schemas:
    Dhcpv6ClientOptions.ServerIdentifier:
      type: object
      properties:
        choice:
          description: >-
            The Identifier option is used to carry a DUID. The option code is 2. The server identifier identifies 
            a server. This option is used when client wants to contact a particular server.
          type: string
          default: duid_ll
          x-field-uid: 1
          x-enum:
            duid_llt:
              x-field-uid: 1
            duid_en:
              x-field-uid: 2
            duid_ll:
              x-field-uid: 3
            duid_uuid:
              x-field-uid: 4
        duid_llt:
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidLlt'
          x-field-uid: 2
        duid_en:
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidEn'
          x-field-uid: 3  
        duid_ll:
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidLl'
          x-field-uid: 4
        duid_uuid:
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidUuid'
          x-field-uid: 5

    Dhcpv6ClientOptions.DuidLlt:
      description: >-
        DUID based on Link Layer address plus time. Hardware Type will be auto assigned to ethernet type.
      type: object
      required: [time,link_layer_address]
      properties:
        time:
          description: |-
            The time value is the time that the DUID is generated represented in seconds since midnight (UTC), January 1, 
            2000, modulo 2^32. The DUID generatation time will the current time when dhcpv6 client contacts the server.           
          type: integer
          format: uint32
          x-field-uid: 1
        link_layer_address:
          description: |-
            The link-layer address is stored in canonical form, as described in RFC 2464.     
          $ref: '#/components/schemas/Dhcpv6ClientOptions.LinkLayerAddress'
          x-field-uid: 2

    Dhcpv6ClientOptions.DuidEn:
      description: >-
        DUID assigned by vendor based on enterprise number.
      type: object
      required: [enterprise_number,identifier]
      properties:
        enterprise_number:
          description: |-
            Vendor's registered private enterprise number as maintained by IANA.            
          type: integer
          format: uint32
          maximum: 4294967295
          x-field-uid: 1
        identifier:
          description: |-
            The unique identifier assigned by the vendor.           
          type: string
          format: hex          
          minLength: 1
          maxLength: 8
          x-field-uid: 2

    Dhcpv6ClientOptions.DuidLl:
      description: >-
        DUID based on Link Layer address. Hardware Type will be auto assigned to ethernet type.
      type: object
      required: [link_layer_address]
      properties:
       link_layer_address:
          description: |-
            The link-layer address is stored in canonical form, as described in RFC 2464.           
          $ref: '#/components/schemas/Dhcpv6ClientOptions.LinkLayerAddress'
          x-field-uid: 1   
   
    Dhcpv6ClientOptions.DuidUuid:
      description: >-
        DUID embedded a Universally Unique IDentifier (UUID). A UUID is an identifier that is unique across both 
        space and time, with respect to the space of all UUIDs.
      type: object
      properties:
        version:
          description: |-
            The version number is in the most significant 4 bits of the timestamp (bits 4 through 7 of the time_hi_and_version field).           
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidUuidVersion'
          x-field-uid: 1
        variant:
          description: |-
            The variant field determines the layout of the UUID. It is multiplexed with clock_seq_hi_and_reserved.           
          $ref: '#/components/schemas/Dhcpv6ClientOptions.DuidUuidVariant'
          x-field-uid: 2   
        time_low:
          description: |-
            The low field of the timestamp.            
          type: integer
          format: uint32
          default: 0
          x-field-uid: 3
        time_mid:
          description: |-
            The middle field of the timestamp.            
          type: integer
          format: uint32
          default: 0
          maximum: 65535
          x-field-uid: 4
        time_hi_and_version:
          description: |-
            The high field of the timestamp multiplexed with the version number.            
          type: integer
          format: uint32
          default: 0
          maximum: 4095
          x-field-uid: 5
        clock_seq_hi_and_reserved:
          description: |-
            The high field of the clock sequence multiplexed with the variant.     
          type: integer
          format: uint32
          default: 0
          maximum: 31
          x-field-uid: 6
        clock_seq_low:
          description: |-
            The low field of the clock sequence.     
          type: integer
          format: uint32
          default: 0
          maximum: 127
          x-field-uid: 7
        node:
          description: |-
            The spatially unique node identifier.     
          type: string
          format: mac
          default: "00:00:00:00:00:00"
          x-field-uid: 8

    Dhcpv6ClientOptions.DuidUuidVersion:
      description: >-
        The version number is in the most significant 4 bits of the timestamp (bits 4 through 7 of the time_hi_and_version field).
      type: object
      properties:
        choice:
          description: >-
            The version values are from 1 to 5 in the most significant 4 bits of the timestamp (bits 4 through 7 of the 
            time_hi_and_version field).
          type: string
          default: v_1
          x-field-uid: 1
          x-enum:
            v_1:
              x-field-uid: 1
            v_2:
              x-field-uid: 2
            v_3:
              x-field-uid: 3
            v_4:
              x-field-uid: 4
            v_5:
              x-field-uid: 5
          
    Dhcpv6ClientOptions.DuidUuidVariant:
      description: >-
        The variant field determines the layout of the UUID.  That is, the interpretation of all other bits in the 
        UUID depends on the setting of the bits in the variant field).
      type: object
      properties:
        choice:
          description: >-
            The current variants are ncs, dce,microsoft guid and reserved.
          type: string
          default: ncs
          x-field-uid: 1
          x-enum:
            ncs:
              x-field-uid: 1
            dce:
              x-field-uid: 2
            guid:
              x-field-uid: 3
            var_reserved:
              x-field-uid: 4

    Dhcpv6ClientOptions.LinkLayerAddress:
      description: >-
        The link-layer address configured in DUID llt or DUID ll.
      type: object
      required: [value]
      properties:
        value:
          description: >-
            The MAC address that becomes part of DUID llt or DUID ll.
          type: string
          format: mac
          x-field-uid: 3

    Dhcpv6ClientOptions.OptionsRequest:
      type: object
      required: [associated_dhcp_messages]
      properties:
        choice:
          description: >-
            The Option Request option is used to identify a list of options in a message between a client and a server. The 
            option code is 6.
            - Vendor_specific information option, requested by clients for vendor-specific informations from servers.
            - DNS Recursive Name Server Option, requested by clients to get the list ofIPv6 addresses of DNS recursive name 
              servers to which DNS queries may be sent by the client resolver in order of preference.
            - Client FQDN option - indicates whether the client or the DHCP server should update DNS with the AAAA record 
              corresponding to the assigned IPv6 address and the FQDN provided in this option. The DHCP server always updates 
              the PTR record.
            - bootfile_url, if client is configured for network booting then the client must use this option to obtain the boot 
              file url from the server.
            - sztp. Securely provision a networking device when it is booting in a factory-default state.
          type: string
          default: vendor_information
          x-field-uid: 1
          x-enum:
            vendor_information:
              x-field-uid: 1
            name_servers:
              x-field-uid: 2
            fqdn:
              x-field-uid: 3
            bootfile_url:
              x-field-uid: 4
            sztp:
              x-field-uid: 5
            custom:
              x-field-uid: 6
        custom:
          $ref: '#/components/schemas/Dhcpv6ClientOptions.Custom'
          x-field-uid: 2
        associated_dhcp_messages: 
          description: >-
            The list of dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ClientOptions.IncludedMessages'
          x-field-uid: 3

    Dhcpv6ClientOptions.Custom:
      description: >-
        The Custom option is used to provide a not so well known option in the message between a client and a server.
      type: object
      required: [type]
      properties:
        type:
          description: >-
            The type of the Custom option TLV.
          type: integer
          format: uint32
          maximum: 65535
          x-field-uid: 1  

    Dhcpv6ClientOptions.VendorClass:
      description: >-
        This option is used by a client to identify the vendor that manufactured the hardware on which the client is running. The
        option code is 16.
      type: object
      required: [enterprise_number,class_data,associated_dhcp_messages]
      properties:
        enterprise_number:
          description: >-
            The vendor's registered Enterprise Number as registered with IANA.
          type: integer
          format: uint32
          maximum: 4294967295
          x-field-uid: 1
        class_data: 
          description: >-
            The opaque data representing the hardware configuration of the host on which the client is running. Examples of 
            class data instances might include the version of the operating system the client is running or the amount of memory 
            installed on the client.
          type: array
          items:
            type: string
          x-field-uid: 2
        associated_dhcp_messages: 
          description: >-
            The dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ClientOptions.IncludedMessages'
          x-field-uid: 3

    Dhcpv6ClientOptions.IncludedMessages:
      description: >-
        The dhcpv6 client messages where the option will be included. If all is selected the selected option will be
        added in the all the Dhcpv6 client messages, else based on the selection in particular Dhcpv6 client messages
        the option will be included.
      type: object
      properties:
        choice:
          description: >-
            The client message name where the option is included, by default it is all.
          type: string
          default: all
          x-field-uid: 1
          x-enum:
            all:
              x-field-uid: 1
            msg_types:
              x-field-uid: 2
        msg_types:
          description: >-
            User must specify the Dhcpv6 message type.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6ClientOptions.MessageType'
          x-field-uid: 2

    Dhcpv6ClientOptions.MessageType:
      description: >-
        The dhcpv6 client messages where the option will be included.
      type: object
      properties:
        choice:
          description: >-
            The client message name where the option is included, by default it is all.
          type: string
          default: solicit
          x-field-uid: 1
          x-enum:
            solicit:
              x-field-uid: 1
            request:
              x-field-uid: 2
            inform_request:
              x-field-uid: 3
            release:
              x-field-uid: 4
            renew:
              x-field-uid: 5
            rebind:
              x-field-uid: 6


    Dhcpv6ClientOptions.VendorInfo:
      description: >-
        This option is used by clients to exchange vendor-specific information. The option code is 17.
      type: object
      required: [enterprise_number,option_data,associated_dhcp_messages]
      properties:
        enterprise_number:
          description: >-
            The vendor's registered Enterprise Number as registered with IANA.
          type: integer
          format: uint32
          maximum: 4294967295
          x-field-uid: 1
        option_data: 
          description: >-
            An opaque object of octets,interpreted by vendor-specific code on the clients and servers.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6Options.VendorSpecificOptions'
          x-field-uid: 2
        associated_dhcp_messages: 
          description: >-
            The list of dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ClientOptions.IncludedMessages'
          x-field-uid: 3

    Dhcpv6ServerOptions.VendorInfo:
      description: >-
        This option is used by servers to exchange vendor-specific information. The option code is 17.
      type: object
      required: [enterprise_number,option_data,associated_dhcp_messages]
      properties:
        enterprise_number:
          description: >-
            The vendor's registered Enterprise Number as registered with IANA.
          type: integer
          format: uint32
          maximum: 4294967295
          x-field-uid: 1
        option_data: 
          description: >-
            An opaque object of octets,interpreted by vendor-specific code on the clients and servers.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6Options.VendorSpecificOptions'
          x-field-uid: 2
        associated_dhcp_messages: 
          description: >-
            The list of dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ServerOptions.IncludedMessages'
          x-field-uid: 3  

    Dhcpv6ServerOptions.IncludedMessages:
      description: >-
        The dhcpv6 server messages where the option will be included. If all is selected the selected option will be added 
        in the all the Dhcpv6 server messages, else based on the selection in particular Dhcpv6 server messages the option 
        will be included.
      type: object
      properties:
        choice:
          description: >-
            The server message name where the option is included, by default it is all.
          type: string
          default: all
          x-field-uid: 1
          x-enum:
            all:
              x-field-uid: 1
            msg_types:
              x-field-uid: 2
        msg_types:
          description: >-
            User must specify the Dhcpv6 message type.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6ServerOptions.MessageType'
          x-field-uid: 2

    Dhcpv6ServerOptions.MessageType:
      description: >-
        The dhcpv6 server messages where the option will be included.
      type: object
      properties:
        choice:
          description: >-
            The server message name where the option is included, by default it is all.
          type: string
          default: advertise
          x-field-uid: 1
          x-enum:
            advertise:
              x-field-uid: 1
            reply:
              x-field-uid: 2
            re_configure:
              x-field-uid: 3

    Dhcpv6Options.VendorSpecificOptions:
      description: >-
        The encapsulated vendor-specific options field is encoded as a sequence of code/length/value fields of 
        identical format to the DHCP options field. The option codes are defined by the vendor identified in the 
        enterprise-number field and are not managed by IANA.
      type: object
      required: [code,data]
      properties:
        code:
          description: >-
            The code for the encapsulated option.
          type: integer
          format: uint32
          maximum: 65535
          x-field-uid: 1  
        data:
          description: >-
            The data for the encapsulated option.
          type: string
          x-field-uid: 2

    Dhcpv6ClientOptions.Fqdn:
      description: >-
        DHCPv6 server needs to know the FQDN of the client for the addresses for the client's IA_NA bindings in order to
        update the IPv6-address-to-FQDN mapping. This option allows the client to convey its FQDN to the server. The Client 
        FQDN option also contains Flags that DHCPv6 clients and servers use to negotiate who does which updates. The option
        code is 39.
      type: object
      required: [domain_name]
      properties:
        flag_s:
          description: >-
            The "S" bit indicates whether the server should or should not perform the AAAA RR (FQDN-to-address) DNS updates. 
            A client sets the bit to 0 to indicate that the server should not perform the updates and 1 to indicate that the 
            server should perform the updates. The state of the bit in the reply from the server indicates the action to be 
            taken by the server. If it is 1, the server has taken responsibility for AAAA RR updates for the FQDN.
          type: boolean
          default: true
          x-field-uid: 1
        flag_o:
          description: >-
            The "O" bit indicates whether the server has overridden the client's preference for the "S" bit. A client must set this 
            bit to 0. A server must set this bit to 1 if the "S" bit in its reply to the client does not match the "S" bit received 
            from the client.
          type: boolean
          default: false
          x-field-uid: 2
        flag_n:
          description: >-
            The "N" bit indicates whether the server should not perform any DNS updates. A client sets this bit to 0 to request that 
            the server should perform updates (the PTR RR and possibly the AAAA RR based on the "S" bit) or to 1 to request that the 
            server should not perform any DNS updates. A server sets the "N" bit to indicate whether the server shall (0) or shall not (1) 
            perform DNS updates. If the "N" bit is 1, the "S" bit MUST be 0.
          type: boolean
          default: false
          x-field-uid: 3
        domain_name:
          description: >-
            The Domain Name part of the option carries all or part of the FQDN of a DHCPv6 client. A client MAY also leave the 
            Domain Name field empty if it desires the server to provide a name. A fully qualified domain name (FQDN) is the complete 
            address of an internet host or computer. It provides its exact location within the domain name system (DNS) by specifying 
            the hostname, domain name and top-level domain (TLD). An FQDN isn't the same as a URL but rather is a part of it that fully 
            identifies the server to which the request is addressed. An FQDN doesn't carry the TCP/IP protocol information, such as Hypertext 
            Transfer Protocol (HTTP) or Hypertext Transfer Protocol Secure (HTTPS), which is always used at the beginning of a URL. Therefore, 
            adding the prefix http:// or https:// to the FQDN turns it into a full URL. One example can be microsoft.com.
          type: string
          x-field-uid: 4
        associated_dhcp_messages: 
          description: >-
            The list of dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ClientOptions.IncludedMessages'
          x-field-uid: 5

    Dhcpv6ServerOptions.BootfileUrl:
      description: >-
        The server sends this option to inform the client about a URL to a boot file. This information is required for booting 
        over the network includes the details about the server on which the boot files can be found, the protocol to be used for 
        the download (for example,HTTP or TFTP, and the path and name of the boot file on the server. The option code is 59. The
        URL will contain the network communication protocol, a subdomain, a domain name, and its extension. If the host in the URL 
        is expressed using an IPv6 address rather than a domain name, the address in the URL then must be enclosed in "[" and "]" 
        characters, conforming to [RFC3986]. Eg of a boot file url can be "tftp://[xxxx:xxxx:xxxx:xxxx::xxxx]/mboot.efi".
      type: object
      required: [url]
      properties:
        url:
          description: |-
            The URL for the boot file. It must comply with STD 66 format.
          type: string
          x-field-uid: 1
        bootfile_params: 
          description: >-
            They are used to specify parameters for the boot file (similar to the command line arguments in most modern operating 
            systems). For example, these parameters could be used to specify the root file system of the OS kernel, or the location 
            from which a second-stage boot-loader program can download its configuration file.
          type: array
          items:
            $ref: '#/components/schemas/Dhcpv6ServerOptions.BootFileParams'
          x-field-uid: 2
        associated_dhcp_messages: 
          description: >-
            The list of dhcpv6 client messages where this option is included.
          $ref: '#/components/schemas/Dhcpv6ServerOptions.IncludedMessages'
          x-field-uid: 3

    Dhcpv6ServerOptions.BootFileParams:
      description: >-
        The option code is 60. They are used to specify parameters for the boot file (similar to the command line arguments in most 
        modern operating systems).  For example, these parameters could be used to specify the root file system of the OS kernel, or 
        the location from which a second-stage boot-loader program can download its configuration file.
      type: object
      required: [parameter]
      properties:
        parameter:
          description: >-
            UTF-8 strings are parameters needed for booting, e.g., kernel parameters.
          type: string
          x-field-uid: 1